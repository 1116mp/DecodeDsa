{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\LinkedListVisualizerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { List, Plus, Minus, Edit, RefreshCcw, ArrowLeftRight, ChevronRight, ChevronLeft, Repeat } from \"lucide-react\";\n\n// Node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst operations = [{\n  name: \"Insert at Beginning\",\n  description: \"Insert a node at the start of the list.\"\n}, {\n  name: \"Insert at End\",\n  description: \"Insert a node at the end of the list.\"\n}, {\n  name: \"Insert at Position\",\n  description: \"Insert a node at a specific position.\"\n}, {\n  name: \"Delete at Beginning\",\n  description: \"Delete the first node.\"\n}, {\n  name: \"Delete at End\",\n  description: \"Delete the last node.\"\n}, {\n  name: \"Delete at Position\",\n  description: \"Delete a node at a specific position.\"\n}, {\n  name: \"Modify\",\n  description: \"Modify the value of a node at a specific position.\"\n}, {\n  name: \"Reverse\",\n  description: \"Reverse the linked list.\"\n}];\nfunction LinkedListVisualizerPage() {\n  _s();\n  const [listType, setListType] = useState(\"singly\");\n  const [head, setHead] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [position, setPosition] = useState(1);\n  const [operationHistory, setOperationHistory] = useState([]);\n  const [currentCode, setCurrentCode] = useState(\"\");\n\n  // Helper to create a new node\n  const createNode = value => ({\n    value,\n    next: null\n  });\n  const createDoublyNode = value => ({\n    value,\n    next: null,\n    prev: null\n  });\n\n  // Convert list to array for rendering\n  const toArray = () => {\n    const arr = [];\n    let curr = head;\n    if (!curr) return arr;\n    if (listType === \"circular\") {\n      do {\n        arr.push(curr);\n        curr = curr.next;\n      } while (curr && curr !== head);\n    } else {\n      while (curr) {\n        arr.push(curr);\n        curr = curr.next;\n      }\n    }\n    return arr;\n  };\n\n  // Operations\n  const insertAtBeginning = value => {\n    let newNode;\n    if (listType === \"doubly\") {\n      newNode = createDoublyNode(value);\n      if (head) head.prev = newNode;\n      newNode.next = head;\n    } else {\n      newNode = createNode(value);\n      newNode.next = head;\n    }\n    if (listType === \"circular\") {\n      if (!head) {\n        newNode.next = newNode;\n      } else {\n        let tail = head;\n        while (tail.next && tail.next !== head) tail = tail.next;\n        tail.next = newNode;\n        newNode.next = head;\n      }\n    }\n    setHead(newNode);\n    setOperationHistory(h => [`Inserted ${value} at beginning`, ...h]);\n    setCurrentCode(`function insertAtBeginning(value) { ... }`);\n  };\n  const insertAtEnd = value => {\n    let newNode;\n    if (listType === \"doubly\") newNode = createDoublyNode(value);else newNode = createNode(value);\n    if (!head) {\n      if (listType === \"circular\") newNode.next = newNode;\n      setHead(newNode);\n      setOperationHistory(h => [`Inserted ${value} at end (was empty)`, ...h]);\n      setCurrentCode(`function insertAtEnd(value) { ... }`);\n      return;\n    }\n    let curr = head;\n    if (listType === \"circular\") {\n      while (curr.next && curr.next !== head) curr = curr.next;\n      curr.next = newNode;\n      newNode.next = head;\n    } else {\n      while (curr.next) curr = curr.next;\n      curr.next = newNode;\n    }\n    if (listType === \"doubly\") newNode.prev = curr;\n    setOperationHistory(h => [`Inserted ${value} at end`, ...h]);\n    setCurrentCode(`function insertAtEnd(value) { ... }`);\n  };\n  const insertAtPosition = (value, pos) => {\n    if (pos <= 1) return insertAtBeginning(value);\n    let newNode;\n    if (listType === \"doubly\") newNode = createDoublyNode(value);else newNode = createNode(value);\n    let curr = head;\n    let prev = null;\n    let i = 1;\n    while (curr && i < pos) {\n      prev = curr;\n      curr = curr.next;\n      i++;\n    }\n    if (prev) prev.next = newNode;\n    newNode.next = curr;\n    if (listType === \"doubly\") {\n      newNode.prev = prev;\n      if (curr) curr.prev = newNode;\n    }\n    setOperationHistory(h => [`Inserted ${value} at position ${pos}`, ...h]);\n    if (pos === 1) setHead(newNode);else setHead(head);\n    setCurrentCode(`function insertAtPosition(value, pos) { ... }`);\n  };\n  const deleteAtBeginning = () => {\n    if (!head) return;\n    let newHead = head.next;\n    if (listType === \"circular\") {\n      if (head.next === head) newHead = null;else {\n        let tail = head;\n        while (tail.next && tail.next !== head) tail = tail.next;\n        tail.next = head.next;\n        newHead = head.next;\n      }\n    }\n    setOperationHistory(h => [`Deleted node at beginning`, ...h]);\n    setHead(newHead);\n    setCurrentCode(`function deleteAtBeginning() { ... }`);\n  };\n  const deleteAtEnd = () => {\n    if (!head) return;\n    if (!head.next || listType === \"circular\" && head.next === head) {\n      setHead(null);\n      setOperationHistory(h => [`Deleted last node`, ...h]);\n      setCurrentCode(`function deleteAtEnd() { ... }`);\n      return;\n    }\n    let curr = head;\n    let prev = null;\n    while (curr.next && curr.next !== head) {\n      prev = curr;\n      curr = curr.next;\n    }\n    if (prev) prev.next = listType === \"circular\" ? head : null;\n    setOperationHistory(h => [`Deleted node at end`, ...h]);\n    setHead(head);\n    setCurrentCode(`function deleteAtEnd() { ... }`);\n  };\n  const deleteAtPosition = pos => {\n    if (!head) return;\n    if (pos <= 1) return deleteAtBeginning();\n    let curr = head;\n    let prev = null;\n    let i = 1;\n    while (curr && i < pos) {\n      prev = curr;\n      curr = curr.next;\n      i++;\n    }\n    if (!curr) return;\n    if (prev) prev.next = curr.next;\n    if (listType === \"doubly\" && curr.next) curr.next.prev = prev;\n    setOperationHistory(h => [`Deleted node at position ${pos}`, ...h]);\n    setHead(head);\n    setCurrentCode(`function deleteAtPosition(pos) { ... }`);\n  };\n  const modifyAtPosition = (pos, value) => {\n    let curr = head;\n    let i = 1;\n    while (curr && i < pos) {\n      curr = curr.next;\n      i++;\n    }\n    if (!curr) return;\n    curr.value = value;\n    setOperationHistory(h => [`Modified node at position ${pos} to ${value}`, ...h]);\n    setCurrentCode(`function modifyAtPosition(pos, value) { ... }`);\n    setHead({\n      ...head\n    }); // force re-render\n  };\n  const reverseList = () => {\n    let prev = null;\n    let curr = head;\n    let next = null;\n    if (listType === \"circular\") {\n      if (!head || head.next === head) return;\n      let tail = head;\n      while (tail.next && tail.next !== head) tail = tail.next;\n      tail.next = null;\n      // Now treat as singly\n    }\n    while (curr) {\n      next = curr.next;\n      curr.next = prev;\n      if (listType === \"doubly\") curr.prev = next;\n      prev = curr;\n      curr = next;\n    }\n    if (listType === \"circular\" && prev) {\n      let tail = prev;\n      while (tail.next) tail = tail.next;\n      tail.next = prev;\n    }\n    setOperationHistory(h => [`Reversed the list`, ...h]);\n    setHead(prev);\n    setCurrentCode(`function reverseList() { ... }`);\n  };\n\n  // UI Handlers\n  const handleInsertBeginning = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtBeginning(val);\n    setInputValue(\"\");\n  };\n  const handleInsertEnd = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtEnd(val);\n    setInputValue(\"\");\n  };\n  const handleInsertPosition = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtPosition(val, position);\n    setInputValue(\"\");\n  };\n  const handleDeleteBeginning = () => deleteAtBeginning();\n  const handleDeleteEnd = () => deleteAtEnd();\n  const handleDeletePosition = () => deleteAtPosition(position);\n  const handleModify = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) modifyAtPosition(position, val);\n    setInputValue(\"\");\n  };\n  const handleReverse = () => reverseList();\n\n  // Render\n  const nodes = toArray();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-4xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4 flex items-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(List, {\n        className: \"w-8 h-8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), \" Linked List Visualizer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-lg ${listType === \"singly\" ? \"bg-blue-600 text-white\" : \"bg-gray-200\"}`,\n        onClick: () => setListType(\"singly\"),\n        children: \"Singly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-lg ${listType === \"doubly\" ? \"bg-purple-600 text-white\" : \"bg-gray-200\"}`,\n        onClick: () => setListType(\"doubly\"),\n        children: \"Doubly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-lg ${listType === \"circular\" ? \"bg-green-600 text-white\" : \"bg-gray-200\"}`,\n        onClick: () => setListType(\"circular\"),\n        children: \"Circular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"border px-2 py-1 rounded w-24\",\n        placeholder: \"Value\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"border px-2 py-1 rounded w-24\",\n        placeholder: \"Position\",\n        value: position,\n        min: 1,\n        onChange: e => setPosition(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertBeginning,\n        className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), \" Insert at Beginning\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertEnd,\n        className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), \" Insert at End\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInsertPosition,\n        className: \"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700\",\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this), \" Insert at Position\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteBeginning,\n        className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\",\n        children: [/*#__PURE__*/_jsxDEV(Minus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), \" Delete at Beginning\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteEnd,\n        className: \"px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700\",\n        children: [/*#__PURE__*/_jsxDEV(Minus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), \" Delete at End\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeletePosition,\n        className: \"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700\",\n        children: [/*#__PURE__*/_jsxDEV(Minus, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), \" Delete at Position\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleModify,\n        className: \"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\",\n        children: [/*#__PURE__*/_jsxDEV(Edit, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this), \" Modify\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReverse,\n        className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700\",\n        children: [/*#__PURE__*/_jsxDEV(RefreshCcw, {\n          className: \"w-5 h-5 inline mr-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), \" Reverse\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-4 mb-8 overflow-x-auto\",\n      children: nodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"List is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this) : nodes.map((node, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-blue-100 border-2 border-blue-400 rounded-lg px-4 py-2 text-lg font-bold relative\",\n          children: [listType === \"doubly\" && /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            className: \"w-4 h-4 text-purple-500 absolute left-0 top-1/2 -translate-y-1/2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 43\n          }, this), node.value, /*#__PURE__*/_jsxDEV(ChevronRight, {\n            className: \"w-4 h-4 text-blue-500 absolute right-0 top-1/2 -translate-y-1/2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 15\n        }, this), idx !== nodes.length - 1 && /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n          className: \"w-6 h-6 text-gray-400 mx-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 44\n        }, this), listType === \"circular\" && idx === nodes.length - 1 && /*#__PURE__*/_jsxDEV(Repeat, {\n          className: \"w-6 h-6 text-green-500 mx-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 17\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-4 border mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"font-semibold mb-2\",\n        children: \"Operation History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"text-sm text-gray-700 space-y-1\",\n        children: operationHistory.slice(0, 8).map((op, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: op\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-blue-100 border-2 border-blue-400 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(ChevronRight, {\n          className: \"w-4 h-4 text-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Next Pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), listType === \"doubly\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n          className: \"w-4 h-4 text-purple-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Prev Pointer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), listType === \"circular\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Repeat, {\n          className: \"w-4 h-4 text-green-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Points to Head\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"bg-gray-100 rounded p-2 text-xs overflow-x-auto mb-4\",\n      children: currentCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 296,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkedListVisualizerPage, \"BS6bmZ+FNhOEBjh/47shtOOow8g=\");\n_c = LinkedListVisualizerPage;\nexport default LinkedListVisualizerPage;\nvar _c;\n$RefreshReg$(_c, \"LinkedListVisualizerPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","List","Plus","Minus","Edit","RefreshCcw","ArrowLeftRight","ChevronRight","ChevronLeft","Repeat","jsxDEV","_jsxDEV","Fragment","_Fragment","operations","name","description","LinkedListVisualizerPage","listType","setListType","head","setHead","inputValue","setInputValue","position","setPosition","operationHistory","setOperationHistory","currentCode","setCurrentCode","createNode","value","next","createDoublyNode","prev","toArray","arr","curr","push","insertAtBeginning","newNode","tail","h","insertAtEnd","insertAtPosition","pos","i","deleteAtBeginning","newHead","deleteAtEnd","deleteAtPosition","modifyAtPosition","reverseList","handleInsertBeginning","val","parseInt","isNaN","handleInsertEnd","handleInsertPosition","handleDeleteBeginning","handleDeleteEnd","handleDeletePosition","handleModify","handleReverse","nodes","className","children","fileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","min","Number","length","map","node","idx","slice","op","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/LinkedListVisualizerPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { List, Plus, Minus, Edit, RefreshCcw, ArrowLeftRight, ChevronRight, ChevronLeft, Repeat } from \"lucide-react\";\r\n\r\n// Node types\r\ninterface ListNode {\r\n  value: number;\r\n  next: ListNode | null;\r\n  prev?: ListNode | null; // For doubly linked list\r\n}\r\n\r\ntype ListType = \"singly\" | \"doubly\" | \"circular\";\r\n\r\ninterface Operation {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nconst operations: Operation[] = [\r\n  { name: \"Insert at Beginning\", description: \"Insert a node at the start of the list.\" },\r\n  { name: \"Insert at End\", description: \"Insert a node at the end of the list.\" },\r\n  { name: \"Insert at Position\", description: \"Insert a node at a specific position.\" },\r\n  { name: \"Delete at Beginning\", description: \"Delete the first node.\" },\r\n  { name: \"Delete at End\", description: \"Delete the last node.\" },\r\n  { name: \"Delete at Position\", description: \"Delete a node at a specific position.\" },\r\n  { name: \"Modify\", description: \"Modify the value of a node at a specific position.\" },\r\n  { name: \"Reverse\", description: \"Reverse the linked list.\" },\r\n];\r\n\r\nfunction LinkedListVisualizerPage() {\r\n  const [listType, setListType] = useState<ListType>(\"singly\");\r\n  const [head, setHead] = useState<ListNode | null>(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [position, setPosition] = useState(1);\r\n  const [operationHistory, setOperationHistory] = useState<string[]>([]);\r\n  const [currentCode, setCurrentCode] = useState<string>(\"\");\r\n\r\n  // Helper to create a new node\r\n  const createNode = (value: number): ListNode => ({ value, next: null });\r\n  const createDoublyNode = (value: number): ListNode => ({ value, next: null, prev: null });\r\n\r\n  // Convert list to array for rendering\r\n  const toArray = (): ListNode[] => {\r\n    const arr: ListNode[] = [];\r\n    let curr = head;\r\n    if (!curr) return arr;\r\n    if (listType === \"circular\") {\r\n      do {\r\n        arr.push(curr);\r\n        curr = curr.next;\r\n      } while (curr && curr !== head);\r\n    } else {\r\n      while (curr) {\r\n        arr.push(curr);\r\n        curr = curr.next;\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  // Operations\r\n  const insertAtBeginning = (value: number) => {\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") {\r\n      newNode = createDoublyNode(value);\r\n      if (head) (head as ListNode).prev = newNode;\r\n      newNode.next = head;\r\n    } else {\r\n      newNode = createNode(value);\r\n      newNode.next = head;\r\n    }\r\n    if (listType === \"circular\") {\r\n      if (!head) {\r\n        newNode.next = newNode;\r\n      } else {\r\n        let tail = head;\r\n        while (tail.next && tail.next !== head) tail = tail.next;\r\n        tail.next = newNode;\r\n        newNode.next = head;\r\n      }\r\n    }\r\n    setHead(newNode);\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at beginning`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function insertAtBeginning(value) { ... }`);\r\n  };\r\n\r\n  const insertAtEnd = (value: number) => {\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") newNode = createDoublyNode(value);\r\n    else newNode = createNode(value);\r\n    if (!head) {\r\n      if (listType === \"circular\") newNode.next = newNode;\r\n      setHead(newNode);\r\n      setOperationHistory((h) => [\r\n        `Inserted ${value} at end (was empty)`,\r\n        ...h,\r\n      ]);\r\n      setCurrentCode(`function insertAtEnd(value) { ... }`);\r\n      return;\r\n    }\r\n    let curr = head;\r\n    if (listType === \"circular\") {\r\n      while (curr.next && curr.next !== head) curr = curr.next;\r\n      curr.next = newNode;\r\n      newNode.next = head;\r\n    } else {\r\n      while (curr.next) curr = curr.next;\r\n      curr.next = newNode;\r\n    }\r\n    if (listType === \"doubly\") newNode.prev = curr;\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at end`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function insertAtEnd(value) { ... }`);\r\n  };\r\n\r\n  const insertAtPosition = (value: number, pos: number) => {\r\n    if (pos <= 1) return insertAtBeginning(value);\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") newNode = createDoublyNode(value);\r\n    else newNode = createNode(value);\r\n    let curr: ListNode | null = head;\r\n    let prev: ListNode | null = null;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (prev) prev.next = newNode;\r\n    newNode.next = curr;\r\n    if (listType === \"doubly\") {\r\n      newNode.prev = prev;\r\n      if (curr) curr.prev = newNode;\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at position ${pos}`,\r\n      ...h,\r\n    ]);\r\n    if (pos === 1) setHead(newNode);\r\n    else setHead(head);\r\n    setCurrentCode(`function insertAtPosition(value, pos) { ... }`);\r\n  };\r\n\r\n  const deleteAtBeginning = () => {\r\n    if (!head) return;\r\n    let newHead = head.next;\r\n    if (listType === \"circular\") {\r\n      if (head.next === head) newHead = null;\r\n      else {\r\n        let tail = head;\r\n        while (tail.next && tail.next !== head) tail = tail.next;\r\n        tail.next = head.next;\r\n        newHead = head.next;\r\n      }\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Deleted node at beginning`,\r\n      ...h,\r\n    ]);\r\n    setHead(newHead);\r\n    setCurrentCode(`function deleteAtBeginning() { ... }`);\r\n  };\r\n\r\n  const deleteAtEnd = () => {\r\n    if (!head) return;\r\n    if (!head.next || (listType === \"circular\" && head.next === head)) {\r\n      setHead(null);\r\n      setOperationHistory((h) => [\r\n        `Deleted last node`,\r\n        ...h,\r\n      ]);\r\n      setCurrentCode(`function deleteAtEnd() { ... }`);\r\n      return;\r\n    }\r\n    let curr = head;\r\n    let prev: ListNode | null = null;\r\n    while (curr.next && curr.next !== head) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n    }\r\n    if (prev) prev.next = listType === \"circular\" ? head : null;\r\n    setOperationHistory((h) => [\r\n      `Deleted node at end`,\r\n      ...h,\r\n    ]);\r\n    setHead(head);\r\n    setCurrentCode(`function deleteAtEnd() { ... }`);\r\n  };\r\n\r\n  const deleteAtPosition = (pos: number) => {\r\n    if (!head) return;\r\n    if (pos <= 1) return deleteAtBeginning();\r\n    let curr: ListNode | null = head;\r\n    let prev: ListNode | null = null;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (!curr) return;\r\n    if (prev) prev.next = curr.next;\r\n    if (listType === \"doubly\" && curr.next) (curr.next as ListNode).prev = prev;\r\n    setOperationHistory((h) => [\r\n      `Deleted node at position ${pos}`,\r\n      ...h,\r\n    ]);\r\n    setHead(head);\r\n    setCurrentCode(`function deleteAtPosition(pos) { ... }`);\r\n  };\r\n\r\n  const modifyAtPosition = (pos: number, value: number) => {\r\n    let curr = head;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (!curr) return;\r\n    curr.value = value;\r\n    setOperationHistory((h) => [\r\n      `Modified node at position ${pos} to ${value}`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function modifyAtPosition(pos, value) { ... }`);\r\n    setHead({ ...head! }); // force re-render\r\n  };\r\n\r\n  const reverseList = () => {\r\n    let prev: ListNode | null = null;\r\n    let curr = head;\r\n    let next: ListNode | null = null;\r\n    if (listType === \"circular\") {\r\n      if (!head || head.next === head) return;\r\n      let tail = head;\r\n      while (tail.next && tail.next !== head) tail = tail.next;\r\n      tail.next = null;\r\n      // Now treat as singly\r\n    }\r\n    while (curr) {\r\n      next = curr.next;\r\n      curr.next = prev;\r\n      if (listType === \"doubly\") curr.prev = next;\r\n      prev = curr;\r\n      curr = next;\r\n    }\r\n    if (listType === \"circular\" && prev) {\r\n      let tail = prev;\r\n      while (tail.next) tail = tail.next;\r\n      tail.next = prev;\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Reversed the list`,\r\n      ...h,\r\n    ]);\r\n    setHead(prev);\r\n    setCurrentCode(`function reverseList() { ... }`);\r\n  };\r\n\r\n  // UI Handlers\r\n  const handleInsertBeginning = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtBeginning(val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleInsertEnd = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtEnd(val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleInsertPosition = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtPosition(val, position);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleDeleteBeginning = () => deleteAtBeginning();\r\n  const handleDeleteEnd = () => deleteAtEnd();\r\n  const handleDeletePosition = () => deleteAtPosition(position);\r\n  const handleModify = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) modifyAtPosition(position, val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleReverse = () => reverseList();\r\n\r\n  // Render\r\n  const nodes = toArray();\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-4xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4 flex items-center gap-2\">\r\n        <List className=\"w-8 h-8\" /> Linked List Visualizer\r\n      </h1>\r\n      <div className=\"mb-4 flex gap-2\">\r\n        <button\r\n          className={`px-4 py-2 rounded-lg ${listType === \"singly\" ? \"bg-blue-600 text-white\" : \"bg-gray-200\"}`}\r\n          onClick={() => setListType(\"singly\")}\r\n        >\r\n          Singly\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 rounded-lg ${listType === \"doubly\" ? \"bg-purple-600 text-white\" : \"bg-gray-200\"}`}\r\n          onClick={() => setListType(\"doubly\")}\r\n        >\r\n          Doubly\r\n        </button>\r\n        <button\r\n          className={`px-4 py-2 rounded-lg ${listType === \"circular\" ? \"bg-green-600 text-white\" : \"bg-gray-200\"}`}\r\n          onClick={() => setListType(\"circular\")}\r\n        >\r\n          Circular\r\n        </button>\r\n      </div>\r\n      <div className=\"flex flex-wrap gap-2 mb-6\">\r\n        <input\r\n          type=\"number\"\r\n          className=\"border px-2 py-1 rounded w-24\"\r\n          placeholder=\"Value\"\r\n          value={inputValue}\r\n          onChange={e => setInputValue(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          className=\"border px-2 py-1 rounded w-24\"\r\n          placeholder=\"Position\"\r\n          value={position}\r\n          min={1}\r\n          onChange={e => setPosition(Number(e.target.value))}\r\n        />\r\n        <button onClick={handleInsertBeginning} className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\r\n          <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at Beginning\r\n        </button>\r\n        <button onClick={handleInsertEnd} className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700\">\r\n          <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at End\r\n        </button>\r\n        <button onClick={handleInsertPosition} className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700\">\r\n          <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at Position\r\n        </button>\r\n        <button onClick={handleDeleteBeginning} className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\">\r\n          <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at Beginning\r\n        </button>\r\n        <button onClick={handleDeleteEnd} className=\"px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700\">\r\n          <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at End\r\n        </button>\r\n        <button onClick={handleDeletePosition} className=\"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700\">\r\n          <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at Position\r\n        </button>\r\n        <button onClick={handleModify} className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700\">\r\n          <Edit className=\"w-5 h-5 inline mr-1\" /> Modify\r\n        </button>\r\n        <button onClick={handleReverse} className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700\">\r\n          <RefreshCcw className=\"w-5 h-5 inline mr-1\" /> Reverse\r\n        </button>\r\n      </div>\r\n      {/* Visualization */}\r\n      <div className=\"flex items-center gap-4 mb-8 overflow-x-auto\">\r\n        {nodes.length === 0 ? (\r\n          <div className=\"text-gray-500\">List is empty</div>\r\n        ) : (\r\n          nodes.map((node, idx) => (\r\n            <div key={idx} className=\"flex items-center\">\r\n              <div className=\"bg-blue-100 border-2 border-blue-400 rounded-lg px-4 py-2 text-lg font-bold relative\">\r\n                {listType === \"doubly\" && <ChevronLeft className=\"w-4 h-4 text-purple-500 absolute left-0 top-1/2 -translate-y-1/2\" />}\r\n                {node.value}\r\n                <ChevronRight className=\"w-4 h-4 text-blue-500 absolute right-0 top-1/2 -translate-y-1/2\" />\r\n              </div>\r\n              {idx !== nodes.length - 1 && <ArrowLeftRight className=\"w-6 h-6 text-gray-400 mx-2\" />}\r\n              {listType === \"circular\" && idx === nodes.length - 1 && (\r\n                <Repeat className=\"w-6 h-6 text-green-500 mx-2\" />\r\n              )}\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n      {/* Operation History */}\r\n      <div className=\"bg-white rounded-lg shadow p-4 border mb-4\">\r\n        <h2 className=\"font-semibold mb-2\">Operation History</h2>\r\n        <ul className=\"text-sm text-gray-700 space-y-1\">\r\n          {operationHistory.slice(0, 8).map((op, idx) => (\r\n            <li key={idx}>{op}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      {/* Legend */}\r\n      <div className=\"flex flex-wrap items-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-blue-100 border-2 border-blue-400 rounded\"></div>\r\n          <span>Node</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <ChevronRight className=\"w-4 h-4 text-blue-500\" />\r\n          <span>Next Pointer</span>\r\n        </div>\r\n        {listType === \"doubly\" && (\r\n          <>\r\n            <ChevronLeft className=\"w-4 h-4 text-purple-500\" />\r\n            <span>Prev Pointer</span>\r\n          </>\r\n        )}\r\n        {listType === \"circular\" && (\r\n          <>\r\n            <Repeat className=\"w-4 h-4 text-green-500\" />\r\n            <span>Points to Head</span>\r\n          </>\r\n        )}\r\n      </div>\r\n      <pre className=\"bg-gray-100 rounded p-2 text-xs overflow-x-auto mb-4\">{currentCode}</pre>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkedListVisualizerPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}