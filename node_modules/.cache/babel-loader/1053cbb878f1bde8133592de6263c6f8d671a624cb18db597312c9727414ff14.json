{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Hacktober\\\\DecodeDsa\\\\src\\\\components\\\\SearchingVisualizer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from \"react\";\nimport { Button } from \"./ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Badge } from \"./ui/badge\";\nimport { CheckCircle, XCircle, Search, Target } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchingVisualizer = ({\n  algorithm,\n  inputArray,\n  targetValue\n}) => {\n  _s();\n  var _steps$currentStep, _steps$currentStep2, _steps$currentStep3, _steps$currentStep4;\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [searchResult, setSearchResult] = useState(null);\n  const generateSteps = useCallback((algorithm, array, target) => {\n    const steps = [];\n    const arr = [...array];\n\n    // For binary search, sort the array first\n    if (algorithm === \"Binary Search\") {\n      const originalArr = [...arr];\n      arr.sort((a, b) => a - b);\n      if (JSON.stringify(originalArr) !== JSON.stringify(arr)) {\n        steps.push({\n          array: [...arr],\n          description: `Array sorted for Binary Search: [${arr.join(\", \")}]`,\n          code: `// Binary Search requires sorted array\\nlet arr = [${originalArr.join(\", \")}].sort();\\n// Sorted: [${arr.join(\", \")}]`\n        });\n      } else {\n        steps.push({\n          array: [...arr],\n          description: `Array is already sorted: [${arr.join(\", \")}]`,\n          code: `// Array is already sorted for Binary Search\\nlet arr = [${arr.join(\", \")}];`\n        });\n      }\n    } else {\n      steps.push({\n        array: [...arr],\n        description: `Initial array: [${arr.join(\", \")}], Target: ${target}`,\n        code: `// Linear Search Setup\\nlet arr = [${arr.join(\", \")}];\\nlet target = ${target};`\n      });\n    }\n    switch (algorithm) {\n      case \"Linear Search\":\n        return linearSearch(arr, target, steps);\n      case \"Binary Search\":\n        return binarySearch(arr, target, steps);\n      default:\n        return steps;\n    }\n  }, []);\n  useEffect(() => {\n    const array = inputArray.split(\" \").map(Number).filter(n => !isNaN(n));\n    const newSteps = generateSteps(algorithm, array, targetValue);\n    setSteps(newSteps);\n    setCurrentStep(0);\n\n    // Calculate search result\n    const lastStep = newSteps[newSteps.length - 1];\n    if (lastStep) {\n      const comparisons = newSteps.filter(step => step.comparing).length;\n      setSearchResult({\n        found: lastStep.found || false,\n        index: lastStep.foundIndex || -1,\n        comparisons\n      });\n    }\n  }, [algorithm, inputArray, targetValue, generateSteps]);\n  const linearSearch = (arr, target, steps) => {\n    steps.push({\n      array: [...arr],\n      description: `Starting Linear Search for target ${target}`,\n      code: `function linearSearch(arr, target) {\\n  for (let i = 0; i < arr.length; i++) {`\n    });\n    for (let i = 0; i < arr.length; i++) {\n      steps.push({\n        array: [...arr],\n        description: `Checking element at index ${i}: ${arr[i]}`,\n        code: `    if (arr[${i}] === target) {\\n      // ${arr[i]} === ${target} is ${arr[i] === target}\\n    }`,\n        currentIndex: i,\n        comparing: [i]\n      });\n      if (arr[i] === target) {\n        steps.push({\n          array: [...arr],\n          description: `🎉 Target ${target} found at index ${i}!`,\n          code: `      return ${i}; // Found target at index ${i}\\n  }\\n}`,\n          foundIndex: i,\n          found: true,\n          searchComplete: true\n        });\n        return steps;\n      }\n      steps.push({\n        array: [...arr],\n        description: `${arr[i]} ≠ ${target}, continue to next element`,\n        code: `    // ${arr[i]} ≠ ${target}, continue searching`\n      });\n    }\n    steps.push({\n      array: [...arr],\n      description: `❌ Target ${target} not found in the array`,\n      code: `  return -1; // Target not found\\n}`,\n      found: false,\n      searchComplete: true\n    });\n    return steps;\n  };\n  const binarySearch = (arr, target, steps) => {\n    let left = 0;\n    let right = arr.length - 1;\n    steps.push({\n      array: [...arr],\n      description: `Initialize Binary Search: left = ${left}, right = ${right}`,\n      code: `function binarySearch(arr, target) {\\n  let left = 0;\\n  let right = arr.length - 1;`,\n      left,\n      right\n    });\n    while (left <= right) {\n      const mid = Math.floor((left + right) / 2);\n      steps.push({\n        array: [...arr],\n        description: `Calculate middle: mid = Math.floor((${left} + ${right}) / 2) = ${mid}`,\n        code: `  while (left <= right) {\\n    let mid = Math.floor((${left} + ${right}) / 2); // ${mid}`,\n        left,\n        right,\n        mid\n      });\n      steps.push({\n        array: [...arr],\n        description: `Compare arr[${mid}] = ${arr[mid]} with target ${target}`,\n        code: `    if (arr[${mid}] === target) {\\n      // ${arr[mid]} === ${target} is ${arr[mid] === target}\\n    }`,\n        left,\n        right,\n        mid,\n        comparing: [mid]\n      });\n      if (arr[mid] === target) {\n        steps.push({\n          array: [...arr],\n          description: `🎉 Target ${target} found at index ${mid}!`,\n          code: `      return ${mid}; // Found target at index ${mid}\\n    }\\n  }\\n}`,\n          foundIndex: mid,\n          found: true,\n          searchComplete: true,\n          mid\n        });\n        return steps;\n      } else if (arr[mid] < target) {\n        steps.push({\n          array: [...arr],\n          description: `${arr[mid]} < ${target}, search right half`,\n          code: `    } else if (arr[${mid}] < target) {\\n      left = ${mid + 1}; // Search right half`,\n          left,\n          right,\n          mid\n        });\n        left = mid + 1;\n      } else {\n        steps.push({\n          array: [...arr],\n          description: `${arr[mid]} > ${target}, search left half`,\n          code: `    } else {\\n      right = ${mid - 1}; // Search left half`,\n          left,\n          right,\n          mid\n        });\n        right = mid - 1;\n      }\n      steps.push({\n        array: [...arr],\n        description: `Update search range: left = ${left}, right = ${right}`,\n        code: `    // New range: left = ${left}, right = ${right}`,\n        left,\n        right\n      });\n    }\n    steps.push({\n      array: [...arr],\n      description: `❌ Target ${target} not found in the array`,\n      code: `  return -1; // Target not found\\n}`,\n      found: false,\n      searchComplete: true\n    });\n    return steps;\n  };\n  const handleNext = () => {\n    if (currentStep < steps.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n  const handleReset = () => {\n    setCurrentStep(0);\n  };\n  const getElementColor = index => {\n    var _step$comparing;\n    const step = steps[currentStep];\n    if (!step) return \"bg-blue-500\";\n    if (step.foundIndex === index && step.found) return \"bg-green-500\";\n    if ((_step$comparing = step.comparing) !== null && _step$comparing !== void 0 && _step$comparing.includes(index)) return \"bg-yellow-500\";\n    if (step.currentIndex === index) return \"bg-orange-500\";\n    if (step.mid === index) return \"bg-purple-500\";\n    if (algorithm === \"Binary Search\" && step.left !== undefined && step.right !== undefined) {\n      if (index < step.left || index > step.right) return \"bg-gray-400\";\n    }\n    return \"bg-blue-500\";\n  };\n  const getCompleteAlgorithmCode = algorithm => {\n    switch (algorithm) {\n      case \"Linear Search\":\n        return `function linearSearch(arr, target) {\n  // Iterate through each element in the array\n  for (let i = 0; i < arr.length; i++) {\n    // Check if current element matches target\n    if (arr[i] === target) {\n      return i; // Return index if found\n    }\n  }\n  \n  return -1; // Return -1 if not found\n}\n\n// Usage example:\nconst array = [64, 34, 25, 12, 22, 11, 90];\nconst target = 22;\nconst result = linearSearch(array, target);\n\nif (result !== -1) {\n  console.log(\\`Element found at index: \\${result}\\`);\n} else {\n  console.log(\"Element not found\");\n}`;\n      case \"Binary Search\":\n        return `function binarySearch(arr, target) {\n  let left = 0;\n  let right = arr.length - 1;\n  \n  while (left <= right) {\n    // Calculate middle index\n    let mid = Math.floor((left + right) / 2);\n    \n    // Check if target is at middle\n    if (arr[mid] === target) {\n      return mid; // Found target\n    }\n    \n    // If target is greater, ignore left half\n    if (arr[mid] < target) {\n      left = mid + 1;\n    }\n    // If target is smaller, ignore right half\n    else {\n      right = mid - 1;\n    }\n  }\n  \n  return -1; // Target not found\n}\n\n// Usage example:\nconst sortedArray = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\nconst target = 7;\nconst result = binarySearch(sortedArray, target);\n\nif (result !== -1) {\n  console.log(\\`Element found at index: \\${result}\\`);\n} else {\n  console.log(\"Element not found\");\n}`;\n      default:\n        return \"// Algorithm implementation not available\";\n    }\n  };\n  if (steps.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500\",\n        children: \"Loading visualization...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [searchResult && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"border-2 border-dashed border-gray-300\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        className: \"p-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [searchResult.found ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n              className: \"w-8 h-8 text-green-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(XCircle, {\n              className: \"w-8 h-8 text-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold\",\n                children: searchResult.found ? \"Target Found!\" : \"Target Not Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-600\",\n                children: searchResult.found ? `Found at index ${searchResult.index}` : \"Target value does not exist in the array\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-2xl font-bold text-blue-600\",\n              children: searchResult.comparisons\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: \"Comparisons\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg p-6 shadow-sm border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Target, {\n            className: \"w-5 h-5 mr-2 text-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), \"Array Visualization\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Target: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-green-600\",\n            children: targetValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-wrap items-center justify-center gap-2 p-4 bg-gray-50 rounded-lg min-h-[80px]\",\n        children: (_steps$currentStep = steps[currentStep]) === null || _steps$currentStep === void 0 ? void 0 : _steps$currentStep.array.map((value, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `w-12 h-12 flex items-center justify-center text-white rounded-md font-semibold transition-all duration-300 ${getElementColor(index)}`,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-500 text-center mt-1\",\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this), algorithm === \"Binary Search\" && steps[currentStep] && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [steps[currentStep].left === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-blue-600\",\n              children: \"L\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this), steps[currentStep].right === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-red-600\",\n              children: \"R\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this), steps[currentStep].mid === index && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-purple-600\",\n              children: \"M\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap items-center justify-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-blue-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Unvisited\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-yellow-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Comparing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), algorithm === \"Linear Search\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-orange-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), algorithm === \"Binary Search\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-purple-500 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 bg-gray-400 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Out of Range\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-4 h-4 bg-green-500 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-white rounded-lg p-4 shadow-sm border\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleReset,\n          variant: \"secondary\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePrevious,\n          disabled: currentStep === 0,\n          variant: \"secondary\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleNext,\n          disabled: currentStep === steps.length - 1,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        variant: \"default\",\n        className: \"text-sm\",\n        children: [\"Step \", currentStep + 1, \" of \", steps.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            className: \"w-5 h-5 mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), \"Step Description\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700 leading-relaxed\",\n          children: (_steps$currentStep2 = steps[currentStep]) === null || _steps$currentStep2 === void 0 ? void 0 : _steps$currentStep2.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg\",\n          children: \"Code Execution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-900 text-green-400 p-4 rounded-md overflow-x-auto text-sm font-mono\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: (_steps$currentStep3 = steps[currentStep]) === null || _steps$currentStep3 === void 0 ? void 0 : _steps$currentStep3.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this), ((_steps$currentStep4 = steps[currentStep]) === null || _steps$currentStep4 === void 0 ? void 0 : _steps$currentStep4.searchComplete) && /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: /*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-lg\",\n          children: [\"Complete \", algorithm, \" Implementation\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"bg-gray-900 text-green-400 p-4 rounded-md overflow-x-auto text-sm font-mono max-h-96 overflow-y-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: getCompleteAlgorithmCode(algorithm)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 p-3 bg-green-50 rounded-md\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-green-800\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uD83D\\uDCA1 Complete Implementation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 17\n            }, this), \" This is the full \", algorithm, \" algorithm that you just visualized step by step. You can copy this code and use it in your own projects!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchingVisualizer, \"slKR9FCy0/fhgC0FsBFhGYx/NRc=\");\n_c = SearchingVisualizer;\nexport default SearchingVisualizer;\nvar _c;\n$RefreshReg$(_c, \"SearchingVisualizer\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","useCallback","Button","Card","CardContent","CardHeader","CardTitle","Badge","CheckCircle","XCircle","Search","Target","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchingVisualizer","algorithm","inputArray","targetValue","_steps$currentStep","_steps$currentStep2","_steps$currentStep3","_steps$currentStep4","steps","setSteps","currentStep","setCurrentStep","searchResult","setSearchResult","generateSteps","array","target","arr","originalArr","sort","a","b","JSON","stringify","push","description","join","code","linearSearch","binarySearch","split","map","Number","filter","n","isNaN","newSteps","lastStep","length","comparisons","step","comparing","found","index","foundIndex","i","currentIndex","searchComplete","left","right","mid","Math","floor","handleNext","handlePrevious","handleReset","getElementColor","_step$comparing","includes","undefined","getCompleteAlgorithmCode","className","children","fileName","lineNumber","columnNumber","value","onClick","variant","disabled","_c","$RefreshReg$"],"sources":["D:/Hacktober/DecodeDsa/src/components/SearchingVisualizer.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useEffect, useState, useCallback } from \"react\"\r\nimport { Button } from \"./ui/button\"\r\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\"\r\nimport { Badge } from \"./ui/badge\"\r\nimport { CheckCircle, XCircle, Search, Target } from \"lucide-react\"\r\n\r\ninterface SearchingVisualizerProps {\r\n  algorithm: string\r\n  inputArray: string\r\n  targetValue: number\r\n}\r\n\r\ninterface Step {\r\n  array: number[]\r\n  description: string\r\n  code: string\r\n  currentIndex?: number\r\n  comparing?: number[]\r\n  found?: boolean\r\n  foundIndex?: number\r\n  left?: number\r\n  right?: number\r\n  mid?: number\r\n  searchComplete?: boolean\r\n}\r\n\r\nconst SearchingVisualizer: React.FC<SearchingVisualizerProps> = ({ algorithm, inputArray, targetValue }) => {\r\n  const [steps, setSteps] = useState<Step[]>([])\r\n  const [currentStep, setCurrentStep] = useState(0)\r\n  const [searchResult, setSearchResult] = useState<{ found: boolean; index: number; comparisons: number } | null>(null)\r\n\r\n  const generateSteps = useCallback((algorithm: string, array: number[], target: number): Step[] => {\r\n    const steps: Step[] = []\r\n    const arr = [...array]\r\n\r\n    // For binary search, sort the array first\r\n    if (algorithm === \"Binary Search\") {\r\n      const originalArr = [...arr]\r\n      arr.sort((a, b) => a - b)\r\n\r\n      if (JSON.stringify(originalArr) !== JSON.stringify(arr)) {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `Array sorted for Binary Search: [${arr.join(\", \")}]`,\r\n          code: `// Binary Search requires sorted array\\nlet arr = [${originalArr.join(\", \")}].sort();\\n// Sorted: [${arr.join(\", \")}]`,\r\n        })\r\n      } else {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `Array is already sorted: [${arr.join(\", \")}]`,\r\n          code: `// Array is already sorted for Binary Search\\nlet arr = [${arr.join(\", \")}];`,\r\n        })\r\n      }\r\n    } else {\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `Initial array: [${arr.join(\", \")}], Target: ${target}`,\r\n        code: `// Linear Search Setup\\nlet arr = [${arr.join(\", \")}];\\nlet target = ${target};`,\r\n      })\r\n    }\r\n\r\n    switch (algorithm) {\r\n      case \"Linear Search\":\r\n        return linearSearch(arr, target, steps)\r\n      case \"Binary Search\":\r\n        return binarySearch(arr, target, steps)\r\n      default:\r\n        return steps\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const array = inputArray\r\n      .split(\" \")\r\n      .map(Number)\r\n      .filter((n) => !isNaN(n))\r\n    const newSteps = generateSteps(algorithm, array, targetValue)\r\n    setSteps(newSteps)\r\n    setCurrentStep(0)\r\n\r\n    // Calculate search result\r\n    const lastStep = newSteps[newSteps.length - 1]\r\n    if (lastStep) {\r\n      const comparisons = newSteps.filter((step) => step.comparing).length\r\n      setSearchResult({\r\n        found: lastStep.found || false,\r\n        index: lastStep.foundIndex || -1,\r\n        comparisons,\r\n      })\r\n    }\r\n  }, [algorithm, inputArray, targetValue, generateSteps])\r\n\r\n  const linearSearch = (arr: number[], target: number, steps: Step[]): Step[] => {\r\n    steps.push({\r\n      array: [...arr],\r\n      description: `Starting Linear Search for target ${target}`,\r\n      code: `function linearSearch(arr, target) {\\n  for (let i = 0; i < arr.length; i++) {`,\r\n    })\r\n\r\n    for (let i = 0; i < arr.length; i++) {\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `Checking element at index ${i}: ${arr[i]}`,\r\n        code: `    if (arr[${i}] === target) {\\n      // ${arr[i]} === ${target} is ${arr[i] === target}\\n    }`,\r\n        currentIndex: i,\r\n        comparing: [i],\r\n      })\r\n\r\n      if (arr[i] === target) {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `🎉 Target ${target} found at index ${i}!`,\r\n          code: `      return ${i}; // Found target at index ${i}\\n  }\\n}`,\r\n          foundIndex: i,\r\n          found: true,\r\n          searchComplete: true,\r\n        })\r\n        return steps\r\n      }\r\n\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `${arr[i]} ≠ ${target}, continue to next element`,\r\n        code: `    // ${arr[i]} ≠ ${target}, continue searching`,\r\n      })\r\n    }\r\n\r\n    steps.push({\r\n      array: [...arr],\r\n      description: `❌ Target ${target} not found in the array`,\r\n      code: `  return -1; // Target not found\\n}`,\r\n      found: false,\r\n      searchComplete: true,\r\n    })\r\n\r\n    return steps\r\n  }\r\n\r\n  const binarySearch = (arr: number[], target: number, steps: Step[]): Step[] => {\r\n    let left = 0\r\n    let right = arr.length - 1\r\n\r\n    steps.push({\r\n      array: [...arr],\r\n      description: `Initialize Binary Search: left = ${left}, right = ${right}`,\r\n      code: `function binarySearch(arr, target) {\\n  let left = 0;\\n  let right = arr.length - 1;`,\r\n      left,\r\n      right,\r\n    })\r\n\r\n    while (left <= right) {\r\n      const mid = Math.floor((left + right) / 2)\r\n\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `Calculate middle: mid = Math.floor((${left} + ${right}) / 2) = ${mid}`,\r\n        code: `  while (left <= right) {\\n    let mid = Math.floor((${left} + ${right}) / 2); // ${mid}`,\r\n        left,\r\n        right,\r\n        mid,\r\n      })\r\n\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `Compare arr[${mid}] = ${arr[mid]} with target ${target}`,\r\n        code: `    if (arr[${mid}] === target) {\\n      // ${arr[mid]} === ${target} is ${arr[mid] === target}\\n    }`,\r\n        left,\r\n        right,\r\n        mid,\r\n        comparing: [mid],\r\n      })\r\n\r\n      if (arr[mid] === target) {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `🎉 Target ${target} found at index ${mid}!`,\r\n          code: `      return ${mid}; // Found target at index ${mid}\\n    }\\n  }\\n}`,\r\n          foundIndex: mid,\r\n          found: true,\r\n          searchComplete: true,\r\n          mid,\r\n        })\r\n        return steps\r\n      } else if (arr[mid] < target) {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `${arr[mid]} < ${target}, search right half`,\r\n          code: `    } else if (arr[${mid}] < target) {\\n      left = ${mid + 1}; // Search right half`,\r\n          left,\r\n          right,\r\n          mid,\r\n        })\r\n        left = mid + 1\r\n      } else {\r\n        steps.push({\r\n          array: [...arr],\r\n          description: `${arr[mid]} > ${target}, search left half`,\r\n          code: `    } else {\\n      right = ${mid - 1}; // Search left half`,\r\n          left,\r\n          right,\r\n          mid,\r\n        })\r\n        right = mid - 1\r\n      }\r\n\r\n      steps.push({\r\n        array: [...arr],\r\n        description: `Update search range: left = ${left}, right = ${right}`,\r\n        code: `    // New range: left = ${left}, right = ${right}`,\r\n        left,\r\n        right,\r\n      })\r\n    }\r\n\r\n    steps.push({\r\n      array: [...arr],\r\n      description: `❌ Target ${target} not found in the array`,\r\n      code: `  return -1; // Target not found\\n}`,\r\n      found: false,\r\n      searchComplete: true,\r\n    })\r\n\r\n    return steps\r\n  }\r\n\r\n  const handleNext = () => {\r\n    if (currentStep < steps.length - 1) {\r\n      setCurrentStep(currentStep + 1)\r\n    }\r\n  }\r\n\r\n  const handlePrevious = () => {\r\n    if (currentStep > 0) {\r\n      setCurrentStep(currentStep - 1)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    setCurrentStep(0)\r\n  }\r\n\r\n  const getElementColor = (index: number): string => {\r\n    const step = steps[currentStep]\r\n    if (!step) return \"bg-blue-500\"\r\n\r\n    if (step.foundIndex === index && step.found) return \"bg-green-500\"\r\n    if (step.comparing?.includes(index)) return \"bg-yellow-500\"\r\n    if (step.currentIndex === index) return \"bg-orange-500\"\r\n    if (step.mid === index) return \"bg-purple-500\"\r\n    if (algorithm === \"Binary Search\" && step.left !== undefined && step.right !== undefined) {\r\n      if (index < step.left || index > step.right) return \"bg-gray-400\"\r\n    }\r\n\r\n    return \"bg-blue-500\"\r\n  }\r\n\r\n  const getCompleteAlgorithmCode = (algorithm: string): string => {\r\n    switch (algorithm) {\r\n      case \"Linear Search\":\r\n        return `function linearSearch(arr, target) {\r\n  // Iterate through each element in the array\r\n  for (let i = 0; i < arr.length; i++) {\r\n    // Check if current element matches target\r\n    if (arr[i] === target) {\r\n      return i; // Return index if found\r\n    }\r\n  }\r\n  \r\n  return -1; // Return -1 if not found\r\n}\r\n\r\n// Usage example:\r\nconst array = [64, 34, 25, 12, 22, 11, 90];\r\nconst target = 22;\r\nconst result = linearSearch(array, target);\r\n\r\nif (result !== -1) {\r\n  console.log(\\`Element found at index: \\${result}\\`);\r\n} else {\r\n  console.log(\"Element not found\");\r\n}`\r\n\r\n      case \"Binary Search\":\r\n        return `function binarySearch(arr, target) {\r\n  let left = 0;\r\n  let right = arr.length - 1;\r\n  \r\n  while (left <= right) {\r\n    // Calculate middle index\r\n    let mid = Math.floor((left + right) / 2);\r\n    \r\n    // Check if target is at middle\r\n    if (arr[mid] === target) {\r\n      return mid; // Found target\r\n    }\r\n    \r\n    // If target is greater, ignore left half\r\n    if (arr[mid] < target) {\r\n      left = mid + 1;\r\n    }\r\n    // If target is smaller, ignore right half\r\n    else {\r\n      right = mid - 1;\r\n    }\r\n  }\r\n  \r\n  return -1; // Target not found\r\n}\r\n\r\n// Usage example:\r\nconst sortedArray = [1, 3, 5, 7, 9, 11, 13, 15, 17, 19];\r\nconst target = 7;\r\nconst result = binarySearch(sortedArray, target);\r\n\r\nif (result !== -1) {\r\n  console.log(\\`Element found at index: \\${result}\\`);\r\n} else {\r\n  console.log(\"Element not found\");\r\n}`\r\n\r\n      default:\r\n        return \"// Algorithm implementation not available\"\r\n    }\r\n  }\r\n\r\n  if (steps.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center p-8\">\r\n        <div className=\"text-gray-500\">Loading visualization...</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Search Result Summary */}\r\n      {searchResult && (\r\n        <Card className=\"border-2 border-dashed border-gray-300\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                {searchResult.found ? (\r\n                  <CheckCircle className=\"w-8 h-8 text-green-500\" />\r\n                ) : (\r\n                  <XCircle className=\"w-8 h-8 text-red-500\" />\r\n                )}\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold\">{searchResult.found ? \"Target Found!\" : \"Target Not Found\"}</h3>\r\n                  <p className=\"text-gray-600\">\r\n                    {searchResult.found\r\n                      ? `Found at index ${searchResult.index}`\r\n                      : \"Target value does not exist in the array\"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-2xl font-bold text-blue-600\">{searchResult.comparisons}</div>\r\n                <div className=\"text-sm text-gray-500\">Comparisons</div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Array Visualization */}\r\n      <div className=\"bg-white rounded-lg p-6 shadow-sm border\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold flex items-center\">\r\n            <Target className=\"w-5 h-5 mr-2 text-green-600\" />\r\n            Array Visualization\r\n          </h3>\r\n          <div className=\"text-sm text-gray-600\">\r\n            Target: <span className=\"font-semibold text-green-600\">{targetValue}</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-wrap items-center justify-center gap-2 p-4 bg-gray-50 rounded-lg min-h-[80px]\">\r\n          {steps[currentStep]?.array.map((value, index) => (\r\n            <div key={index} className=\"relative\">\r\n              <div\r\n                className={`w-12 h-12 flex items-center justify-center text-white rounded-md font-semibold transition-all duration-300 ${getElementColor(index)}`}\r\n              >\r\n                {value}\r\n              </div>\r\n              <div className=\"text-xs text-gray-500 text-center mt-1\">{index}</div>\r\n\r\n              {/* Binary Search Pointers */}\r\n              {algorithm === \"Binary Search\" && steps[currentStep] && (\r\n                <>\r\n                  {steps[currentStep].left === index && (\r\n                    <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-blue-600\">\r\n                      L\r\n                    </div>\r\n                  )}\r\n                  {steps[currentStep].right === index && (\r\n                    <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-red-600\">\r\n                      R\r\n                    </div>\r\n                  )}\r\n                  {steps[currentStep].mid === index && (\r\n                    <div className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-purple-600\">\r\n                      M\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Legend */}\r\n      <div className=\"flex flex-wrap items-center justify-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-blue-500 rounded\"></div>\r\n          <span>Unvisited</span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-yellow-500 rounded\"></div>\r\n          <span>Comparing</span>\r\n        </div>\r\n        {algorithm === \"Linear Search\" && (\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 bg-orange-500 rounded\"></div>\r\n            <span>Current</span>\r\n          </div>\r\n        )}\r\n        {algorithm === \"Binary Search\" && (\r\n          <>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-4 h-4 bg-purple-500 rounded\"></div>\r\n              <span>Middle</span>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-4 h-4 bg-gray-400 rounded\"></div>\r\n              <span>Out of Range</span>\r\n            </div>\r\n          </>\r\n        )}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-4 h-4 bg-green-500 rounded\"></div>\r\n          <span>Found</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Controls */}\r\n      <div className=\"flex items-center justify-between bg-white rounded-lg p-4 shadow-sm border\">\r\n        <div className=\"flex space-x-2\">\r\n          <Button onClick={handleReset} variant=\"secondary\">\r\n            Reset\r\n          </Button>\r\n          <Button onClick={handlePrevious} disabled={currentStep === 0} variant=\"secondary\">\r\n            Previous\r\n          </Button>\r\n          <Button onClick={handleNext} disabled={currentStep === steps.length - 1}>\r\n            Next\r\n          </Button>\r\n        </div>\r\n        <Badge variant=\"default\" className=\"text-sm\">\r\n          Step {currentStep + 1} of {steps.length}\r\n        </Badge>\r\n      </div>\r\n\r\n      {/* Step Description */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg flex items-center\">\r\n            <Search className=\"w-5 h-5 mr-2\" />\r\n            Step Description\r\n          </CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <p className=\"text-gray-700 leading-relaxed\">{steps[currentStep]?.description}</p>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Code Display */}\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle className=\"text-lg\">Code Execution</CardTitle>\r\n        </CardHeader>\r\n        <CardContent>\r\n          <pre className=\"bg-gray-900 text-green-400 p-4 rounded-md overflow-x-auto text-sm font-mono\">\r\n            <code>{steps[currentStep]?.code}</code>\r\n          </pre>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Complete Algorithm Code - Show only when search is complete */}\r\n      {steps[currentStep]?.searchComplete && (\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle className=\"text-lg\">Complete {algorithm} Implementation</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <pre className=\"bg-gray-900 text-green-400 p-4 rounded-md overflow-x-auto text-sm font-mono max-h-96 overflow-y-auto\">\r\n              <code>{getCompleteAlgorithmCode(algorithm)}</code>\r\n            </pre>\r\n            <div className=\"mt-4 p-3 bg-green-50 rounded-md\">\r\n              <p className=\"text-sm text-green-800\">\r\n                <strong>💡 Complete Implementation:</strong> This is the full {algorithm} algorithm that you just\r\n                visualized step by step. You can copy this code and use it in your own projects!\r\n              </p>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchingVisualizer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}