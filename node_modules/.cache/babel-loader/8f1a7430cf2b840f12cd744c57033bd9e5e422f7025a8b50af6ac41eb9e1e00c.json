{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\ArrayAlgorithmsPage.tsx\";\nimport React from 'react';\nimport { Box, Typography, Grid, Card, CardContent, CardActionArea } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport { Calculator, Hash, TrendingUp, Binary, Layers, Grid as LucideGrid, ArrowRight } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst algorithms = [{\n  name: \"Two Pointer Techniques\",\n  description: \"Visualize two pointer sum, three pointer sum, and other two pointer problems.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(1)\",\n  path: \"/array-algorithms/two-pointer\",\n  icon: ArrowRight,\n  color: \"from-blue-500 to-cyan-500\"\n}, {\n  name: \"Prefix Sum & Difference Array\",\n  description: \"Learn about prefix sums, difference arrays, and their applications.\",\n  timeComplexity: \"O(n) preprocessing, O(1) query\",\n  spaceComplexity: \"O(n)\",\n  path: \"/array-algorithms/prefix-sum\",\n  icon: Calculator,\n  color: \"from-green-500 to-emerald-500\"\n}, {\n  name: \"Kadane's Algorithm\",\n  description: \"Visualize maximum subarray sum and related problems.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(1)\",\n  path: \"/array-algorithms/kadanes\",\n  icon: TrendingUp,\n  color: \"from-purple-500 to-pink-500\"\n}, {\n  name: \"Sliding Window\",\n  description: \"Learn about fixed and variable size sliding window techniques.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(1)\",\n  path: \"/array-algorithms/sliding-window\",\n  icon: LucideGrid,\n  color: \"from-orange-500 to-yellow-500\"\n}, {\n  name: \"Hashing & Frequency Count\",\n  description: \"Use hash maps to solve array problems efficiently.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(n)\",\n  path: \"/array-algorithms/hashing\",\n  icon: Hash,\n  color: \"from-red-500 to-pink-500\"\n}, {\n  name: \"Monotonic Stack\",\n  description: \"Visualize next greater/smaller element and related problems.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(n)\",\n  path: \"/array-algorithms/monotonic-stack\",\n  icon: Layers,\n  color: \"from-indigo-500 to-purple-500\"\n}, {\n  name: \"Bit Manipulation\",\n  description: \"Learn about bit operations and XOR techniques.\",\n  timeComplexity: \"O(n)\",\n  spaceComplexity: \"O(1)\",\n  path: \"/array-algorithms/bit-manipulation\",\n  icon: Binary,\n  color: \"from-yellow-500 to-orange-500\"\n}, {\n  name: \"Two-Dimensional Arrays\",\n  description: \"Visualize matrix operations and spiral traversals.\",\n  timeComplexity: \"Varies\",\n  spaceComplexity: \"Varies\",\n  path: \"/array-algorithms/2d-arrays\",\n  icon: LucideGrid,\n  color: \"from-teal-500 to-cyan-500\"\n}];\nconst ArrayAlgorithmsPage = () => {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Array Algorithms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: algorithms.map(algorithm => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n            component: Link,\n            to: algorithm.path,\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: algorithm.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: algorithm.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, algorithm.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c = ArrayAlgorithmsPage;\nexport default ArrayAlgorithmsPage;\nvar _c;\n$RefreshReg$(_c, \"ArrayAlgorithmsPage\");","map":{"version":3,"names":["_jsxFileName","React","Box","Typography","Grid","Card","CardContent","CardActionArea","Link","Calculator","Hash","TrendingUp","Binary","Layers","LucideGrid","ArrowRight","jsxDEV","_jsxDEV","algorithms","name","description","timeComplexity","spaceComplexity","path","icon","color","ArrayAlgorithmsPage","sx","p","children","variant","gutterBottom","fileName","lineNumber","columnNumber","container","spacing","map","algorithm","item","xs","sm","md","component","to","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/ArrayAlgorithmsPage.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport React from 'react';\r\nimport { Box, Typography, Grid, Card, CardContent, CardActionArea } from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\nimport { \r\n  Calculator, \r\n  Hash, \r\n  TrendingUp, \r\n  Binary, \r\n  Layers, \r\n  RotateCcw, \r\n  List, \r\n  Grid as LucideGrid,\r\n  ArrowRight\r\n} from \"lucide-react\"\r\n\r\ninterface Algorithm {\r\n  name: string\r\n  description: string\r\n  timeComplexity: string\r\n  spaceComplexity: string\r\n  path: string\r\n  icon: any\r\n  color: string\r\n}\r\n\r\nconst algorithms: Algorithm[] = [\r\n  {\r\n    name: \"Two Pointer Techniques\",\r\n    description: \"Visualize two pointer sum, three pointer sum, and other two pointer problems.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(1)\",\r\n    path: \"/array-algorithms/two-pointer\",\r\n    icon: ArrowRight,\r\n    color: \"from-blue-500 to-cyan-500\"\r\n  },\r\n  {\r\n    name: \"Prefix Sum & Difference Array\",\r\n    description: \"Learn about prefix sums, difference arrays, and their applications.\",\r\n    timeComplexity: \"O(n) preprocessing, O(1) query\",\r\n    spaceComplexity: \"O(n)\",\r\n    path: \"/array-algorithms/prefix-sum\",\r\n    icon: Calculator,\r\n    color: \"from-green-500 to-emerald-500\"\r\n  },\r\n  {\r\n    name: \"Kadane's Algorithm\",\r\n    description: \"Visualize maximum subarray sum and related problems.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(1)\",\r\n    path: \"/array-algorithms/kadanes\",\r\n    icon: TrendingUp,\r\n    color: \"from-purple-500 to-pink-500\"\r\n  },\r\n  {\r\n    name: \"Sliding Window\",\r\n    description: \"Learn about fixed and variable size sliding window techniques.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(1)\",\r\n    path: \"/array-algorithms/sliding-window\",\r\n    icon: LucideGrid,\r\n    color: \"from-orange-500 to-yellow-500\"\r\n  },\r\n  {\r\n    name: \"Hashing & Frequency Count\",\r\n    description: \"Use hash maps to solve array problems efficiently.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(n)\",\r\n    path: \"/array-algorithms/hashing\",\r\n    icon: Hash,\r\n    color: \"from-red-500 to-pink-500\"\r\n  },\r\n  {\r\n    name: \"Monotonic Stack\",\r\n    description: \"Visualize next greater/smaller element and related problems.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(n)\",\r\n    path: \"/array-algorithms/monotonic-stack\",\r\n    icon: Layers,\r\n    color: \"from-indigo-500 to-purple-500\"\r\n  },\r\n  {\r\n    name: \"Bit Manipulation\",\r\n    description: \"Learn about bit operations and XOR techniques.\",\r\n    timeComplexity: \"O(n)\",\r\n    spaceComplexity: \"O(1)\",\r\n    path: \"/array-algorithms/bit-manipulation\",\r\n    icon: Binary,\r\n    color: \"from-yellow-500 to-orange-500\"\r\n  },\r\n  {\r\n    name: \"Two-Dimensional Arrays\",\r\n    description: \"Visualize matrix operations and spiral traversals.\",\r\n    timeComplexity: \"Varies\",\r\n    spaceComplexity: \"Varies\",\r\n    path: \"/array-algorithms/2d-arrays\",\r\n    icon: LucideGrid,\r\n    color: \"from-teal-500 to-cyan-500\"\r\n  }\r\n]\r\n\r\nconst ArrayAlgorithmsPage = () => {\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Array Algorithms\r\n      </Typography>\r\n      \r\n      <Grid container spacing={3}>\r\n        {algorithms.map((algorithm) => (\r\n          <Grid item xs={12} sm={6} md={4} key={algorithm.path}>\r\n            <Card>\r\n              <CardActionArea component={Link} to={algorithm.path}>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {algorithm.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {algorithm.description}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ArrayAlgorithmsPage "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}