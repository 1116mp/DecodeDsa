{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\LinkedListVisualizerPage.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { List, Plus, Minus, RotateCcw, Code, BookOpen, Lightbulb, Target, Clock } from \"lucide-react\";\n\n// Enhanced Node interface with animation states\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LinkedListVisualizerPage() {\n  _s();\n  const [listType, setListType] = useState(\"singly\");\n  const [head, setHead] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [position, setPosition] = useState(1);\n  const [searchTerm, setSearchTerm] = useState(\"\"); // Renamed searchValue to searchTerm\n\n  // UI states\n  const [operationHistory, setOperationHistory] = useState([]);\n  const [showCode, setShowCode] = useState(false);\n  const [showTutorial, setShowTutorial] = useState(false);\n  const [selectedOperation, setSelectedOperation] = useState(null);\n  const [nodeCounter, setNodeCounter] = useState(0);\n  const [showStepByStep, setShowStepByStep] = useState(false);\n  const [currentOperation, setCurrentOperation] = useState(\"\");\n\n  // Helper functions\n  const generateNodeId = () => {\n    setNodeCounter(prev => prev + 1);\n    return `node-${nodeCounter}`;\n  };\n  const createNode = value => ({\n    id: generateNodeId(),\n    value,\n    next: null,\n    isNew: true\n  });\n  const createDoublyNode = value => ({\n    id: generateNodeId(),\n    value,\n    next: null,\n    prev: null,\n    isNew: true\n  });\n  const toArray = () => {\n    const arr = [];\n    let curr = head;\n    if (!curr) return arr;\n    if (listType === \"circular\") {\n      do {\n        arr.push(curr);\n        curr = curr.next;\n      } while (curr && curr !== head && arr.length < 20); // Prevent infinite loop\n    } else {\n      while (curr) {\n        arr.push(curr);\n        curr = curr.next;\n      }\n    }\n    return arr;\n  };\n  const insertAtBeginning = async value => {\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value);\n    if (!head) {\n      if (listType === \"circular\") {\n        newNode.next = newNode;\n        setHead(newNode);\n      } else {\n        setHead(newNode);\n      }\n    } else {\n      if (listType === \"doubly\") {\n        newNode.next = head;\n        head.prev = newNode;\n      } else if (listType === \"circular\") {\n        // Find tail for circular\n        let tail = head;\n        while (tail.next && tail.next !== head) {\n          tail = tail.next;\n        }\n        newNode.next = head;\n        tail.next = newNode;\n      } else {\n        newNode.next = head;\n      }\n      setHead(newNode);\n    }\n    addToHistory(`Inserted ${value} at beginning`);\n  };\n  const insertAtEnd = async value => {\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value);\n    if (!head) {\n      setHead(newNode);\n    } else {\n      let curr = head;\n      if (listType === \"circular\") {\n        while (curr.next && curr.next !== head) {\n          curr = curr.next;\n        }\n        curr.next = newNode;\n        newNode.next = head;\n      } else {\n        while (curr.next) {\n          curr = curr.next;\n        }\n        curr.next = newNode;\n        if (listType === \"doubly\") {\n          newNode.prev = curr;\n        }\n      }\n      setHead({\n        ...head\n      });\n    }\n    addToHistory(`Inserted ${value} at end`);\n  };\n  const deleteAtBeginning = async () => {\n    if (!head) {\n      addToHistory(\"Cannot delete from empty list\");\n      return;\n    }\n    if (listType === \"circular\" && head.next === head) {\n      setHead(null);\n    } else if (listType === \"circular\") {\n      // Find tail and update its next pointer\n      let tail = head;\n      while (tail.next && tail.next !== head) {\n        tail = tail.next;\n      }\n      const newHead = head.next;\n      tail.next = newHead;\n      setHead(newHead);\n    } else {\n      const newHead = head.next;\n      if (listType === \"doubly\" && newHead) {\n        newHead.prev = null;\n      }\n      setHead(newHead);\n    }\n    addToHistory(`Deleted node from beginning`);\n  };\n  const insertAtPosition = async (value, pos) => {\n    if (pos < 1) {\n      addToHistory(\"Position must be 1 or greater\");\n      return;\n    }\n    if (pos === 1) {\n      insertAtBeginning(value);\n      return;\n    }\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value);\n    if (!head) {\n      addToHistory(\"Cannot insert at position in empty list\");\n      return;\n    }\n    let curr = head;\n    let prev = null;\n    let currentPos = 1;\n\n    // Navigate to the position\n    while (curr && currentPos < pos) {\n      prev = curr;\n      curr = curr.next;\n      currentPos++;\n\n      // Prevent infinite loop in circular lists\n      if (listType === \"circular\" && curr === head) break;\n    }\n    if (currentPos < pos) {\n      addToHistory(`Position ${pos} is beyond list length`);\n      return;\n    }\n\n    // Insert the node\n    if (prev) {\n      prev.next = newNode;\n      newNode.next = curr;\n      if (listType === \"doubly\") {\n        newNode.prev = prev;\n        if (curr) {\n          curr.prev = newNode;\n        }\n      }\n    }\n    setHead({\n      ...head\n    });\n    addToHistory(`Inserted ${value} at position ${pos}`);\n  };\n  const deleteAtEnd = async () => {\n    if (!head) {\n      addToHistory(\"Cannot delete from empty list\");\n      return;\n    }\n\n    // Single node case\n    if (!head.next || listType === \"circular\" && head.next === head) {\n      setHead(null);\n      addToHistory(\"Deleted last node from list\");\n      return;\n    }\n    if (listType === \"circular\") {\n      // Find the node before the last node\n      let curr = head;\n      let prev = null;\n      while (curr.next && curr.next !== head) {\n        prev = curr;\n        curr = curr.next;\n      }\n      if (prev) {\n        prev.next = head;\n      }\n    } else {\n      // Find the second-to-last node\n      let curr = head;\n      let prev = null;\n      while (curr.next) {\n        prev = curr;\n        curr = curr.next;\n      }\n      if (prev) {\n        prev.next = null;\n        if (listType === \"doubly\") {\n          // No need to update curr.prev since we're deleting curr\n        }\n      }\n    }\n    setHead({\n      ...head\n    });\n    addToHistory(\"Deleted node from end\");\n  };\n  const deleteAtPosition = async pos => {\n    if (pos < 1) {\n      addToHistory(\"Position must be 1 or greater\");\n      return;\n    }\n    if (!head) {\n      addToHistory(\"Cannot delete from empty list\");\n      return;\n    }\n    if (pos === 1) {\n      deleteAtBeginning();\n      return;\n    }\n    let curr = head;\n    let prev = null;\n    let currentPos = 1;\n\n    // Navigate to the position\n    while (curr && currentPos < pos) {\n      prev = curr;\n      curr = curr.next;\n      currentPos++;\n\n      // Prevent infinite loop in circular lists\n      if (listType === \"circular\" && curr === head) break;\n    }\n    if (!curr || currentPos < pos) {\n      addToHistory(`Position ${pos} is beyond list length`);\n      return;\n    }\n\n    // Delete the node\n    if (prev) {\n      prev.next = curr.next;\n      if (listType === \"doubly\" && curr.next) {\n        curr.next.prev = prev;\n      }\n    }\n    setHead({\n      ...head\n    });\n    addToHistory(`Deleted node from position ${pos}`);\n  };\n  const search = async value => {\n    if (!head) {\n      addToHistory(\"Cannot search in empty list\");\n      return;\n    }\n    let curr = head;\n    let position = 1;\n    let found = false;\n    do {\n      if (!curr) break;\n      if (curr.value === value) {\n        found = true;\n        break;\n      }\n      curr = curr.next;\n      position++;\n    } while (curr && (listType !== \"circular\" || curr !== head));\n    if (!found) {\n      addToHistory(`Value ${value} not found in the list`);\n    } else {\n      addToHistory(`Searched for value ${value} - found at position ${position}`);\n    }\n  };\n  const addToHistory = operation => {\n    setOperationHistory(prev => [`${new Date().toLocaleTimeString()}: ${operation}`, ...prev.slice(0, 19)]);\n  };\n  const getOperationCode = operation => {\n    const codes = {\n      \"insert-beginning\": {\n        title: \"Insert at Beginning\",\n        steps: [\"1. Create a new node with the given value\", \"2. Set new node's next pointer to current head\", \"3. Update head to point to new node\", \"4. For doubly linked lists, update prev pointers\", \"5. For circular lists, update tail's next pointer\"],\n        code: `// Singly Linked List\nfunction insertAtBeginning(value) {\n    const newNode = new Node(value);\n    newNode.next = head;\n    head = newNode;\n}\n\n// Doubly Linked List\nfunction insertAtBeginning(value) {\n    const newNode = new Node(value);\n    newNode.next = head;\n    if (head) {\n        head.prev = newNode;\n    }\n    head = newNode;\n}\n\n// Circular Linked List\nfunction insertAtBeginning(value) {\n    const newNode = new Node(value);\n    if (!head) {\n        newNode.next = newNode;\n        head = newNode;\n    } else {\n        let tail = head;\n        while (tail.next !== head) {\n            tail = tail.next;\n        }\n        newNode.next = head;\n        tail.next = newNode;\n        head = newNode;\n    }\n}`\n      },\n      \"insert-end\": {\n        title: \"Insert at End\",\n        steps: [\"1. Create a new node with the given value\", \"2. If list is empty, make new node the head\", \"3. Otherwise, traverse to the last node\", \"4. Set last node's next pointer to new node\", \"5. For doubly linked lists, set new node's prev pointer\"],\n        code: `// Singly Linked List\nfunction insertAtEnd(value) {\n    const newNode = new Node(value);\n    if (!head) {\n        head = newNode;\n        return;\n    }\n    let current = head;\n    while (current.next) {\n        current = current.next;\n    }\n    current.next = newNode;\n}\n\n// Doubly Linked List\nfunction insertAtEnd(value) {\n    const newNode = new Node(value);\n    if (!head) {\n        head = newNode;\n        return;\n    }\n    let current = head;\n    while (current.next) {\n        current = current.next;\n    }\n    current.next = newNode;\n    newNode.prev = current;\n}\n\n// Circular Linked List\nfunction insertAtEnd(value) {\n    const newNode = new Node(value);\n    if (!head) {\n        newNode.next = newNode;\n        head = newNode;\n        return;\n    }\n    let current = head;\n    while (current.next !== head) {\n        current = current.next;\n    }\n    current.next = newNode;\n    newNode.next = head;\n}`\n      },\n      \"insert-position\": {\n        title: \"Insert at Position\",\n        steps: [\"1. Validate the position (must be >= 1)\", \"2. If position is 1, insert at beginning\", \"3. Create a new node with the given value\", \"4. Traverse to position-1 to find the previous node\", \"5. Update pointers to insert the new node\", \"6. Handle edge cases for different list types\"],\n        code: `// Singly Linked List\nfunction insertAtPosition(value, position) {\n    if (position < 1) return false;\n    if (position === 1) {\n        insertAtBeginning(value);\n        return true;\n    }\n    \n    const newNode = new Node(value);\n    let current = head;\n    \n    // Traverse to position-1\n    for (let i = 1; i < position - 1 && current; i++) {\n        current = current.next;\n    }\n    \n    if (!current) return false; // Position out of bounds\n    \n    newNode.next = current.next;\n    current.next = newNode;\n    return true;\n}\n\n// Doubly Linked List\nfunction insertAtPosition(value, position) {\n    if (position < 1) return false;\n    if (position === 1) {\n        insertAtBeginning(value);\n        return true;\n    }\n    \n    const newNode = new Node(value);\n    let current = head;\n    \n    for (let i = 1; i < position - 1 && current; i++) {\n        current = current.next;\n    }\n    \n    if (!current) return false;\n    \n    newNode.next = current.next;\n    newNode.prev = current;\n    if (current.next) {\n        current.next.prev = newNode;\n    }\n    current.next = newNode;\n    return true;\n}`\n      },\n      \"delete-beginning\": {\n        title: \"Delete from Beginning\",\n        steps: [\"1. Check if list is empty\", \"2. Store reference to current head\", \"3. Update head to point to second node\", \"4. For doubly linked lists, update prev pointer of new head\", \"5. For circular lists, update tail's next pointer\", \"6. Free memory of deleted node\"],\n        code: `// Singly Linked List\nfunction deleteAtBeginning() {\n    if (!head) return null;\n    \n    const deletedValue = head.value;\n    head = head.next;\n    return deletedValue;\n}\n\n// Doubly Linked List\nfunction deleteAtBeginning() {\n    if (!head) return null;\n    \n    const deletedValue = head.value;\n    head = head.next;\n    if (head) {\n        head.prev = null;\n    }\n    return deletedValue;\n}\n\n// Circular Linked List\nfunction deleteAtBeginning() {\n    if (!head) return null;\n    \n    const deletedValue = head.value;\n    \n    if (head.next === head) {\n        // Only one node\n        head = null;\n    } else {\n        let tail = head;\n        while (tail.next !== head) {\n            tail = tail.next;\n        }\n        head = head.next;\n        tail.next = head;\n    }\n    return deletedValue;\n}`\n      },\n      \"delete-end\": {\n        title: \"Delete from End\",\n        steps: [\"1. Check if list is empty\", \"2. If only one node, delete it and update head\", \"3. Traverse to second-to-last node\", \"4. Update its next pointer to null\", \"5. For circular lists, update to point to head\", \"6. Free memory of deleted node\"],\n        code: `// Singly Linked List\nfunction deleteAtEnd() {\n    if (!head) return null;\n    \n    if (!head.next) {\n        const deletedValue = head.value;\n        head = null;\n        return deletedValue;\n    }\n    \n    let current = head;\n    while (current.next.next) {\n        current = current.next;\n    }\n    \n    const deletedValue = current.next.value;\n    current.next = null;\n    return deletedValue;\n}\n\n// Doubly Linked List\nfunction deleteAtEnd() {\n    if (!head) return null;\n    \n    if (!head.next) {\n        const deletedValue = head.value;\n        head = null;\n        return deletedValue;\n    }\n    \n    let current = head;\n    while (current.next) {\n        current = current.next;\n    }\n    \n    const deletedValue = current.value;\n    current.prev.next = null;\n    return deletedValue;\n}\n\n// Circular Linked List\nfunction deleteAtEnd() {\n    if (!head) return null;\n    \n    if (head.next === head) {\n        const deletedValue = head.value;\n        head = null;\n        return deletedValue;\n    }\n    \n    let current = head;\n    let prev = null;\n    \n    while (current.next !== head) {\n        prev = current;\n        current = current.next;\n    }\n    \n    const deletedValue = current.value;\n    prev.next = head;\n    return deletedValue;\n}`\n      },\n      \"delete-position\": {\n        title: \"Delete from Position\",\n        steps: [\"1. Validate the position (must be >= 1)\", \"2. If position is 1, delete from beginning\", \"3. Traverse to position-1 to find previous node\", \"4. Store reference to node to be deleted\", \"5. Update previous node's next pointer\", \"6. For doubly linked lists, update next node's prev pointer\"],\n        code: `// Singly Linked List\nfunction deleteAtPosition(position) {\n    if (position < 1 || !head) return null;\n    \n    if (position === 1) {\n        return deleteAtBeginning();\n    }\n    \n    let current = head;\n    \n    // Traverse to position-1\n    for (let i = 1; i < position - 1 && current; i++) {\n        current = current.next;\n    }\n    \n    if (!current || !current.next) return null;\n    \n    const deletedValue = current.next.value;\n    current.next = current.next.next;\n    return deletedValue;\n}\n\n// Doubly Linked List\nfunction deleteAtPosition(position) {\n    if (position < 1 || !head) return null;\n    \n    if (position === 1) {\n        return deleteAtBeginning();\n    }\n    \n    let current = head;\n    \n    for (let i = 1; i < position && current; i++) {\n        current = current.next;\n    }\n    \n    if (!current) return null;\n    \n    const deletedValue = current.value;\n    \n    if (current.prev) {\n        current.prev.next = current.next;\n    }\n    if (current.next) {\n        current.next.prev = current.prev;\n    }\n    \n    return deletedValue;\n}`\n      }\n    };\n    return codes[operation] || {\n      title: \"\",\n      steps: [],\n      code: \"\"\n    };\n  };\n  const nodes = toArray();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(List, {\n                className: \"w-6 h-6 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\",\n                children: \"Interactive Linked List Visualizer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-1 text-gray-600\",\n                children: \"Learn linked lists through step-by-step animations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowTutorial(!showTutorial),\n              className: \"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tutorial\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCode(!showCode),\n              className: \"flex items-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\",\n              children: [/*#__PURE__*/_jsxDEV(Code, {\n                className: \"w-4 h-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 736,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\",\n      children: [showTutorial && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2 mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Lightbulb, {\n            className: \"w-5 h-5 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-blue-900\",\n            children: listType === \"singly\" ? \"Singly Linked List\" : listType === \"doubly\" ? \"Doubly Linked List\" : \"Circular Linked List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 750,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-blue-800 mb-4\",\n          children: listType === \"singly\" ? \"Each node contains data and a pointer to the next node. The last node points to null.\" : listType === \"doubly\" ? \"Each node contains data and pointers to both next and previous nodes.\" : \"The last node points back to the first node, forming a circle.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Clock, {\n                className: \"w-4 h-4 text-green-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 768,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold text-green-800\",\n                children: \"Time Complexity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-green-700\",\n              children: \"Insert/Delete at beginning: O(1), Insert/Delete at end: O(n), Search: O(n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                className: \"w-4 h-4 text-purple-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 777,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-semibold text-purple-800\",\n                children: \"Use Case\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-sm text-purple-700\",\n              children: listType === \"singly\" ? \"When you need dynamic size and frequent insertions/deletions at the beginning.\" : listType === \"doubly\" ? \"When you need bidirectional traversal and frequent insertions/deletions at both ends.\" : \"When you need to cycle through elements repeatedly, like in round-robin scheduling.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 mb-4\",\n          children: \"Choose Linked List Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [\"singly\", \"doubly\", \"circular\"].map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              setListType(type);\n              setHead(null);\n              setOperationHistory([]);\n              setNodeCounter(0);\n            },\n            className: `p-4 rounded-xl border-2 transition-all duration-200 ${listType === type ? \"border-blue-500 bg-blue-50 text-blue-700\" : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-semibold capitalize\",\n              children: [type, \" Linked List\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-600 mt-1\",\n              children: [type === \"singly\" && \"→ One-way connections\", type === \"doubly\" && \"↔ Two-way connections\", type === \"circular\" && \"↻ Circular connections\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this)]\n          }, type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-3 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6 sticky top-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-900 mb-6\",\n              children: \"Operations\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4 mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 831,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: inputValue,\n                  onChange: e => setInputValue(e.target.value),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                  placeholder: \"Enter value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 830,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: position,\n                  onChange: e => setPosition(Number(e.target.value)),\n                  min: \"1\",\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                  placeholder: \"Position\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 842,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"block text-sm font-medium text-gray-700 mb-2\",\n                  children: \"Search Value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: searchTerm,\n                  onChange: e => setSearchTerm(e.target.value),\n                  className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\",\n                  placeholder: \"Search for value\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 853,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 851,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 829,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-700 mb-2\",\n                  children: \"Insert Operations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 866,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const val = Number.parseInt(inputValue);\n                      if (!isNaN(val)) {\n                        setCurrentOperation(\"insert-beginning\");\n                        insertAtBeginning(val);\n                        setInputValue(\"\");\n                      }\n                    },\n                    disabled: !inputValue,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 880,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Insert at Beginning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 881,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const val = Number.parseInt(inputValue);\n                      if (!isNaN(val)) {\n                        setCurrentOperation(\"insert-end\");\n                        insertAtEnd(val);\n                        setInputValue(\"\");\n                      }\n                    },\n                    disabled: !inputValue,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 895,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Insert at End\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 896,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 883,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      const val = Number.parseInt(inputValue);\n                      if (!isNaN(val) && position >= 1) {\n                        setCurrentOperation(\"insert-position\");\n                        insertAtPosition(val, position);\n                        setInputValue(\"\");\n                      }\n                    },\n                    disabled: !inputValue || position < 1,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Plus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 910,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Insert at Position \", position]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 911,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 898,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-700 mb-2\",\n                  children: \"Delete Operations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 917,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"grid grid-cols-1 gap-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setCurrentOperation(\"delete-beginning\");\n                      deleteAtBeginning();\n                    },\n                    disabled: !head,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Minus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 927,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Delete from Beginning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 919,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setCurrentOperation(\"delete-end\");\n                      deleteAtEnd();\n                    },\n                    disabled: !head,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Minus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 938,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"Delete from End\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 930,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => {\n                      setCurrentOperation(\"delete-position\");\n                      deleteAtPosition(position);\n                    },\n                    disabled: !head || position < 1,\n                    className: \"flex items-center justify-center space-x-2 px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                    children: [/*#__PURE__*/_jsxDEV(Minus, {\n                      className: \"w-4 h-4\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 949,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [\"Delete from Position \", position]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 950,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 941,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 918,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 916,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-semibold text-gray-700 mb-2\",\n                  children: \"Other Operations\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 956,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    const val = Number.parseInt(searchTerm);\n                    if (!isNaN(val)) {\n                      search(val);\n                      setSearchTerm(\"\");\n                    }\n                  },\n                  disabled: !searchTerm || !head,\n                  className: \"flex items-center justify-center space-x-2 w-full px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\",\n                  children: [/*#__PURE__*/_jsxDEV(Target, {\n                    className: \"w-4 h-4\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 968,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Search Value\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 955,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 825,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lg:col-span-2 space-y-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-bold text-gray-900\",\n                children: [listType.charAt(0).toUpperCase() + listType.slice(1), \" Linked List\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 981,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-2 text-sm text-gray-600\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Nodes: \", nodes.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 985,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 984,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"min-h-[200px] bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 overflow-x-auto\",\n              children: nodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-center h-32 text-gray-500\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(List, {\n                    className: \"w-12 h-12 mx-auto mb-2 opacity-50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 994,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"List is empty. Add some nodes to get started!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 995,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 993,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 992,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-4\",\n                children: nodes.map((node, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `relative px-6 py-4 rounded-xl border-2 font-bold text-lg transition-all duration-500 ${index < nodes.length - 1 && \"border-blue-400\"}`,\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: node.value\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1008,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1003,\n                    columnNumber: 25\n                  }, this), index < nodes.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"w-8 h-0.5 bg-blue-400\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1012,\n                    columnNumber: 54\n                  }, this), listType === \"circular\" && index === nodes.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex items-center ml-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"w-8 h-0.5 bg-green-400\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1017,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(RotateCcw, {\n                      className: \"w-6 h-6 text-green-500\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1018,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ml-2 text-sm text-green-700 font-medium\",\n                      children: \"to HEAD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1019,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1016,\n                    columnNumber: 27\n                  }, this)]\n                }, node.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-900 mb-4\",\n              children: \"Operation History\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1031,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"max-h-60 overflow-y-auto space-y-2\",\n              children: operationHistory.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-gray-500 italic\",\n                children: \"No operations performed yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 19\n              }, this) : operationHistory.map((operation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3 bg-gray-50 rounded-lg text-sm text-gray-700 border-l-4 border-blue-400\",\n                children: operation\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1037,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1030,\n            columnNumber: 13\n          }, this), currentOperation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-xl font-bold text-gray-900\",\n                children: [getOperationCode(currentOperation).title, \" - Implementation\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowStepByStep(!showStepByStep),\n                className: \"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(Code, {\n                  className: \"w-4 h-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1059,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: showStepByStep ? \"Hide Steps\" : \"Show Steps\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1060,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1055,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1051,\n              columnNumber: 17\n            }, this), showStepByStep && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-lg font-semibold text-gray-800 mb-3\",\n                children: \"Algorithm Steps:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1066,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"list-decimal list-inside space-y-2\",\n                children: getOperationCode(currentOperation).steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"text-gray-700\",\n                  children: step\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1069,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1067,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1065,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-gray-900 rounded-lg p-4 overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                className: \"text-green-400 text-sm\",\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  children: getOperationCode(currentOperation).code\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1079,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1077,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 p-4 bg-blue-50 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"font-semibold text-blue-800 mb-2\",\n                children: \"Time & Space Complexity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-blue-700\",\n                    children: \"Time Complexity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1087,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-blue-600\",\n                    children: currentOperation.includes(\"position\") ? \"O(n)\" : currentOperation.includes(\"end\") && !currentOperation.includes(\"delete-end\") ? \"O(n)\" : \"O(1)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1088,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1086,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-blue-700\",\n                    children: \"Space Complexity:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1097,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-blue-600\",\n                    children: \"O(1)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1098,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1096,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1085,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1050,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 708,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkedListVisualizerPage, \"iUf7YsVq0hpQvEbcafFifnP45x0=\");\n_c = LinkedListVisualizerPage;\nexport default LinkedListVisualizerPage;\nvar _c;\n$RefreshReg$(_c, \"LinkedListVisualizerPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","List","Plus","Minus","RotateCcw","Code","BookOpen","Lightbulb","Target","Clock","jsxDEV","_jsxDEV","LinkedListVisualizerPage","listType","setListType","head","setHead","inputValue","setInputValue","position","setPosition","searchTerm","setSearchTerm","operationHistory","setOperationHistory","showCode","setShowCode","showTutorial","setShowTutorial","selectedOperation","setSelectedOperation","nodeCounter","setNodeCounter","showStepByStep","setShowStepByStep","currentOperation","setCurrentOperation","generateNodeId","prev","createNode","value","id","next","isNew","createDoublyNode","toArray","arr","curr","push","length","insertAtBeginning","newNode","tail","addToHistory","insertAtEnd","deleteAtBeginning","newHead","insertAtPosition","pos","currentPos","deleteAtEnd","deleteAtPosition","search","found","operation","Date","toLocaleTimeString","slice","getOperationCode","codes","title","steps","code","nodes","className","children","fileName","lineNumber","columnNumber","onClick","map","type","onChange","e","target","placeholder","Number","min","val","parseInt","isNaN","disabled","charAt","toUpperCase","node","index","step","includes","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/LinkedListVisualizerPage.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState } from \"react\"\r\nimport { List, Plus, Minus, RotateCcw, Code, BookOpen, Lightbulb, Target, Clock } from \"lucide-react\"\r\n\r\n// Enhanced Node interface with animation states\r\ninterface ListNode {\r\n  id: string\r\n  value: number\r\n  next: ListNode | null\r\n  prev?: ListNode | null\r\n  isHighlighted?: boolean\r\n  isNew?: boolean\r\n  isDeleting?: boolean\r\n  isModifying?: boolean\r\n  animationDelay?: number\r\n}\r\n\r\ntype ListType = \"singly\" | \"doubly\" | \"circular\"\r\ntype OperationType =\r\n  | \"insert-beginning\"\r\n  | \"insert-end\"\r\n  | \"insert-position\"\r\n  | \"delete-beginning\"\r\n  | \"delete-end\"\r\n  | \"delete-position\"\r\n  | \"modify\"\r\n  | \"reverse\"\r\n  | \"search\"\r\n\r\nfunction LinkedListVisualizerPage() {\r\n  const [listType, setListType] = useState<ListType>(\"singly\")\r\n  const [head, setHead] = useState<ListNode | null>(null)\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  const [position, setPosition] = useState(1)\r\n  const [searchTerm, setSearchTerm] = useState(\"\") // Renamed searchValue to searchTerm\r\n\r\n  // UI states\r\n  const [operationHistory, setOperationHistory] = useState<string[]>([])\r\n  const [showCode, setShowCode] = useState(false)\r\n  const [showTutorial, setShowTutorial] = useState(false)\r\n  const [selectedOperation, setSelectedOperation] = useState<OperationType | null>(null)\r\n  const [nodeCounter, setNodeCounter] = useState(0)\r\n\r\n  const [showStepByStep, setShowStepByStep] = useState(false)\r\n  const [currentOperation, setCurrentOperation] = useState<string>(\"\")\r\n\r\n  // Helper functions\r\n  const generateNodeId = () => {\r\n    setNodeCounter((prev) => prev + 1)\r\n    return `node-${nodeCounter}`\r\n  }\r\n\r\n  const createNode = (value: number): ListNode => ({\r\n    id: generateNodeId(),\r\n    value,\r\n    next: null,\r\n    isNew: true,\r\n  })\r\n\r\n  const createDoublyNode = (value: number): ListNode => ({\r\n    id: generateNodeId(),\r\n    value,\r\n    next: null,\r\n    prev: null,\r\n    isNew: true,\r\n  })\r\n\r\n  const toArray = (): ListNode[] => {\r\n    const arr: ListNode[] = []\r\n    let curr = head\r\n    if (!curr) return arr\r\n\r\n    if (listType === \"circular\") {\r\n      do {\r\n        arr.push(curr)\r\n        curr = curr.next\r\n      } while (curr && curr !== head && arr.length < 20) // Prevent infinite loop\r\n    } else {\r\n      while (curr) {\r\n        arr.push(curr)\r\n        curr = curr.next\r\n      }\r\n    }\r\n    return arr\r\n  }\r\n\r\n  const insertAtBeginning = async (value: number) => {\r\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value)\r\n\r\n    if (!head) {\r\n      if (listType === \"circular\") {\r\n        newNode.next = newNode\r\n        setHead(newNode)\r\n      } else {\r\n        setHead(newNode)\r\n      }\r\n    } else {\r\n      if (listType === \"doubly\") {\r\n        newNode.next = head\r\n        head.prev = newNode\r\n      } else if (listType === \"circular\") {\r\n        // Find tail for circular\r\n        let tail = head\r\n        while (tail.next && tail.next !== head) {\r\n          tail = tail.next\r\n        }\r\n        newNode.next = head\r\n        tail.next = newNode\r\n      } else {\r\n        newNode.next = head\r\n      }\r\n      setHead(newNode)\r\n    }\r\n\r\n    addToHistory(`Inserted ${value} at beginning`)\r\n  }\r\n\r\n  const insertAtEnd = async (value: number) => {\r\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value)\r\n\r\n    if (!head) {\r\n      setHead(newNode)\r\n    } else {\r\n      let curr = head\r\n      if (listType === \"circular\") {\r\n        while (curr.next && curr.next !== head) {\r\n          curr = curr.next\r\n        }\r\n        curr.next = newNode\r\n        newNode.next = head\r\n      } else {\r\n        while (curr.next) {\r\n          curr = curr.next\r\n        }\r\n        curr.next = newNode\r\n        if (listType === \"doubly\") {\r\n          newNode.prev = curr\r\n        }\r\n      }\r\n      setHead({ ...head })\r\n    }\r\n\r\n    addToHistory(`Inserted ${value} at end`)\r\n  }\r\n\r\n  const deleteAtBeginning = async () => {\r\n    if (!head) {\r\n      addToHistory(\"Cannot delete from empty list\")\r\n      return\r\n    }\r\n\r\n    if (listType === \"circular\" && head.next === head) {\r\n      setHead(null)\r\n    } else if (listType === \"circular\") {\r\n      // Find tail and update its next pointer\r\n      let tail = head\r\n      while (tail.next && tail.next !== head) {\r\n        tail = tail.next\r\n      }\r\n      const newHead = head.next\r\n      tail.next = newHead\r\n      setHead(newHead)\r\n    } else {\r\n      const newHead = head.next\r\n      if (listType === \"doubly\" && newHead) {\r\n        newHead.prev = null\r\n      }\r\n      setHead(newHead)\r\n    }\r\n\r\n    addToHistory(`Deleted node from beginning`)\r\n  }\r\n\r\n  const insertAtPosition = async (value: number, pos: number) => {\r\n    if (pos < 1) {\r\n      addToHistory(\"Position must be 1 or greater\")\r\n      return\r\n    }\r\n\r\n    if (pos === 1) {\r\n      insertAtBeginning(value)\r\n      return\r\n    }\r\n\r\n    const newNode = listType === \"doubly\" ? createDoublyNode(value) : createNode(value)\r\n\r\n    if (!head) {\r\n      addToHistory(\"Cannot insert at position in empty list\")\r\n      return\r\n    }\r\n\r\n    let curr: ListNode | null = head\r\n    let prev: ListNode | null = null\r\n    let currentPos = 1\r\n\r\n    // Navigate to the position\r\n    while (curr && currentPos < pos) {\r\n      prev = curr\r\n      curr = curr.next\r\n      currentPos++\r\n\r\n      // Prevent infinite loop in circular lists\r\n      if (listType === \"circular\" && curr === head) break\r\n    }\r\n\r\n    if (currentPos < pos) {\r\n      addToHistory(`Position ${pos} is beyond list length`)\r\n      return\r\n    }\r\n\r\n    // Insert the node\r\n    if (prev) {\r\n      prev.next = newNode\r\n      newNode.next = curr\r\n\r\n      if (listType === \"doubly\") {\r\n        newNode.prev = prev\r\n        if (curr) {\r\n          curr.prev = newNode\r\n        }\r\n      }\r\n    }\r\n\r\n    setHead({ ...head })\r\n    addToHistory(`Inserted ${value} at position ${pos}`)\r\n  }\r\n\r\n  const deleteAtEnd = async () => {\r\n    if (!head) {\r\n      addToHistory(\"Cannot delete from empty list\")\r\n      return\r\n    }\r\n\r\n    // Single node case\r\n    if (!head.next || (listType === \"circular\" && head.next === head)) {\r\n      setHead(null)\r\n      addToHistory(\"Deleted last node from list\")\r\n      return\r\n    }\r\n\r\n    if (listType === \"circular\") {\r\n      // Find the node before the last node\r\n      let curr = head\r\n      let prev: ListNode | null = null\r\n\r\n      while (curr.next && curr.next !== head) {\r\n        prev = curr\r\n        curr = curr.next\r\n      }\r\n\r\n      if (prev) {\r\n        prev.next = head\r\n      }\r\n    } else {\r\n      // Find the second-to-last node\r\n      let curr = head\r\n      let prev: ListNode | null = null\r\n\r\n      while (curr.next) {\r\n        prev = curr\r\n        curr = curr.next\r\n      }\r\n\r\n      if (prev) {\r\n        prev.next = null\r\n        if (listType === \"doubly\") {\r\n          // No need to update curr.prev since we're deleting curr\r\n        }\r\n      }\r\n    }\r\n\r\n    setHead({ ...head })\r\n    addToHistory(\"Deleted node from end\")\r\n  }\r\n\r\n  const deleteAtPosition = async (pos: number) => {\r\n    if (pos < 1) {\r\n      addToHistory(\"Position must be 1 or greater\")\r\n      return\r\n    }\r\n\r\n    if (!head) {\r\n      addToHistory(\"Cannot delete from empty list\")\r\n      return\r\n    }\r\n\r\n    if (pos === 1) {\r\n      deleteAtBeginning()\r\n      return\r\n    }\r\n\r\n    let curr = head\r\n    let prev: ListNode | null = null\r\n    let currentPos = 1\r\n\r\n    // Navigate to the position\r\n    while (curr && currentPos < pos) {\r\n      prev = curr\r\n      curr = curr.next\r\n      currentPos++\r\n\r\n      // Prevent infinite loop in circular lists\r\n      if (listType === \"circular\" && curr === head) break\r\n    }\r\n\r\n    if (!curr || currentPos < pos) {\r\n      addToHistory(`Position ${pos} is beyond list length`)\r\n      return\r\n    }\r\n\r\n    // Delete the node\r\n    if (prev) {\r\n      prev.next = curr.next\r\n\r\n      if (listType === \"doubly\" && curr.next) {\r\n        curr.next.prev = prev\r\n      }\r\n    }\r\n\r\n    setHead({ ...head })\r\n    addToHistory(`Deleted node from position ${pos}`)\r\n  }\r\n\r\n  const search = async (value: number) => {\r\n    if (!head) {\r\n      addToHistory(\"Cannot search in empty list\")\r\n      return\r\n    }\r\n\r\n    let curr: ListNode | null = head\r\n    let position = 1\r\n    let found = false\r\n\r\n    do {\r\n      if (!curr) break\r\n\r\n      if (curr.value === value) {\r\n        found = true\r\n        break\r\n      }\r\n\r\n      curr = curr.next\r\n      position++\r\n    } while (curr && (listType !== \"circular\" || curr !== head))\r\n\r\n    if (!found) {\r\n      addToHistory(`Value ${value} not found in the list`)\r\n    } else {\r\n      addToHistory(`Searched for value ${value} - found at position ${position}`)\r\n    }\r\n  }\r\n\r\n  const addToHistory = (operation: string) => {\r\n    setOperationHistory((prev) => [`${new Date().toLocaleTimeString()}: ${operation}`, ...prev.slice(0, 19)])\r\n  }\r\n\r\n  const getOperationCode = (operation: OperationType) => {\r\n    const codes = {\r\n      \"insert-beginning\": {\r\n        title: \"Insert at Beginning\",\r\n        steps: [\r\n          \"1. Create a new node with the given value\",\r\n          \"2. Set new node's next pointer to current head\",\r\n          \"3. Update head to point to new node\",\r\n          \"4. For doubly linked lists, update prev pointers\",\r\n          \"5. For circular lists, update tail's next pointer\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction insertAtBeginning(value) {\r\n    const newNode = new Node(value);\r\n    newNode.next = head;\r\n    head = newNode;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction insertAtBeginning(value) {\r\n    const newNode = new Node(value);\r\n    newNode.next = head;\r\n    if (head) {\r\n        head.prev = newNode;\r\n    }\r\n    head = newNode;\r\n}\r\n\r\n// Circular Linked List\r\nfunction insertAtBeginning(value) {\r\n    const newNode = new Node(value);\r\n    if (!head) {\r\n        newNode.next = newNode;\r\n        head = newNode;\r\n    } else {\r\n        let tail = head;\r\n        while (tail.next !== head) {\r\n            tail = tail.next;\r\n        }\r\n        newNode.next = head;\r\n        tail.next = newNode;\r\n        head = newNode;\r\n    }\r\n}`,\r\n      },\r\n      \"insert-end\": {\r\n        title: \"Insert at End\",\r\n        steps: [\r\n          \"1. Create a new node with the given value\",\r\n          \"2. If list is empty, make new node the head\",\r\n          \"3. Otherwise, traverse to the last node\",\r\n          \"4. Set last node's next pointer to new node\",\r\n          \"5. For doubly linked lists, set new node's prev pointer\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction insertAtEnd(value) {\r\n    const newNode = new Node(value);\r\n    if (!head) {\r\n        head = newNode;\r\n        return;\r\n    }\r\n    let current = head;\r\n    while (current.next) {\r\n        current = current.next;\r\n    }\r\n    current.next = newNode;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction insertAtEnd(value) {\r\n    const newNode = new Node(value);\r\n    if (!head) {\r\n        head = newNode;\r\n        return;\r\n    }\r\n    let current = head;\r\n    while (current.next) {\r\n        current = current.next;\r\n    }\r\n    current.next = newNode;\r\n    newNode.prev = current;\r\n}\r\n\r\n// Circular Linked List\r\nfunction insertAtEnd(value) {\r\n    const newNode = new Node(value);\r\n    if (!head) {\r\n        newNode.next = newNode;\r\n        head = newNode;\r\n        return;\r\n    }\r\n    let current = head;\r\n    while (current.next !== head) {\r\n        current = current.next;\r\n    }\r\n    current.next = newNode;\r\n    newNode.next = head;\r\n}`,\r\n      },\r\n      \"insert-position\": {\r\n        title: \"Insert at Position\",\r\n        steps: [\r\n          \"1. Validate the position (must be >= 1)\",\r\n          \"2. If position is 1, insert at beginning\",\r\n          \"3. Create a new node with the given value\",\r\n          \"4. Traverse to position-1 to find the previous node\",\r\n          \"5. Update pointers to insert the new node\",\r\n          \"6. Handle edge cases for different list types\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction insertAtPosition(value, position) {\r\n    if (position < 1) return false;\r\n    if (position === 1) {\r\n        insertAtBeginning(value);\r\n        return true;\r\n    }\r\n    \r\n    const newNode = new Node(value);\r\n    let current = head;\r\n    \r\n    // Traverse to position-1\r\n    for (let i = 1; i < position - 1 && current; i++) {\r\n        current = current.next;\r\n    }\r\n    \r\n    if (!current) return false; // Position out of bounds\r\n    \r\n    newNode.next = current.next;\r\n    current.next = newNode;\r\n    return true;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction insertAtPosition(value, position) {\r\n    if (position < 1) return false;\r\n    if (position === 1) {\r\n        insertAtBeginning(value);\r\n        return true;\r\n    }\r\n    \r\n    const newNode = new Node(value);\r\n    let current = head;\r\n    \r\n    for (let i = 1; i < position - 1 && current; i++) {\r\n        current = current.next;\r\n    }\r\n    \r\n    if (!current) return false;\r\n    \r\n    newNode.next = current.next;\r\n    newNode.prev = current;\r\n    if (current.next) {\r\n        current.next.prev = newNode;\r\n    }\r\n    current.next = newNode;\r\n    return true;\r\n}`,\r\n      },\r\n      \"delete-beginning\": {\r\n        title: \"Delete from Beginning\",\r\n        steps: [\r\n          \"1. Check if list is empty\",\r\n          \"2. Store reference to current head\",\r\n          \"3. Update head to point to second node\",\r\n          \"4. For doubly linked lists, update prev pointer of new head\",\r\n          \"5. For circular lists, update tail's next pointer\",\r\n          \"6. Free memory of deleted node\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction deleteAtBeginning() {\r\n    if (!head) return null;\r\n    \r\n    const deletedValue = head.value;\r\n    head = head.next;\r\n    return deletedValue;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction deleteAtBeginning() {\r\n    if (!head) return null;\r\n    \r\n    const deletedValue = head.value;\r\n    head = head.next;\r\n    if (head) {\r\n        head.prev = null;\r\n    }\r\n    return deletedValue;\r\n}\r\n\r\n// Circular Linked List\r\nfunction deleteAtBeginning() {\r\n    if (!head) return null;\r\n    \r\n    const deletedValue = head.value;\r\n    \r\n    if (head.next === head) {\r\n        // Only one node\r\n        head = null;\r\n    } else {\r\n        let tail = head;\r\n        while (tail.next !== head) {\r\n            tail = tail.next;\r\n        }\r\n        head = head.next;\r\n        tail.next = head;\r\n    }\r\n    return deletedValue;\r\n}`,\r\n      },\r\n      \"delete-end\": {\r\n        title: \"Delete from End\",\r\n        steps: [\r\n          \"1. Check if list is empty\",\r\n          \"2. If only one node, delete it and update head\",\r\n          \"3. Traverse to second-to-last node\",\r\n          \"4. Update its next pointer to null\",\r\n          \"5. For circular lists, update to point to head\",\r\n          \"6. Free memory of deleted node\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction deleteAtEnd() {\r\n    if (!head) return null;\r\n    \r\n    if (!head.next) {\r\n        const deletedValue = head.value;\r\n        head = null;\r\n        return deletedValue;\r\n    }\r\n    \r\n    let current = head;\r\n    while (current.next.next) {\r\n        current = current.next;\r\n    }\r\n    \r\n    const deletedValue = current.next.value;\r\n    current.next = null;\r\n    return deletedValue;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction deleteAtEnd() {\r\n    if (!head) return null;\r\n    \r\n    if (!head.next) {\r\n        const deletedValue = head.value;\r\n        head = null;\r\n        return deletedValue;\r\n    }\r\n    \r\n    let current = head;\r\n    while (current.next) {\r\n        current = current.next;\r\n    }\r\n    \r\n    const deletedValue = current.value;\r\n    current.prev.next = null;\r\n    return deletedValue;\r\n}\r\n\r\n// Circular Linked List\r\nfunction deleteAtEnd() {\r\n    if (!head) return null;\r\n    \r\n    if (head.next === head) {\r\n        const deletedValue = head.value;\r\n        head = null;\r\n        return deletedValue;\r\n    }\r\n    \r\n    let current = head;\r\n    let prev = null;\r\n    \r\n    while (current.next !== head) {\r\n        prev = current;\r\n        current = current.next;\r\n    }\r\n    \r\n    const deletedValue = current.value;\r\n    prev.next = head;\r\n    return deletedValue;\r\n}`,\r\n      },\r\n      \"delete-position\": {\r\n        title: \"Delete from Position\",\r\n        steps: [\r\n          \"1. Validate the position (must be >= 1)\",\r\n          \"2. If position is 1, delete from beginning\",\r\n          \"3. Traverse to position-1 to find previous node\",\r\n          \"4. Store reference to node to be deleted\",\r\n          \"5. Update previous node's next pointer\",\r\n          \"6. For doubly linked lists, update next node's prev pointer\",\r\n        ],\r\n        code: `// Singly Linked List\r\nfunction deleteAtPosition(position) {\r\n    if (position < 1 || !head) return null;\r\n    \r\n    if (position === 1) {\r\n        return deleteAtBeginning();\r\n    }\r\n    \r\n    let current = head;\r\n    \r\n    // Traverse to position-1\r\n    for (let i = 1; i < position - 1 && current; i++) {\r\n        current = current.next;\r\n    }\r\n    \r\n    if (!current || !current.next) return null;\r\n    \r\n    const deletedValue = current.next.value;\r\n    current.next = current.next.next;\r\n    return deletedValue;\r\n}\r\n\r\n// Doubly Linked List\r\nfunction deleteAtPosition(position) {\r\n    if (position < 1 || !head) return null;\r\n    \r\n    if (position === 1) {\r\n        return deleteAtBeginning();\r\n    }\r\n    \r\n    let current = head;\r\n    \r\n    for (let i = 1; i < position && current; i++) {\r\n        current = current.next;\r\n    }\r\n    \r\n    if (!current) return null;\r\n    \r\n    const deletedValue = current.value;\r\n    \r\n    if (current.prev) {\r\n        current.prev.next = current.next;\r\n    }\r\n    if (current.next) {\r\n        current.next.prev = current.prev;\r\n    }\r\n    \r\n    return deletedValue;\r\n}`,\r\n      },\r\n    }\r\n\r\n    return codes[operation] || { title: \"\", steps: [], code: \"\" }\r\n  }\r\n\r\n  const nodes = toArray()\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\">\r\n      {/* Header */}\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <div className=\"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\">\r\n                <List className=\"w-6 h-6 text-white\" />\r\n              </div>\r\n              <div>\r\n                <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n                  Interactive Linked List Visualizer\r\n                </h1>\r\n                <p className=\"mt-1 text-gray-600\">Learn linked lists through step-by-step animations</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center space-x-2\">\r\n              <button\r\n                onClick={() => setShowTutorial(!showTutorial)}\r\n                className=\"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\"\r\n              >\r\n                <BookOpen className=\"w-4 h-4\" />\r\n                <span>Tutorial</span>\r\n              </button>\r\n              <button\r\n                onClick={() => setShowCode(!showCode)}\r\n                className=\"flex items-center space-x-2 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors\"\r\n              >\r\n                <Code className=\"w-4 h-4\" />\r\n                <span>Code</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n        {/* Tutorial Panel */}\r\n        {showTutorial && (\r\n          <div className=\"mb-8 bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 border border-blue-200\">\r\n            <div className=\"flex items-center space-x-2 mb-4\">\r\n              <Lightbulb className=\"w-5 h-5 text-blue-600\" />\r\n              <h2 className=\"text-xl font-bold text-blue-900\">\r\n                {listType === \"singly\"\r\n                  ? \"Singly Linked List\"\r\n                  : listType === \"doubly\"\r\n                    ? \"Doubly Linked List\"\r\n                    : \"Circular Linked List\"}\r\n              </h2>\r\n            </div>\r\n            <p className=\"text-blue-800 mb-4\">\r\n              {listType === \"singly\"\r\n                ? \"Each node contains data and a pointer to the next node. The last node points to null.\"\r\n                : listType === \"doubly\"\r\n                  ? \"Each node contains data and pointers to both next and previous nodes.\"\r\n                  : \"The last node points back to the first node, forming a circle.\"}\r\n            </p>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div className=\"bg-white rounded-lg p-4\">\r\n                <div className=\"flex items-center space-x-2 mb-2\">\r\n                  <Clock className=\"w-4 h-4 text-green-600\" />\r\n                  <span className=\"font-semibold text-green-800\">Time Complexity</span>\r\n                </div>\r\n                <p className=\"text-sm text-green-700\">\r\n                  Insert/Delete at beginning: O(1), Insert/Delete at end: O(n), Search: O(n)\r\n                </p>\r\n              </div>\r\n              <div className=\"bg-white rounded-lg p-4\">\r\n                <div className=\"flex items-center space-x-2 mb-2\">\r\n                  <Target className=\"w-4 h-4 text-purple-600\" />\r\n                  <span className=\"font-semibold text-purple-800\">Use Case</span>\r\n                </div>\r\n                <p className=\"text-sm text-purple-700\">\r\n                  {listType === \"singly\"\r\n                    ? \"When you need dynamic size and frequent insertions/deletions at the beginning.\"\r\n                    : listType === \"doubly\"\r\n                      ? \"When you need bidirectional traversal and frequent insertions/deletions at both ends.\"\r\n                      : \"When you need to cycle through elements repeatedly, like in round-robin scheduling.\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* List Type Selector */}\r\n        <div className=\"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Choose Linked List Type</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {([\"singly\", \"doubly\", \"circular\"] as ListType[]).map((type) => (\r\n              <button\r\n                key={type}\r\n                onClick={() => {\r\n                  setListType(type)\r\n                  setHead(null)\r\n                  setOperationHistory([])\r\n                  setNodeCounter(0)\r\n                }}\r\n                className={`p-4 rounded-xl border-2 transition-all duration-200 ${\r\n                  listType === type\r\n                    ? \"border-blue-500 bg-blue-50 text-blue-700\"\r\n                    : \"border-gray-200 hover:border-gray-300 hover:bg-gray-50\"\r\n                }`}\r\n              >\r\n                <div className=\"text-lg font-semibold capitalize\">{type} Linked List</div>\r\n                <div className=\"text-sm text-gray-600 mt-1\">\r\n                  {type === \"singly\" && \"→ One-way connections\"}\r\n                  {type === \"doubly\" && \"↔ Two-way connections\"}\r\n                  {type === \"circular\" && \"↻ Circular connections\"}\r\n                </div>\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Controls Panel */}\r\n          <div className=\"lg:col-span-1\">\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6 sticky top-8\">\r\n              <h2 className=\"text-xl font-bold text-gray-900 mb-6\">Operations</h2>\r\n\r\n              {/* Input Controls */}\r\n              <div className=\"space-y-4 mb-6\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Value</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={inputValue}\r\n                    onChange={(e) => setInputValue(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    placeholder=\"Enter value\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Position</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={position}\r\n                    onChange={(e) => setPosition(Number(e.target.value))}\r\n                    min=\"1\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    placeholder=\"Position\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">Search Value</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n                    placeholder=\"Search for value\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Operation Buttons */}\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-700 mb-2\">Insert Operations</h3>\r\n                  <div className=\"grid grid-cols-1 gap-2\">\r\n                    <button\r\n                      onClick={() => {\r\n                        const val = Number.parseInt(inputValue)\r\n                        if (!isNaN(val)) {\r\n                          setCurrentOperation(\"insert-beginning\")\r\n                          insertAtBeginning(val)\r\n                          setInputValue(\"\")\r\n                        }\r\n                      }}\r\n                      disabled={!inputValue}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4\" />\r\n                      <span>Insert at Beginning</span>\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const val = Number.parseInt(inputValue)\r\n                        if (!isNaN(val)) {\r\n                          setCurrentOperation(\"insert-end\")\r\n                          insertAtEnd(val)\r\n                          setInputValue(\"\")\r\n                        }\r\n                      }}\r\n                      disabled={!inputValue}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4\" />\r\n                      <span>Insert at End</span>\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        const val = Number.parseInt(inputValue)\r\n                        if (!isNaN(val) && position >= 1) {\r\n                          setCurrentOperation(\"insert-position\")\r\n                          insertAtPosition(val, position)\r\n                          setInputValue(\"\")\r\n                        }\r\n                      }}\r\n                      disabled={!inputValue || position < 1}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Plus className=\"w-4 h-4\" />\r\n                      <span>Insert at Position {position}</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-700 mb-2\">Delete Operations</h3>\r\n                  <div className=\"grid grid-cols-1 gap-2\">\r\n                    <button\r\n                      onClick={() => {\r\n                        setCurrentOperation(\"delete-beginning\")\r\n                        deleteAtBeginning()\r\n                      }}\r\n                      disabled={!head}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Minus className=\"w-4 h-4\" />\r\n                      <span>Delete from Beginning</span>\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setCurrentOperation(\"delete-end\")\r\n                        deleteAtEnd()\r\n                      }}\r\n                      disabled={!head}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Minus className=\"w-4 h-4\" />\r\n                      <span>Delete from End</span>\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setCurrentOperation(\"delete-position\")\r\n                        deleteAtPosition(position)\r\n                      }}\r\n                      disabled={!head || position < 1}\r\n                      className=\"flex items-center justify-center space-x-2 px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                    >\r\n                      <Minus className=\"w-4 h-4\" />\r\n                      <span>Delete from Position {position}</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h3 className=\"font-semibold text-gray-700 mb-2\">Other Operations</h3>\r\n                  <button\r\n                    onClick={() => {\r\n                      const val = Number.parseInt(searchTerm)\r\n                      if (!isNaN(val)) {\r\n                        search(val)\r\n                        setSearchTerm(\"\")\r\n                      }\r\n                    }}\r\n                    disabled={!searchTerm || !head}\r\n                    className=\"flex items-center justify-center space-x-2 w-full px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n                  >\r\n                    <Target className=\"w-4 h-4\" />\r\n                    <span>Search Value</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Visualization Panel */}\r\n          <div className=\"lg:col-span-2 space-y-8\">\r\n            {/* Main Visualization */}\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n              <div className=\"flex items-center justify-between mb-6\">\r\n                <h2 className=\"text-xl font-bold text-gray-900\">\r\n                  {listType.charAt(0).toUpperCase() + listType.slice(1)} Linked List\r\n                </h2>\r\n                <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n                  <span>Nodes: {nodes.length}</span>\r\n                </div>\r\n              </div>\r\n\r\n              {/* List Visualization */}\r\n              <div className=\"min-h-[200px] bg-gradient-to-r from-blue-50 to-purple-50 rounded-xl p-6 overflow-x-auto\">\r\n                {nodes.length === 0 ? (\r\n                  <div className=\"flex items-center justify-center h-32 text-gray-500\">\r\n                    <div className=\"text-center\">\r\n                      <List className=\"w-12 h-12 mx-auto mb-2 opacity-50\" />\r\n                      <p>List is empty. Add some nodes to get started!</p>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    {nodes.map((node, index) => (\r\n                      <div key={node.id} className=\"flex items-center\">\r\n                        {/* Node */}\r\n                        <div\r\n                          className={`relative px-6 py-4 rounded-xl border-2 font-bold text-lg transition-all duration-500 ${\r\n                            index < nodes.length - 1 && \"border-blue-400\"\r\n                          }`}\r\n                        >\r\n                          <span>{node.value}</span>\r\n                        </div>\r\n\r\n                        {/* Connection line */}\r\n                        {index < nodes.length - 1 && <div className=\"w-8 h-0.5 bg-blue-400\"></div>}\r\n\r\n                        {/* Circular connection indicator */}\r\n                        {listType === \"circular\" && index === nodes.length - 1 && (\r\n                          <div className=\"flex items-center ml-4\">\r\n                            <div className=\"w-8 h-0.5 bg-green-400\"></div>\r\n                            <RotateCcw className=\"w-6 h-6 text-green-500\" />\r\n                            <span className=\"ml-2 text-sm text-green-700 font-medium\">to HEAD</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Operation History */}\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n              <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Operation History</h2>\r\n              <div className=\"max-h-60 overflow-y-auto space-y-2\">\r\n                {operationHistory.length === 0 ? (\r\n                  <p className=\"text-gray-500 italic\">No operations performed yet</p>\r\n                ) : (\r\n                  operationHistory.map((operation, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className=\"p-3 bg-gray-50 rounded-lg text-sm text-gray-700 border-l-4 border-blue-400\"\r\n                    >\r\n                      {operation}\r\n                    </div>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Code Implementation Section */}\r\n            {currentOperation && (\r\n              <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h2 className=\"text-xl font-bold text-gray-900\">\r\n                    {getOperationCode(currentOperation as OperationType).title} - Implementation\r\n                  </h2>\r\n                  <button\r\n                    onClick={() => setShowStepByStep(!showStepByStep)}\r\n                    className=\"flex items-center space-x-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 transition-colors\"\r\n                  >\r\n                    <Code className=\"w-4 h-4\" />\r\n                    <span>{showStepByStep ? \"Hide Steps\" : \"Show Steps\"}</span>\r\n                  </button>\r\n                </div>\r\n\r\n                {showStepByStep && (\r\n                  <div className=\"mb-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-800 mb-3\">Algorithm Steps:</h3>\r\n                    <ol className=\"list-decimal list-inside space-y-2\">\r\n                      {getOperationCode(currentOperation as OperationType).steps.map((step: string, index: number) => (\r\n                        <li key={index} className=\"text-gray-700\">\r\n                          {step}\r\n                        </li>\r\n                      ))}\r\n                    </ol>\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"bg-gray-900 rounded-lg p-4 overflow-x-auto\">\r\n                  <pre className=\"text-green-400 text-sm\">\r\n                    <code>{getOperationCode(currentOperation as OperationType).code}</code>\r\n                  </pre>\r\n                </div>\r\n\r\n                <div className=\"mt-4 p-4 bg-blue-50 rounded-lg\">\r\n                  <h4 className=\"font-semibold text-blue-800 mb-2\">Time & Space Complexity:</h4>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\r\n                    <div>\r\n                      <span className=\"font-medium text-blue-700\">Time Complexity:</span>\r\n                      <span className=\"ml-2 text-blue-600\">\r\n                        {currentOperation.includes(\"position\")\r\n                          ? \"O(n)\"\r\n                          : currentOperation.includes(\"end\") && !currentOperation.includes(\"delete-end\")\r\n                            ? \"O(n)\"\r\n                            : \"O(1)\"}\r\n                      </span>\r\n                    </div>\r\n                    <div>\r\n                      <span className=\"font-medium text-blue-700\">Space Complexity:</span>\r\n                      <span className=\"ml-2 text-blue-600\">O(1)</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LinkedListVisualizerPage\r\n"],"mappings":"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AC1D;QACDC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC;MACD,iBAAiB,EAAE;QACjBF,KAAK,EAAE,oBAAoB;QAC3BC,KAAK,EAAE,CACL,yCAAyC,EACzC,0CAA0C,EAC1C,2CAA2C,EAC3C,qDAAqD,EACrD,2CAA2C,EAC3C,+CAA+C,CAChD;QACDC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC;MACD,kBAAkB,EAAE;QAClBF,KAAK,EAAE,uBAAuB;QAC9BC,KAAK,EAAE,CACL,2BAA2B,EAC3B,oCAAoC,EACpC,wCAAwC,EACxC,6DAA6D,EAC7D,mDAAmD,EACnD,gCAAgC,CACjC;QACDC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC;MACD,YAAY,EAAE;QACZF,KAAK,EAAE,iBAAiB;QACxBC,KAAK,EAAE,CACL,2BAA2B,EAC3B,gDAAgD,EAChD,oCAAoC,EACpC,oCAAoC,EACpC,gDAAgD,EAChD,gCAAgC,CACjC;QACDC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM,CAAC;MACD,iBAAiB,EAAE;QACjBF,KAAK,EAAE,sBAAsB;QAC7BC,KAAK,EAAE,CACL,yCAAyC,EACzC,4CAA4C,EAC5C,iDAAiD,EACjD,0CAA0C,EAC1C,wCAAwC,EACxC,6DAA6D,CAC9D;QACDC,IAAI,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACM;IACF,CAAC;IAED,OAAOH,KAAK,CAACL,SAAS,CAAC,IAAI;MAAEM,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;EAC/D,CAAC;EAED,MAAMC,KAAK,GAAG5B,OAAO,CAAC,CAAC;EAEvB,oBACElC,OAAA;IAAK+D,SAAS,EAAC,qEAAqE;IAAAC,QAAA,gBAElFhE,OAAA;MAAQ+D,SAAS,EAAC,6BAA6B;MAAAC,QAAA,eAC7ChE,OAAA;QAAK+D,SAAS,EAAC,6CAA6C;QAAAC,QAAA,eAC1DhE,OAAA;UAAK+D,SAAS,EAAC,mCAAmC;UAAAC,QAAA,gBAChDhE,OAAA;YAAK+D,SAAS,EAAC,6BAA6B;YAAAC,QAAA,gBAC1ChE,OAAA;cAAK+D,SAAS,EAAC,6DAA6D;cAAAC,QAAA,eAC1EhE,OAAA,CAACV,IAAI;gBAACyE,SAAS,EAAC;cAAoB;gBAAAE,QAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}