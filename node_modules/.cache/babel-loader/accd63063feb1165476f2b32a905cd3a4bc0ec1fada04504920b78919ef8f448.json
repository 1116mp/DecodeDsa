{"ast":null,"code":"var _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\array-algorithms\\\\sliding-window.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Paper, Grid } from '@mui/material';\nimport { ArrowBack, ArrowForward, PlayArrow, Pause } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SlidingWindowPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [array, setArray] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [windowSize, setWindowSize] = useState(3);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [result, setResult] = useState(null);\n  const [windowSum, setWindowSum] = useState(null);\n  const [maxSum, setMaxSum] = useState(null);\n  const [highlightedIndices, setHighlightedIndices] = useState([]);\n  const handleArrayInput = value => {\n    const numbers = value.split(',').map(num => parseInt(num.trim()));\n    if (numbers.every(num => !isNaN(num))) {\n      setArray(numbers);\n      setCurrentStep(0);\n      setResult(null);\n      setWindowSum(null);\n      setMaxSum(null);\n      setHighlightedIndices([]);\n    }\n  };\n  const handleWindowSizeChange = value => {\n    const size = parseInt(value);\n    if (!isNaN(size) && size > 0) {\n      setWindowSize(size);\n      setCurrentStep(0);\n      setResult(null);\n      setWindowSum(null);\n      setMaxSum(null);\n      setHighlightedIndices([]);\n    }\n  };\n  const findMaxSum = () => {\n    if (array.length === 0 || windowSize > array.length) return;\n    let currentSum = 0;\n    let maxSum = -Infinity;\n    let start = 0;\n    for (let end = 0; end < array.length; end++) {\n      currentSum += array[end];\n      if (end >= windowSize - 1) {\n        maxSum = Math.max(maxSum, currentSum);\n        currentSum -= array[start];\n        start++;\n      }\n    }\n    setResult(maxSum);\n  };\n  const visualizeStep = step => {\n    if (array.length === 0 || windowSize > array.length) return;\n    const start = step;\n    const end = step + windowSize - 1;\n    if (end >= array.length) {\n      setHighlightedIndices([]);\n      return;\n    }\n    const windowIndices = Array.from({\n      length: windowSize\n    }, (_, i) => start + i);\n    setHighlightedIndices(windowIndices);\n    const currentWindowSum = windowIndices.reduce((sum, idx) => sum + array[idx], 0);\n    setWindowSum(currentWindowSum);\n    setMaxSum(prev => prev === null ? currentWindowSum : Math.max(prev, currentWindowSum));\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setCurrentStep(prev => {\n          if (prev >= array.length - windowSize + 1) {\n            setIsPlaying(false);\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [isPlaying, array.length, windowSize]);\n  useEffect(() => {\n    visualizeStep(currentStep);\n  }, [currentStep, array, windowSize]);\n  const totalSteps = array.length - windowSize + 1;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Sliding Window Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: \"The Sliding Window technique is used to find a subarray of a given size that has the maximum sum. It maintains a window of fixed size and slides it through the array, updating the maximum sum as it goes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter array (comma-separated numbers)\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onBlur: e => handleArrayInput(e.target.value),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Window Size\",\n          type: \"number\",\n          value: windowSize,\n          onChange: e => handleWindowSizeChange(e.target.value),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2\n          },\n          children: array.map((num, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 60,\n              height: 60,\n              border: '2px solid #1976d2',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              mx: 0.5,\n              backgroundColor: highlightedIndices.includes(index) ? '#bbdefb' : 'white',\n              transition: 'background-color 0.3s'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: num\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 26\n            }, this),\n            onClick: () => setCurrentStep(prev => Math.max(0, prev - 1)),\n            disabled: currentStep === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsPlaying(!isPlaying),\n            startIcon: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 50\n            }, this),\n            children: isPlaying ? 'Pause' : 'Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 24\n            }, this),\n            onClick: () => setCurrentStep(prev => Math.min(totalSteps - 1, prev + 1)),\n            disabled: currentStep === totalSteps - 1,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            bgcolor: '#f5f5f5'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"Current Window Sum: \", windowSum !== null ? windowSum : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: [\"Maximum Sum: \", maxSum !== null ? maxSum : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Step \", currentStep + 1, \" of \", totalSteps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            bgcolor: '#f5f5f5'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Implementation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              margin: 0,\n              whiteSpace: 'pre-wrap'\n            },\n            children: `function maxSumSubarray(arr: number[], k: number): number {\n  let maxSum = -Infinity;\n  let currentSum = 0;\n  let start = 0;\n\n  for (let end = 0; end < arr.length; end++) {\n    currentSum += arr[end];\n\n    if (end >= k - 1) {\n      maxSum = Math.max(maxSum, currentSum);\n      currentSum -= arr[start];\n      start++;\n    }\n  }\n\n  return maxSum;\n}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(SlidingWindowPage, \"zpN59IuBUR/xyyG5t1a0FpHWSiM=\", false, function () {\n  return [useNavigate];\n});\n_c = SlidingWindowPage;\nexport default SlidingWindowPage;\nvar _c;\n$RefreshReg$(_c, \"SlidingWindowPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Paper","Grid","ArrowBack","ArrowForward","PlayArrow","Pause","useNavigate","jsxDEV","_jsxDEV","SlidingWindowPage","_s","navigate","array","setArray","inputValue","setInputValue","windowSize","setWindowSize","currentStep","setCurrentStep","isPlaying","setIsPlaying","result","setResult","windowSum","setWindowSum","maxSum","setMaxSum","highlightedIndices","setHighlightedIndices","handleArrayInput","value","numbers","split","map","num","parseInt","trim","every","isNaN","handleWindowSizeChange","size","findMaxSum","length","currentSum","Infinity","start","end","Math","max","visualizeStep","step","windowIndices","Array","from","_","i","currentWindowSum","reduce","sum","idx","prev","timer","setInterval","clearInterval","totalSteps","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","paragraph","container","spacing","item","xs","md","fullWidth","label","onChange","e","target","onBlur","margin","type","display","justifyContent","index","width","height","border","borderRadius","alignItems","mx","backgroundColor","includes","transition","gap","startIcon","onClick","disabled","endIcon","min","bgcolor","color","style","whiteSpace","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/array-algorithms/sliding-window.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, TextField, Button, Paper, Grid } from '@mui/material';\r\nimport { ArrowBack, ArrowForward, PlayArrow, Pause } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SlidingWindowPage = () => {\r\n  const navigate = useNavigate();\r\n  const [array, setArray] = useState<number[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [windowSize, setWindowSize] = useState<number>(3);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [result, setResult] = useState<number | null>(null);\r\n  const [windowSum, setWindowSum] = useState<number | null>(null);\r\n  const [maxSum, setMaxSum] = useState<number | null>(null);\r\n  const [highlightedIndices, setHighlightedIndices] = useState<number[]>([]);\r\n\r\n  const handleArrayInput = (value: string) => {\r\n    const numbers = value.split(',').map(num => parseInt(num.trim()));\r\n    if (numbers.every(num => !isNaN(num))) {\r\n      setArray(numbers);\r\n      setCurrentStep(0);\r\n      setResult(null);\r\n      setWindowSum(null);\r\n      setMaxSum(null);\r\n      setHighlightedIndices([]);\r\n    }\r\n  };\r\n\r\n  const handleWindowSizeChange = (value: string) => {\r\n    const size = parseInt(value);\r\n    if (!isNaN(size) && size > 0) {\r\n      setWindowSize(size);\r\n      setCurrentStep(0);\r\n      setResult(null);\r\n      setWindowSum(null);\r\n      setMaxSum(null);\r\n      setHighlightedIndices([]);\r\n    }\r\n  };\r\n\r\n  const findMaxSum = () => {\r\n    if (array.length === 0 || windowSize > array.length) return;\r\n\r\n    let currentSum = 0;\r\n    let maxSum = -Infinity;\r\n    let start = 0;\r\n\r\n    for (let end = 0; end < array.length; end++) {\r\n      currentSum += array[end];\r\n\r\n      if (end >= windowSize - 1) {\r\n        maxSum = Math.max(maxSum, currentSum);\r\n        currentSum -= array[start];\r\n        start++;\r\n      }\r\n    }\r\n\r\n    setResult(maxSum);\r\n  };\r\n\r\n  const visualizeStep = (step: number) => {\r\n    if (array.length === 0 || windowSize > array.length) return;\r\n\r\n    const start = step;\r\n    const end = step + windowSize - 1;\r\n    \r\n    if (end >= array.length) {\r\n      setHighlightedIndices([]);\r\n      return;\r\n    }\r\n\r\n    const windowIndices = Array.from({ length: windowSize }, (_, i) => start + i);\r\n    setHighlightedIndices(windowIndices);\r\n\r\n    const currentWindowSum = windowIndices.reduce((sum, idx) => sum + array[idx], 0);\r\n    setWindowSum(currentWindowSum);\r\n    setMaxSum(prev => prev === null ? currentWindowSum : Math.max(prev, currentWindowSum));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      const timer = setInterval(() => {\r\n        setCurrentStep(prev => {\r\n          if (prev >= array.length - windowSize + 1) {\r\n            setIsPlaying(false);\r\n            return prev;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [isPlaying, array.length, windowSize]);\r\n\r\n  useEffect(() => {\r\n    visualizeStep(currentStep);\r\n  }, [currentStep, array, windowSize]);\r\n\r\n  const totalSteps = array.length - windowSize + 1;\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Sliding Window Algorithm\r\n      </Typography>\r\n      \r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"body1\" paragraph>\r\n          The Sliding Window technique is used to find a subarray of a given size that has the maximum sum.\r\n          It maintains a window of fixed size and slides it through the array, updating the maximum sum as it goes.\r\n        </Typography>\r\n      </Paper>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Enter array (comma-separated numbers)\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onBlur={(e) => handleArrayInput(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Window Size\"\r\n            type=\"number\"\r\n            value={windowSize}\r\n            onChange={(e) => handleWindowSizeChange(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\r\n            {array.map((num, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  width: 60,\r\n                  height: 60,\r\n                  border: '2px solid #1976d2',\r\n                  borderRadius: 1,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  mx: 0.5,\r\n                  backgroundColor: highlightedIndices.includes(index) ? '#bbdefb' : 'white',\r\n                  transition: 'background-color 0.3s',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\">{num}</Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<ArrowBack />}\r\n              onClick={() => setCurrentStep(prev => Math.max(0, prev - 1))}\r\n              disabled={currentStep === 0}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setIsPlaying(!isPlaying)}\r\n              startIcon={isPlaying ? <Pause /> : <PlayArrow />}\r\n            >\r\n              {isPlaying ? 'Pause' : 'Play'}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              endIcon={<ArrowForward />}\r\n              onClick={() => setCurrentStep(prev => Math.min(totalSteps - 1, prev + 1))}\r\n              disabled={currentStep === totalSteps - 1}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, bgcolor: '#f5f5f5' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Current Window Sum: {windowSum !== null ? windowSum : 'N/A'}\r\n            </Typography>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Maximum Sum: {maxSum !== null ? maxSum : 'N/A'}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Step {currentStep + 1} of {totalSteps}\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, bgcolor: '#f5f5f5' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Implementation\r\n            </Typography>\r\n            <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\r\n{`function maxSumSubarray(arr: number[], k: number): number {\r\n  let maxSum = -Infinity;\r\n  let currentSum = 0;\r\n  let start = 0;\r\n\r\n  for (let end = 0; end < arr.length; end++) {\r\n    currentSum += arr[end];\r\n\r\n    if (end >= k - 1) {\r\n      maxSum = Math.max(maxSum, currentSum);\r\n      currentSum -= arr[start];\r\n      start++;\r\n    }\r\n  }\r\n\r\n  return maxSum;\r\n}`}\r\n            </pre>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SlidingWindowPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}