{"ast":null,"code":"var _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\array-algorithms\\\\hashing.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, TextField, Button, Paper, Grid } from '@mui/material';\nimport { ArrowBack, ArrowForward, PlayArrow, Pause } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HashingPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [array, setArray] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [targetSum, setTargetSum] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [result, setResult] = useState(null);\n  const [hashMap, setHashMap] = useState(new Map());\n  const [highlightedIndices, setHighlightedIndices] = useState([]);\n  const handleArrayInput = value => {\n    const numbers = value.split(',').map(num => parseInt(num.trim()));\n    if (numbers.every(num => !isNaN(num))) {\n      setArray(numbers);\n      setCurrentStep(0);\n      setResult(null);\n      setHashMap(new Map());\n      setHighlightedIndices([]);\n    }\n  };\n  const handleTargetSumChange = value => {\n    const sum = parseInt(value);\n    if (!isNaN(sum)) {\n      setTargetSum(sum);\n      setCurrentStep(0);\n      setResult(null);\n      setHashMap(new Map());\n      setHighlightedIndices([]);\n    }\n  };\n  const findPair = () => {\n    const map = new Map();\n    for (let i = 0; i < array.length; i++) {\n      const complement = targetSum - array[i];\n      if (map.has(complement)) {\n        setResult([map.get(complement), i]);\n        return;\n      }\n      map.set(array[i], i);\n    }\n    setResult(null);\n  };\n  const visualizeStep = step => {\n    if (array.length === 0 || step >= array.length) {\n      setHighlightedIndices([]);\n      return;\n    }\n    const currentNum = array[step];\n    const complement = targetSum - currentNum;\n    const newHashMap = new Map(hashMap);\n    newHashMap.set(currentNum, step);\n    setHashMap(newHashMap);\n    if (hashMap.has(complement)) {\n      setHighlightedIndices([hashMap.get(complement), step]);\n      setResult([hashMap.get(complement), step]);\n    } else {\n      setHighlightedIndices([step]);\n    }\n  };\n  useEffect(() => {\n    if (isPlaying) {\n      const timer = setInterval(() => {\n        setCurrentStep(prev => {\n          if (prev >= array.length - 1) {\n            setIsPlaying(false);\n            return prev;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [isPlaying, array.length]);\n  useEffect(() => {\n    visualizeStep(currentStep);\n  }, [currentStep, array]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Hashing Algorithm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: 2,\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        paragraph: true,\n        children: \"The Hashing technique is used to find pairs of numbers in an array that sum up to a target value. It uses a hash map to store previously seen numbers and their indices, allowing for O(1) lookups.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Enter array (comma-separated numbers)\",\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onBlur: e => handleArrayInput(e.target.value),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Target Sum\",\n          type: \"number\",\n          value: targetSum,\n          onChange: e => handleTargetSumChange(e.target.value),\n          margin: \"normal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            mb: 2\n          },\n          children: array.map((num, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: 60,\n              height: 60,\n              border: '2px solid #1976d2',\n              borderRadius: 1,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              mx: 0.5,\n              backgroundColor: highlightedIndices.includes(index) ? '#bbdefb' : 'white',\n              transition: 'background-color 0.3s'\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: num\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: 2,\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 26\n            }, this),\n            onClick: () => setCurrentStep(prev => Math.max(0, prev - 1)),\n            disabled: currentStep === 0,\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: () => setIsPlaying(!isPlaying),\n            startIcon: isPlaying ? /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 38\n            }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 50\n            }, this),\n            children: isPlaying ? 'Pause' : 'Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            endIcon: /*#__PURE__*/_jsxDEV(ArrowForward, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 24\n            }, this),\n            onClick: () => setCurrentStep(prev => Math.min(array.length - 1, prev + 1)),\n            disabled: currentStep === array.length - 1,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            bgcolor: '#f5f5f5'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Hash Map Contents:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1\n            },\n            children: Array.from(hashMap.entries()).map(([key, value]) => /*#__PURE__*/_jsxDEV(Paper, {\n              sx: {\n                p: 1,\n                bgcolor: 'white'\n              },\n              children: [key, \" \\u2192 \", value]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), result && /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              mt: 2\n            },\n            children: [\"Found pair at indices \", result[0], \" and \", result[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            sx: {\n              mt: 1\n            },\n            children: [\"Step \", currentStep + 1, \" of \", array.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2,\n            bgcolor: '#f5f5f5'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Implementation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              margin: 0,\n              whiteSpace: 'pre-wrap'\n            },\n            children: `function findPairWithSum(arr: number[], target: number): [number, number] | null {\n  const map = new Map<number, number>();\n  \n  for (let i = 0; i < arr.length; i++) {\n    const complement = target - arr[i];\n    \n    if (map.has(complement)) {\n      return [map.get(complement)!, i];\n    }\n    \n    map.set(arr[i], i);\n  }\n  \n  return null;\n}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(HashingPage, \"BCeL9lbQG5DTFrwlPGs3CQGDtpM=\", false, function () {\n  return [useNavigate];\n});\n_c = HashingPage;\nexport default HashingPage;\nvar _c;\n$RefreshReg$(_c, \"HashingPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","TextField","Button","Paper","Grid","ArrowBack","ArrowForward","PlayArrow","Pause","useNavigate","jsxDEV","_jsxDEV","HashingPage","_s","navigate","array","setArray","inputValue","setInputValue","targetSum","setTargetSum","currentStep","setCurrentStep","isPlaying","setIsPlaying","result","setResult","hashMap","setHashMap","Map","highlightedIndices","setHighlightedIndices","handleArrayInput","value","numbers","split","map","num","parseInt","trim","every","isNaN","handleTargetSumChange","sum","findPair","i","length","complement","has","get","set","visualizeStep","step","currentNum","newHashMap","timer","setInterval","prev","clearInterval","sx","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","mb","paragraph","container","spacing","item","xs","md","fullWidth","label","onChange","e","target","onBlur","margin","type","display","justifyContent","index","width","height","border","borderRadius","alignItems","mx","backgroundColor","includes","transition","gap","startIcon","onClick","Math","max","disabled","endIcon","min","bgcolor","flexWrap","Array","from","entries","key","mt","color","style","whiteSpace","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/array-algorithms/hashing.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box, Typography, TextField, Button, Paper, Grid } from '@mui/material';\r\nimport { ArrowBack, ArrowForward, PlayArrow, Pause } from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst HashingPage = () => {\r\n  const navigate = useNavigate();\r\n  const [array, setArray] = useState<number[]>([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [targetSum, setTargetSum] = useState<number>(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [result, setResult] = useState<[number, number] | null>(null);\r\n  const [hashMap, setHashMap] = useState<Map<number, number>>(new Map());\r\n  const [highlightedIndices, setHighlightedIndices] = useState<number[]>([]);\r\n\r\n  const handleArrayInput = (value: string) => {\r\n    const numbers = value.split(',').map(num => parseInt(num.trim()));\r\n    if (numbers.every(num => !isNaN(num))) {\r\n      setArray(numbers);\r\n      setCurrentStep(0);\r\n      setResult(null);\r\n      setHashMap(new Map());\r\n      setHighlightedIndices([]);\r\n    }\r\n  };\r\n\r\n  const handleTargetSumChange = (value: string) => {\r\n    const sum = parseInt(value);\r\n    if (!isNaN(sum)) {\r\n      setTargetSum(sum);\r\n      setCurrentStep(0);\r\n      setResult(null);\r\n      setHashMap(new Map());\r\n      setHighlightedIndices([]);\r\n    }\r\n  };\r\n\r\n  const findPair = () => {\r\n    const map = new Map<number, number>();\r\n    for (let i = 0; i < array.length; i++) {\r\n      const complement = targetSum - array[i];\r\n      if (map.has(complement)) {\r\n        setResult([map.get(complement)!, i]);\r\n        return;\r\n      }\r\n      map.set(array[i], i);\r\n    }\r\n    setResult(null);\r\n  };\r\n\r\n  const visualizeStep = (step: number) => {\r\n    if (array.length === 0 || step >= array.length) {\r\n      setHighlightedIndices([]);\r\n      return;\r\n    }\r\n\r\n    const currentNum = array[step];\r\n    const complement = targetSum - currentNum;\r\n    const newHashMap = new Map(hashMap);\r\n    newHashMap.set(currentNum, step);\r\n    setHashMap(newHashMap);\r\n\r\n    if (hashMap.has(complement)) {\r\n      setHighlightedIndices([hashMap.get(complement)!, step]);\r\n      setResult([hashMap.get(complement)!, step]);\r\n    } else {\r\n      setHighlightedIndices([step]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isPlaying) {\r\n      const timer = setInterval(() => {\r\n        setCurrentStep(prev => {\r\n          if (prev >= array.length - 1) {\r\n            setIsPlaying(false);\r\n            return prev;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [isPlaying, array.length]);\r\n\r\n  useEffect(() => {\r\n    visualizeStep(currentStep);\r\n  }, [currentStep, array]);\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Hashing Algorithm\r\n      </Typography>\r\n      \r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"body1\" paragraph>\r\n          The Hashing technique is used to find pairs of numbers in an array that sum up to a target value.\r\n          It uses a hash map to store previously seen numbers and their indices, allowing for O(1) lookups.\r\n        </Typography>\r\n      </Paper>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Enter array (comma-separated numbers)\"\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onBlur={(e) => handleArrayInput(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Target Sum\"\r\n            type=\"number\"\r\n            value={targetSum}\r\n            onChange={(e) => handleTargetSumChange(e.target.value)}\r\n            margin=\"normal\"\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\r\n            {array.map((num, index) => (\r\n              <Box\r\n                key={index}\r\n                sx={{\r\n                  width: 60,\r\n                  height: 60,\r\n                  border: '2px solid #1976d2',\r\n                  borderRadius: 1,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  mx: 0.5,\r\n                  backgroundColor: highlightedIndices.includes(index) ? '#bbdefb' : 'white',\r\n                  transition: 'background-color 0.3s',\r\n                }}\r\n              >\r\n                <Typography variant=\"h6\">{num}</Typography>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 2, mb: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<ArrowBack />}\r\n              onClick={() => setCurrentStep(prev => Math.max(0, prev - 1))}\r\n              disabled={currentStep === 0}\r\n            >\r\n              Previous\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setIsPlaying(!isPlaying)}\r\n              startIcon={isPlaying ? <Pause /> : <PlayArrow />}\r\n            >\r\n              {isPlaying ? 'Pause' : 'Play'}\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              endIcon={<ArrowForward />}\r\n              onClick={() => setCurrentStep(prev => Math.min(array.length - 1, prev + 1))}\r\n              disabled={currentStep === array.length - 1}\r\n            >\r\n              Next\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, bgcolor: '#f5f5f5' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Hash Map Contents:\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n              {Array.from(hashMap.entries()).map(([key, value]) => (\r\n                <Paper key={key} sx={{ p: 1, bgcolor: 'white' }}>\r\n                  {key} → {value}\r\n                </Paper>\r\n              ))}\r\n            </Box>\r\n            {result && (\r\n              <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n                Found pair at indices {result[0]} and {result[1]}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n              Step {currentStep + 1} of {array.length}\r\n            </Typography>\r\n          </Paper>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2, bgcolor: '#f5f5f5' }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Implementation\r\n            </Typography>\r\n            <pre style={{ margin: 0, whiteSpace: 'pre-wrap' }}>\r\n{`function findPairWithSum(arr: number[], target: number): [number, number] | null {\r\n  const map = new Map<number, number>();\r\n  \r\n  for (let i = 0; i < arr.length; i++) {\r\n    const complement = target - arr[i];\r\n    \r\n    if (map.has(complement)) {\r\n      return [map.get(complement)!, i];\r\n    }\r\n    \r\n    map.set(arr[i], i);\r\n  }\r\n  \r\n  return null;\r\n}`}\r\n            </pre>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default HashingPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}