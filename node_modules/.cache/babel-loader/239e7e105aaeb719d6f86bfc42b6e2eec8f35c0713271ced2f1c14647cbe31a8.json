{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Hacktober\\\\DecodeDsa\\\\src\\\\pages\\\\array-algorithms\\\\2d-arrays.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ArrowLeft, Grid, ChevronLeft, ChevronRight, Code } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TwoDArraysPage() {\n  _s();\n  const [matrixInput, setMatrixInput] = useState(\"\");\n  const [steps, setSteps] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [isVisualizing, setIsVisualizing] = useState(false);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState(\"spiral\");\n  const [showFullCode, setShowFullCode] = useState(false);\n  const [searchTarget, setSearchTarget] = useState(0);\n  const resetVisualization = () => {\n    setSteps([]);\n    setCurrentStep(0);\n    setIsVisualizing(false);\n    setShowFullCode(false);\n  };\n  const parseMatrix = input => {\n    const rows = input.trim().split(\"\\n\");\n    return rows.map(row => row.split(\",\").map(cell => Number.parseInt(cell.trim())));\n  };\n  const createMatrixCells = matrix => {\n    return matrix.map((row, rowIndex) => row.map((value, colIndex) => ({\n      value,\n      isHighlighted: false,\n      isVisited: false,\n      isResult: false,\n      row: rowIndex,\n      col: colIndex\n    })));\n  };\n  const generateSpiralSteps = matrix => {\n    const newSteps = [];\n    const rows = matrix.length;\n    const cols = matrix[0].length;\n    const result = [];\n    let top = 0,\n      bottom = rows - 1,\n      left = 0,\n      right = cols - 1;\n\n    // Initial state\n    newSteps.push({\n      matrix: createMatrixCells(matrix),\n      description: \"Start spiral traversal from top-left corner\",\n      code: `# Initialize boundaries\ntop, bottom = 0, ${rows - 1}\nleft, right = 0, ${cols - 1}\nresult = []`\n    });\n    while (top <= bottom && left <= right) {\n      // Traverse right\n      for (let col = left; col <= right; col++) {\n        result.push(matrix[top][col]);\n        const currentMatrix = createMatrixCells(matrix);\n        currentMatrix[top][col].isHighlighted = true;\n\n        // Mark all previously visited cells\n        for (let i = 0; i < result.length - 1; i++) {\n          for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < cols; c++) {\n              if (matrix[r][c] === result[i] && !currentMatrix[r][c].isHighlighted) {\n                currentMatrix[r][c].isVisited = true;\n                break;\n              }\n            }\n          }\n        }\n        newSteps.push({\n          matrix: currentMatrix,\n          description: `Moving right: add ${matrix[top][col]} to result`,\n          code: `# Traverse right\nfor col in range(left, right + 1):\n    result.append(matrix[top][col])`,\n          result: [...result],\n          currentPosition: {\n            row: top,\n            col\n          }\n        });\n      }\n      top++;\n\n      // Traverse down\n      for (let row = top; row <= bottom; row++) {\n        result.push(matrix[row][right]);\n        const currentMatrix = createMatrixCells(matrix);\n        currentMatrix[row][right].isHighlighted = true;\n\n        // Mark visited cells\n        let resultIndex = 0;\n        for (let r = 0; r < rows; r++) {\n          for (let c = 0; c < cols; c++) {\n            if (resultIndex < result.length - 1 && matrix[r][c] === result[resultIndex]) {\n              if (!currentMatrix[r][c].isHighlighted) {\n                currentMatrix[r][c].isVisited = true;\n              }\n              resultIndex++;\n            }\n          }\n        }\n        newSteps.push({\n          matrix: currentMatrix,\n          description: `Moving down: add ${matrix[row][right]} to result`,\n          code: `# Traverse down\nfor row in range(top, bottom + 1):\n    result.append(matrix[row][right])`,\n          result: [...result],\n          currentPosition: {\n            row,\n            col: right\n          }\n        });\n      }\n      right--;\n\n      // Traverse left\n      if (top <= bottom) {\n        for (let col = right; col >= left; col--) {\n          result.push(matrix[bottom][col]);\n          const currentMatrix = createMatrixCells(matrix);\n          currentMatrix[bottom][col].isHighlighted = true;\n          newSteps.push({\n            matrix: currentMatrix,\n            description: `Moving left: add ${matrix[bottom][col]} to result`,\n            code: `# Traverse left\nfor col in range(right, left - 1, -1):\n    result.append(matrix[bottom][col])`,\n            result: [...result],\n            currentPosition: {\n              row: bottom,\n              col\n            }\n          });\n        }\n        bottom--;\n      }\n\n      // Traverse up\n      if (left <= right) {\n        for (let row = bottom; row >= top; row--) {\n          result.push(matrix[row][left]);\n          const currentMatrix = createMatrixCells(matrix);\n          currentMatrix[row][left].isHighlighted = true;\n          newSteps.push({\n            matrix: currentMatrix,\n            description: `Moving up: add ${matrix[row][left]} to result`,\n            code: `# Traverse up\nfor row in range(bottom, top - 1, -1):\n    result.append(matrix[row][left])`,\n            result: [...result],\n            currentPosition: {\n              row,\n              col: left\n            }\n          });\n        }\n        left++;\n      }\n    }\n\n    // Final result\n    const finalMatrix = createMatrixCells(matrix);\n    finalMatrix.forEach(row => row.forEach(cell => cell.isResult = true));\n    newSteps.push({\n      matrix: finalMatrix,\n      description: `Spiral traversal complete: [${result.join(\", \")}]`,\n      code: `# Return spiral order\nreturn result`,\n      result\n    });\n    return newSteps;\n  };\n  const generateRotateSteps = matrix => {\n    const newSteps = [];\n    const n = matrix.length;\n    const rotated = matrix.map(row => [...row]);\n\n    // Initial state\n    newSteps.push({\n      matrix: createMatrixCells(matrix),\n      description: \"Rotate matrix 90 degrees clockwise\",\n      code: `# Rotate matrix 90 degrees clockwise\n# Step 1: Transpose the matrix\n# Step 2: Reverse each row`\n    });\n\n    // Step 1: Transpose\n    for (let i = 0; i < n; i++) {\n      for (let j = i + 1; j < n; j++) {\n        ;\n        [rotated[i][j], rotated[j][i]] = [rotated[j][i], rotated[i][j]];\n      }\n    }\n    const transposedMatrix = createMatrixCells(rotated);\n    newSteps.push({\n      matrix: transposedMatrix,\n      description: \"Step 1: Transpose the matrix (swap rows and columns)\",\n      code: `# Transpose matrix\nfor i in range(n):\n    for j in range(i + 1, n):\n        matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]`\n    });\n\n    // Step 2: Reverse each row\n    for (let i = 0; i < n; i++) {\n      rotated[i].reverse();\n    }\n    const finalMatrix = createMatrixCells(rotated);\n    finalMatrix.forEach(row => row.forEach(cell => cell.isResult = true));\n    newSteps.push({\n      matrix: finalMatrix,\n      description: \"Step 2: Reverse each row to complete 90Â° clockwise rotation\",\n      code: `# Reverse each row\nfor i in range(n):\n    matrix[i].reverse()`\n    });\n    return newSteps;\n  };\n  const generateSearchSteps = (matrix, target) => {\n    const newSteps = [];\n    const rows = matrix.length;\n    const cols = matrix[0].length;\n\n    // Initial state\n    newSteps.push({\n      matrix: createMatrixCells(matrix),\n      description: `Search for ${target} in sorted 2D matrix`,\n      code: `# Search in 2D matrix\n# Start from top-right corner\ntarget = ${target}\nrow, col = 0, ${cols - 1}`\n    });\n    let row = 0,\n      col = cols - 1;\n    let found = false;\n    while (row < rows && col >= 0) {\n      const currentMatrix = createMatrixCells(matrix);\n      currentMatrix[row][col].isHighlighted = true;\n      if (matrix[row][col] === target) {\n        currentMatrix[row][col].isResult = true;\n        found = true;\n        newSteps.push({\n          matrix: currentMatrix,\n          description: `Found ${target} at position (${row}, ${col})!`,\n          code: `# Found target!\nreturn True`,\n          currentPosition: {\n            row,\n            col\n          }\n        });\n        break;\n      } else if (matrix[row][col] > target) {\n        newSteps.push({\n          matrix: currentMatrix,\n          description: `${matrix[row][col]} > ${target}, move left`,\n          code: `# Current value > target, move left\ncol -= 1`,\n          currentPosition: {\n            row,\n            col\n          }\n        });\n        col--;\n      } else {\n        newSteps.push({\n          matrix: currentMatrix,\n          description: `${matrix[row][col]} < ${target}, move down`,\n          code: `# Current value < target, move down\nrow += 1`,\n          currentPosition: {\n            row,\n            col\n          }\n        });\n        row++;\n      }\n    }\n    if (!found) {\n      newSteps.push({\n        matrix: createMatrixCells(matrix),\n        description: `${target} not found in matrix`,\n        code: `# Target not found\nreturn False`\n      });\n    }\n    return newSteps;\n  };\n  const handleVisualize = () => {\n    try {\n      const matrix = parseMatrix(matrixInput);\n      if (matrix.length === 0 || matrix.some(row => row.some(isNaN))) {\n        throw new Error(\"Invalid matrix format\");\n      }\n\n      // Validate matrix dimensions\n      const cols = matrix[0].length;\n      if (matrix.some(row => row.length !== cols)) {\n        throw new Error(\"All rows must have the same number of columns\");\n      }\n      resetVisualization();\n      setIsVisualizing(true);\n      let newSteps;\n      switch (selectedAlgorithm) {\n        case \"spiral\":\n          newSteps = generateSpiralSteps(matrix);\n          break;\n        case \"rotate\":\n          if (matrix.length !== cols) {\n            throw new Error(\"Matrix must be square for rotation\");\n          }\n          newSteps = generateRotateSteps(matrix);\n          break;\n        case \"search\":\n          newSteps = generateSearchSteps(matrix, searchTarget);\n          break;\n        default:\n          newSteps = [];\n      }\n      setSteps(newSteps);\n      setIsVisualizing(false);\n    } catch (err) {\n      alert(err instanceof Error ? err.message : \"Please enter a valid matrix\");\n    }\n  };\n  const getFullCode = () => {\n    switch (selectedAlgorithm) {\n      case \"spiral\":\n        return `def spiral_order(matrix):\n    if not matrix or not matrix[0]:\n        return []\n    \n    rows, cols = len(matrix), len(matrix[0])\n    top, bottom = 0, rows - 1\n    left, right = 0, cols - 1\n    result = []\n    \n    while top <= bottom and left <= right:\n        # Traverse right\n        for col in range(left, right + 1):\n            result.append(matrix[top][col])\n        top += 1\n        \n        # Traverse down\n        for row in range(top, bottom + 1):\n            result.append(matrix[row][right])\n        right -= 1\n        \n        # Traverse left\n        if top <= bottom:\n            for col in range(right, left - 1, -1):\n                result.append(matrix[bottom][col])\n            bottom -= 1\n        \n        # Traverse up\n        if left <= right:\n            for row in range(bottom, top - 1, -1):\n                result.append(matrix[row][left])\n            left += 1\n    \n    return result`;\n      case \"rotate\":\n        return `def rotate_matrix(matrix):\n    n = len(matrix)\n    \n    # Step 1: Transpose the matrix\n    for i in range(n):\n        for j in range(i + 1, n):\n            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]\n    \n    # Step 2: Reverse each row\n    for i in range(n):\n        matrix[i].reverse()\n    \n    return matrix`;\n      case \"search\":\n        return `def search_matrix(matrix, target):\n    if not matrix or not matrix[0]:\n        return False\n    \n    rows, cols = len(matrix), len(matrix[0])\n    row, col = 0, cols - 1\n    \n    while row < rows and col >= 0:\n        if matrix[row][col] == target:\n            return True\n        elif matrix[row][col] > target:\n            col -= 1\n        else:\n            row += 1\n    \n    return False`;\n      default:\n        return \"\";\n    }\n  };\n\n  // Helper type guard\n  function isNumberArray(val) {\n    return Array.isArray(val) && val.every(x => typeof x === 'number');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-3\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: \"/array-algorithms\",\n              className: \"p-2 hover:bg-gray-100 rounded-lg transition-colors\",\n              children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n                className: \"w-6 h-6 text-gray-600\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"p-2 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                className: \"w-6 h-6 text-white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-3xl font-bold bg-gradient-to-r from-teal-600 to-cyan-600 bg-clip-text text-transparent\",\n              children: \"2D Arrays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 mb-4\",\n          children: \"Select Algorithm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedAlgorithm(\"spiral\"),\n            className: `px-4 py-2 rounded-lg text-sm ${selectedAlgorithm === \"spiral\" ? \"bg-teal-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`,\n            children: \"Spiral Traversal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedAlgorithm(\"rotate\"),\n            className: `px-4 py-2 rounded-lg text-sm ${selectedAlgorithm === \"rotate\" ? \"bg-teal-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`,\n            children: \"Matrix Rotation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedAlgorithm(\"search\"),\n            className: `px-4 py-2 rounded-lg text-sm ${selectedAlgorithm === \"search\" ? \"bg-teal-600 text-white\" : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"}`,\n            children: \"2D Matrix Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 mb-4\",\n          children: \"Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"matrix-input\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Matrix (one row per line, comma-separated values)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"matrix-input\",\n              value: matrixInput,\n              onChange: e => setMatrixInput(e.target.value),\n              className: \"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-teal-500 h-32\",\n              placeholder: selectedAlgorithm === \"rotate\" ? \"1,2,3\\n4,5,6\\n7,8,9\" : \"1,4,7,11\\n2,5,8,12\\n3,6,9,16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), selectedAlgorithm === \"search\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"search-target\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Search Target\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"search-target\",\n              type: \"number\",\n              value: searchTarget,\n              onChange: e => setSearchTarget(Number.parseInt(e.target.value)),\n              className: \"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-teal-500\",\n              placeholder: \"Enter target value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleVisualize,\n            disabled: isVisualizing,\n            className: \"px-6 py-3 bg-gradient-to-r from-teal-600 to-cyan-600 text-white font-semibold rounded-lg hover:from-teal-700 hover:to-cyan-700 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\",\n            children: isVisualizing ? \"Visualizing...\" : \"Visualize\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), steps.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Matrix Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline-block\",\n              children: steps[currentStep].matrix.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex\",\n                children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `w-16 h-16 flex items-center justify-center border border-gray-300 text-lg font-semibold transition-all duration-200 ${cell.isHighlighted ? \"bg-teal-500 text-white\" : cell.isResult ? \"bg-green-500 text-white\" : cell.isVisited ? \"bg-teal-100 text-teal-700\" : \"bg-gray-50 text-gray-700\"}`,\n                  children: cell.value\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 25\n                }, this))\n              }, rowIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 13\n        }, this), steps[currentStep] && typeof steps[currentStep].result !== 'undefined' && (() => {\n          const result = steps[currentStep].result;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-900 mb-4\",\n              children: \"Result\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-mono bg-gray-50 p-4 rounded-lg\",\n              children: isNumberArray(result) ? `[${result.join(\", \")}]` : result\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 17\n          }, this);\n        })(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Step Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-700\",\n                  children: steps[currentStep].description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 21\n                }, this), steps[currentStep].currentPosition && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-500 mt-2\",\n                  children: [\"Current position: (\", steps[currentStep].currentPosition.row, \",\", \" \", steps[currentStep].currentPosition.col, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-4\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setCurrentStep(prev => Math.max(0, prev - 1)),\n                  disabled: currentStep === 0,\n                  className: \"p-2 hover:bg-gray-100 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n                  children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                    className: \"w-6 h-6 text-gray-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-gray-600\",\n                  children: [\"Step \", currentStep + 1, \" of \", steps.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setCurrentStep(prev => Math.min(steps.length - 1, prev + 1)),\n                  disabled: currentStep === steps.length - 1,\n                  className: \"p-2 hover:bg-gray-100 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\",\n                  children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                    className: \"w-6 h-6 text-gray-600\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 615,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-900\",\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowFullCode(!showFullCode),\n              className: \"flex items-center space-x-2 text-teal-600 hover:text-teal-700\",\n              children: [/*#__PURE__*/_jsxDEV(Code, {\n                className: \"w-5 h-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: showFullCode ? \"Show Current Step\" : \"Show Full Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-50 p-4 rounded-lg overflow-x-auto\",\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"text-sm text-gray-800\",\n              children: showFullCode ? getFullCode() : steps[currentStep].code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n_s(TwoDArraysPage, \"Fmo4QdOFM0YrNU7KC7L1WEOsIqQ=\");\n_c = TwoDArraysPage;\nexport default TwoDArraysPage;\nvar _c;\n$RefreshReg$(_c, \"TwoDArraysPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","Link","ArrowLeft","Grid","ChevronLeft","ChevronRight","Code","jsxDEV","_jsxDEV","TwoDArraysPage","matrixInput","setMatrixInput","steps","setSteps","currentStep","setCurrentStep","isVisualizing","setIsVisualizing","selectedAlgorithm","setSelectedAlgorithm","showFullCode","setShowFullCode","searchTarget","setSearchTarget","resetVisualization","parseMatrix","input","rows","trim","split","map","row","cell","Number","parseInt","createMatrixCells","matrix","rowIndex","value","colIndex","isHighlighted","isVisited","isResult","col","generateSpiralSteps","newSteps","length","cols","result","top","bottom","left","right","push","description","code","currentMatrix","i","r","c","currentPosition","resultIndex","finalMatrix","forEach","join","generateRotateSteps","n","rotated","j","transposedMatrix","reverse","generateSearchSteps","target","found","handleVisualize","some","isNaN","Error","err","alert","message","getFullCode","isNumberArray","val","Array","isArray","every","x","className","children","to","fileName","lineNumber","columnNumber","onClick","htmlFor","id","onChange","e","placeholder","type","disabled","prev","Math","max","min","_c","$RefreshReg$"],"sources":["D:/Hacktober/DecodeDsa/src/pages/array-algorithms/2d-arrays.tsx"],"sourcesContent":["\"use client\"\r\nimport { useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ArrowLeft, Grid, ChevronLeft, ChevronRight, Code } from \"lucide-react\"\r\n\r\ninterface MatrixCell {\r\n  value: number\r\n  isHighlighted: boolean\r\n  isVisited: boolean\r\n  isResult: boolean\r\n  row: number\r\n  col: number\r\n}\r\n\r\ninterface Step {\r\n  matrix: MatrixCell[][]\r\n  description: string\r\n  code: string\r\n  result?: number[] | string\r\n  currentPosition?: { row: number; col: number }\r\n}\r\n\r\nfunction TwoDArraysPage() {\r\n  const [matrixInput, setMatrixInput] = useState<string>(\"\")\r\n  const [steps, setSteps] = useState<Step[]>([])\r\n  const [currentStep, setCurrentStep] = useState<number>(0)\r\n  const [isVisualizing, setIsVisualizing] = useState<boolean>(false)\r\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<\"spiral\" | \"rotate\" | \"search\" | \"set-zeros\">(\"spiral\")\r\n  const [showFullCode, setShowFullCode] = useState<boolean>(false)\r\n  const [searchTarget, setSearchTarget] = useState<number>(0)\r\n\r\n  const resetVisualization = () => {\r\n    setSteps([])\r\n    setCurrentStep(0)\r\n    setIsVisualizing(false)\r\n    setShowFullCode(false)\r\n  }\r\n\r\n  const parseMatrix = (input: string): number[][] => {\r\n    const rows = input.trim().split(\"\\n\")\r\n    return rows.map((row) => row.split(\",\").map((cell) => Number.parseInt(cell.trim())))\r\n  }\r\n\r\n  const createMatrixCells = (matrix: number[][]): MatrixCell[][] => {\r\n    return matrix.map((row, rowIndex) =>\r\n      row.map((value, colIndex) => ({\r\n        value,\r\n        isHighlighted: false,\r\n        isVisited: false,\r\n        isResult: false,\r\n        row: rowIndex,\r\n        col: colIndex,\r\n      })),\r\n    )\r\n  }\r\n\r\n  const generateSpiralSteps = (matrix: number[][]) => {\r\n    const newSteps: Step[] = []\r\n    const rows = matrix.length\r\n    const cols = matrix[0].length\r\n    const result: number[] = []\r\n\r\n    let top = 0,\r\n      bottom = rows - 1,\r\n      left = 0,\r\n      right = cols - 1\r\n\r\n    // Initial state\r\n    newSteps.push({\r\n      matrix: createMatrixCells(matrix),\r\n      description: \"Start spiral traversal from top-left corner\",\r\n      code: `# Initialize boundaries\r\ntop, bottom = 0, ${rows - 1}\r\nleft, right = 0, ${cols - 1}\r\nresult = []`,\r\n    })\r\n\r\n    while (top <= bottom && left <= right) {\r\n      // Traverse right\r\n      for (let col = left; col <= right; col++) {\r\n        result.push(matrix[top][col])\r\n\r\n        const currentMatrix = createMatrixCells(matrix)\r\n        currentMatrix[top][col].isHighlighted = true\r\n\r\n        // Mark all previously visited cells\r\n        for (let i = 0; i < result.length - 1; i++) {\r\n          for (let r = 0; r < rows; r++) {\r\n            for (let c = 0; c < cols; c++) {\r\n              if (matrix[r][c] === result[i] && !currentMatrix[r][c].isHighlighted) {\r\n                currentMatrix[r][c].isVisited = true\r\n                break\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        newSteps.push({\r\n          matrix: currentMatrix,\r\n          description: `Moving right: add ${matrix[top][col]} to result`,\r\n          code: `# Traverse right\r\nfor col in range(left, right + 1):\r\n    result.append(matrix[top][col])`,\r\n          result: [...result],\r\n          currentPosition: { row: top, col },\r\n        })\r\n      }\r\n      top++\r\n\r\n      // Traverse down\r\n      for (let row = top; row <= bottom; row++) {\r\n        result.push(matrix[row][right])\r\n\r\n        const currentMatrix = createMatrixCells(matrix)\r\n        currentMatrix[row][right].isHighlighted = true\r\n\r\n        // Mark visited cells\r\n        let resultIndex = 0\r\n        for (let r = 0; r < rows; r++) {\r\n          for (let c = 0; c < cols; c++) {\r\n            if (resultIndex < result.length - 1 && matrix[r][c] === result[resultIndex]) {\r\n              if (!currentMatrix[r][c].isHighlighted) {\r\n                currentMatrix[r][c].isVisited = true\r\n              }\r\n              resultIndex++\r\n            }\r\n          }\r\n        }\r\n\r\n        newSteps.push({\r\n          matrix: currentMatrix,\r\n          description: `Moving down: add ${matrix[row][right]} to result`,\r\n          code: `# Traverse down\r\nfor row in range(top, bottom + 1):\r\n    result.append(matrix[row][right])`,\r\n          result: [...result],\r\n          currentPosition: { row, col: right },\r\n        })\r\n      }\r\n      right--\r\n\r\n      // Traverse left\r\n      if (top <= bottom) {\r\n        for (let col = right; col >= left; col--) {\r\n          result.push(matrix[bottom][col])\r\n\r\n          const currentMatrix = createMatrixCells(matrix)\r\n          currentMatrix[bottom][col].isHighlighted = true\r\n\r\n          newSteps.push({\r\n            matrix: currentMatrix,\r\n            description: `Moving left: add ${matrix[bottom][col]} to result`,\r\n            code: `# Traverse left\r\nfor col in range(right, left - 1, -1):\r\n    result.append(matrix[bottom][col])`,\r\n            result: [...result],\r\n            currentPosition: { row: bottom, col },\r\n          })\r\n        }\r\n        bottom--\r\n      }\r\n\r\n      // Traverse up\r\n      if (left <= right) {\r\n        for (let row = bottom; row >= top; row--) {\r\n          result.push(matrix[row][left])\r\n\r\n          const currentMatrix = createMatrixCells(matrix)\r\n          currentMatrix[row][left].isHighlighted = true\r\n\r\n          newSteps.push({\r\n            matrix: currentMatrix,\r\n            description: `Moving up: add ${matrix[row][left]} to result`,\r\n            code: `# Traverse up\r\nfor row in range(bottom, top - 1, -1):\r\n    result.append(matrix[row][left])`,\r\n            result: [...result],\r\n            currentPosition: { row, col: left },\r\n          })\r\n        }\r\n        left++\r\n      }\r\n    }\r\n\r\n    // Final result\r\n    const finalMatrix = createMatrixCells(matrix)\r\n    finalMatrix.forEach((row) => row.forEach((cell) => (cell.isResult = true)))\r\n\r\n    newSteps.push({\r\n      matrix: finalMatrix,\r\n      description: `Spiral traversal complete: [${result.join(\", \")}]`,\r\n      code: `# Return spiral order\r\nreturn result`,\r\n      result,\r\n    })\r\n\r\n    return newSteps\r\n  }\r\n\r\n  const generateRotateSteps = (matrix: number[][]) => {\r\n    const newSteps: Step[] = []\r\n    const n = matrix.length\r\n    const rotated = matrix.map((row) => [...row])\r\n\r\n    // Initial state\r\n    newSteps.push({\r\n      matrix: createMatrixCells(matrix),\r\n      description: \"Rotate matrix 90 degrees clockwise\",\r\n      code: `# Rotate matrix 90 degrees clockwise\r\n# Step 1: Transpose the matrix\r\n# Step 2: Reverse each row`,\r\n    })\r\n\r\n    // Step 1: Transpose\r\n    for (let i = 0; i < n; i++) {\r\n      for (let j = i + 1; j < n; j++) {\r\n        ;[rotated[i][j], rotated[j][i]] = [rotated[j][i], rotated[i][j]]\r\n      }\r\n    }\r\n\r\n    const transposedMatrix = createMatrixCells(rotated)\r\n    newSteps.push({\r\n      matrix: transposedMatrix,\r\n      description: \"Step 1: Transpose the matrix (swap rows and columns)\",\r\n      code: `# Transpose matrix\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]`,\r\n    })\r\n\r\n    // Step 2: Reverse each row\r\n    for (let i = 0; i < n; i++) {\r\n      rotated[i].reverse()\r\n    }\r\n\r\n    const finalMatrix = createMatrixCells(rotated)\r\n    finalMatrix.forEach((row) => row.forEach((cell) => (cell.isResult = true)))\r\n\r\n    newSteps.push({\r\n      matrix: finalMatrix,\r\n      description: \"Step 2: Reverse each row to complete 90Â° clockwise rotation\",\r\n      code: `# Reverse each row\r\nfor i in range(n):\r\n    matrix[i].reverse()`,\r\n    })\r\n\r\n    return newSteps\r\n  }\r\n\r\n  const generateSearchSteps = (matrix: number[][], target: number) => {\r\n    const newSteps: Step[] = []\r\n    const rows = matrix.length\r\n    const cols = matrix[0].length\r\n\r\n    // Initial state\r\n    newSteps.push({\r\n      matrix: createMatrixCells(matrix),\r\n      description: `Search for ${target} in sorted 2D matrix`,\r\n      code: `# Search in 2D matrix\r\n# Start from top-right corner\r\ntarget = ${target}\r\nrow, col = 0, ${cols - 1}`,\r\n    })\r\n\r\n    let row = 0,\r\n      col = cols - 1\r\n    let found = false\r\n\r\n    while (row < rows && col >= 0) {\r\n      const currentMatrix = createMatrixCells(matrix)\r\n      currentMatrix[row][col].isHighlighted = true\r\n\r\n      if (matrix[row][col] === target) {\r\n        currentMatrix[row][col].isResult = true\r\n        found = true\r\n\r\n        newSteps.push({\r\n          matrix: currentMatrix,\r\n          description: `Found ${target} at position (${row}, ${col})!`,\r\n          code: `# Found target!\r\nreturn True`,\r\n          currentPosition: { row, col },\r\n        })\r\n        break\r\n      } else if (matrix[row][col] > target) {\r\n        newSteps.push({\r\n          matrix: currentMatrix,\r\n          description: `${matrix[row][col]} > ${target}, move left`,\r\n          code: `# Current value > target, move left\r\ncol -= 1`,\r\n          currentPosition: { row, col },\r\n        })\r\n        col--\r\n      } else {\r\n        newSteps.push({\r\n          matrix: currentMatrix,\r\n          description: `${matrix[row][col]} < ${target}, move down`,\r\n          code: `# Current value < target, move down\r\nrow += 1`,\r\n          currentPosition: { row, col },\r\n        })\r\n        row++\r\n      }\r\n    }\r\n\r\n    if (!found) {\r\n      newSteps.push({\r\n        matrix: createMatrixCells(matrix),\r\n        description: `${target} not found in matrix`,\r\n        code: `# Target not found\r\nreturn False`,\r\n      })\r\n    }\r\n\r\n    return newSteps\r\n  }\r\n\r\n  const handleVisualize = () => {\r\n    try {\r\n      const matrix = parseMatrix(matrixInput)\r\n      if (matrix.length === 0 || matrix.some((row) => row.some(isNaN))) {\r\n        throw new Error(\"Invalid matrix format\")\r\n      }\r\n\r\n      // Validate matrix dimensions\r\n      const cols = matrix[0].length\r\n      if (matrix.some((row) => row.length !== cols)) {\r\n        throw new Error(\"All rows must have the same number of columns\")\r\n      }\r\n\r\n      resetVisualization()\r\n      setIsVisualizing(true)\r\n\r\n      let newSteps: Step[]\r\n      switch (selectedAlgorithm) {\r\n        case \"spiral\":\r\n          newSteps = generateSpiralSteps(matrix)\r\n          break\r\n        case \"rotate\":\r\n          if (matrix.length !== cols) {\r\n            throw new Error(\"Matrix must be square for rotation\")\r\n          }\r\n          newSteps = generateRotateSteps(matrix)\r\n          break\r\n        case \"search\":\r\n          newSteps = generateSearchSteps(matrix, searchTarget)\r\n          break\r\n        default:\r\n          newSteps = []\r\n      }\r\n\r\n      setSteps(newSteps)\r\n      setIsVisualizing(false)\r\n    } catch (err) {\r\n      alert(err instanceof Error ? err.message : \"Please enter a valid matrix\")\r\n    }\r\n  }\r\n\r\n  const getFullCode = () => {\r\n    switch (selectedAlgorithm) {\r\n      case \"spiral\":\r\n        return `def spiral_order(matrix):\r\n    if not matrix or not matrix[0]:\r\n        return []\r\n    \r\n    rows, cols = len(matrix), len(matrix[0])\r\n    top, bottom = 0, rows - 1\r\n    left, right = 0, cols - 1\r\n    result = []\r\n    \r\n    while top <= bottom and left <= right:\r\n        # Traverse right\r\n        for col in range(left, right + 1):\r\n            result.append(matrix[top][col])\r\n        top += 1\r\n        \r\n        # Traverse down\r\n        for row in range(top, bottom + 1):\r\n            result.append(matrix[row][right])\r\n        right -= 1\r\n        \r\n        # Traverse left\r\n        if top <= bottom:\r\n            for col in range(right, left - 1, -1):\r\n                result.append(matrix[bottom][col])\r\n            bottom -= 1\r\n        \r\n        # Traverse up\r\n        if left <= right:\r\n            for row in range(bottom, top - 1, -1):\r\n                result.append(matrix[row][left])\r\n            left += 1\r\n    \r\n    return result`\r\n\r\n      case \"rotate\":\r\n        return `def rotate_matrix(matrix):\r\n    n = len(matrix)\r\n    \r\n    # Step 1: Transpose the matrix\r\n    for i in range(n):\r\n        for j in range(i + 1, n):\r\n            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]\r\n    \r\n    # Step 2: Reverse each row\r\n    for i in range(n):\r\n        matrix[i].reverse()\r\n    \r\n    return matrix`\r\n\r\n      case \"search\":\r\n        return `def search_matrix(matrix, target):\r\n    if not matrix or not matrix[0]:\r\n        return False\r\n    \r\n    rows, cols = len(matrix), len(matrix[0])\r\n    row, col = 0, cols - 1\r\n    \r\n    while row < rows and col >= 0:\r\n        if matrix[row][col] == target:\r\n            return True\r\n        elif matrix[row][col] > target:\r\n            col -= 1\r\n        else:\r\n            row += 1\r\n    \r\n    return False`\r\n\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n\r\n  // Helper type guard\r\n  function isNumberArray(val: unknown): val is number[] {\r\n    return Array.isArray(val) && val.every((x) => typeof x === 'number');\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\">\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div className=\"flex items-center space-x-3\">\r\n              <Link to=\"/array-algorithms\" className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors\">\r\n                <ArrowLeft className=\"w-6 h-6 text-gray-600\" />\r\n              </Link>\r\n              <div className=\"p-2 bg-gradient-to-r from-teal-500 to-cyan-500 rounded-lg\">\r\n                <Grid className=\"w-6 h-6 text-white\" />\r\n              </div>\r\n              <h1 className=\"text-3xl font-bold bg-gradient-to-r from-teal-600 to-cyan-600 bg-clip-text text-transparent\">\r\n                2D Arrays\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n        {/* Algorithm Selection */}\r\n        <div className=\"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Select Algorithm</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <button\r\n              onClick={() => setSelectedAlgorithm(\"spiral\")}\r\n              className={`px-4 py-2 rounded-lg text-sm ${\r\n                selectedAlgorithm === \"spiral\"\r\n                  ? \"bg-teal-600 text-white\"\r\n                  : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n              }`}\r\n            >\r\n              Spiral Traversal\r\n            </button>\r\n            <button\r\n              onClick={() => setSelectedAlgorithm(\"rotate\")}\r\n              className={`px-4 py-2 rounded-lg text-sm ${\r\n                selectedAlgorithm === \"rotate\"\r\n                  ? \"bg-teal-600 text-white\"\r\n                  : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n              }`}\r\n            >\r\n              Matrix Rotation\r\n            </button>\r\n            <button\r\n              onClick={() => setSelectedAlgorithm(\"search\")}\r\n              className={`px-4 py-2 rounded-lg text-sm ${\r\n                selectedAlgorithm === \"search\"\r\n                  ? \"bg-teal-600 text-white\"\r\n                  : \"bg-gray-100 text-gray-700 hover:bg-gray-200\"\r\n              }`}\r\n            >\r\n              2D Matrix Search\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Input Section */}\r\n        <div className=\"mb-8 bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Input</h2>\r\n          <div className=\"flex flex-col gap-4\">\r\n            <div>\r\n              <label htmlFor=\"matrix-input\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Matrix (one row per line, comma-separated values)\r\n              </label>\r\n              <textarea\r\n                id=\"matrix-input\"\r\n                value={matrixInput}\r\n                onChange={(e) => setMatrixInput(e.target.value)}\r\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-teal-500 h-32\"\r\n                placeholder={selectedAlgorithm === \"rotate\" ? \"1,2,3\\n4,5,6\\n7,8,9\" : \"1,4,7,11\\n2,5,8,12\\n3,6,9,16\"}\r\n              />\r\n            </div>\r\n            {selectedAlgorithm === \"search\" && (\r\n              <div>\r\n                <label htmlFor=\"search-target\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Search Target\r\n                </label>\r\n                <input\r\n                  id=\"search-target\"\r\n                  type=\"number\"\r\n                  value={searchTarget}\r\n                  onChange={(e) => setSearchTarget(Number.parseInt(e.target.value))}\r\n                  className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-teal-500\"\r\n                  placeholder=\"Enter target value\"\r\n                />\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={handleVisualize}\r\n              disabled={isVisualizing}\r\n              className=\"px-6 py-3 bg-gradient-to-r from-teal-600 to-cyan-600 text-white font-semibold rounded-lg hover:from-teal-700 hover:to-cyan-700 transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            >\r\n              {isVisualizing ? \"Visualizing...\" : \"Visualize\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Visualization Section */}\r\n        {steps.length > 0 && (\r\n          <div className=\"space-y-8\">\r\n            {/* Matrix Visualization */}\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n              <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Matrix Visualization</h2>\r\n              <div className=\"flex justify-center\">\r\n                <div className=\"inline-block\">\r\n                  {steps[currentStep].matrix.map((row, rowIndex) => (\r\n                    <div key={rowIndex} className=\"flex\">\r\n                      {row.map((cell, colIndex) => (\r\n                        <div\r\n                          key={colIndex}\r\n                          className={`w-16 h-16 flex items-center justify-center border border-gray-300 text-lg font-semibold transition-all duration-200 ${\r\n                            cell.isHighlighted\r\n                              ? \"bg-teal-500 text-white\"\r\n                              : cell.isResult\r\n                                ? \"bg-green-500 text-white\"\r\n                                : cell.isVisited\r\n                                  ? \"bg-teal-100 text-teal-700\"\r\n                                  : \"bg-gray-50 text-gray-700\"\r\n                          }`}\r\n                        >\r\n                          {cell.value}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Result Display */}\r\n            {steps[currentStep] && typeof steps[currentStep].result !== 'undefined' && (() => {\r\n              const result = steps[currentStep].result;\r\n              return (\r\n                <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n                  <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Result</h2>\r\n                  <div className=\"text-lg font-mono bg-gray-50 p-4 rounded-lg\">\r\n                    {isNumberArray(result)\r\n                      ? `[${result.join(\", \")}]`\r\n                      : result}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })()}\r\n\r\n            {/* Step Information */}\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n              <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Step Information</h2>\r\n              <div className=\"space-y-4\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <div>\r\n                    <p className=\"text-gray-700\">{steps[currentStep].description}</p>\r\n                    {steps[currentStep].currentPosition && (\r\n                      <p className=\"text-sm text-gray-500 mt-2\">\r\n                        Current position: ({steps[currentStep].currentPosition!.row},{\" \"}\r\n                        {steps[currentStep].currentPosition!.col})\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <button\r\n                      onClick={() => setCurrentStep((prev) => Math.max(0, prev - 1))}\r\n                      disabled={currentStep === 0}\r\n                      className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      <ChevronLeft className=\"w-6 h-6 text-gray-600\" />\r\n                    </button>\r\n                    <span className=\"text-gray-600\">\r\n                      Step {currentStep + 1} of {steps.length}\r\n                    </span>\r\n                    <button\r\n                      onClick={() => setCurrentStep((prev) => Math.min(steps.length - 1, prev + 1))}\r\n                      disabled={currentStep === steps.length - 1}\r\n                      className=\"p-2 hover:bg-gray-100 rounded-lg transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                    >\r\n                      <ChevronRight className=\"w-6 h-6 text-gray-600\" />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Code Section */}\r\n            <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-xl font-bold text-gray-900\">Code</h2>\r\n                <button\r\n                  onClick={() => setShowFullCode(!showFullCode)}\r\n                  className=\"flex items-center space-x-2 text-teal-600 hover:text-teal-700\"\r\n                >\r\n                  <Code className=\"w-5 h-5\" />\r\n                  <span>{showFullCode ? \"Show Current Step\" : \"Show Full Code\"}</span>\r\n                </button>\r\n              </div>\r\n              <pre className=\"bg-gray-50 p-4 rounded-lg overflow-x-auto\">\r\n                <code className=\"text-sm text-gray-800\">{showFullCode ? getFullCode() : steps[currentStep].code}</code>\r\n              </pre>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TwoDArraysPage\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}