{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\LinkedListVisualizerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { List, Plus, Minus, Edit, RefreshCcw, ArrowLeftRight, ChevronRight, ChevronLeft, Repeat } from \"lucide-react\";\n\n// Node types\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst operations = [{\n  name: \"Insert at Beginning\",\n  description: \"Insert a node at the start of the list.\"\n}, {\n  name: \"Insert at End\",\n  description: \"Insert a node at the end of the list.\"\n}, {\n  name: \"Insert at Position\",\n  description: \"Insert a node at a specific position.\"\n}, {\n  name: \"Delete at Beginning\",\n  description: \"Delete the first node.\"\n}, {\n  name: \"Delete at End\",\n  description: \"Delete the last node.\"\n}, {\n  name: \"Delete at Position\",\n  description: \"Delete a node at a specific position.\"\n}, {\n  name: \"Modify\",\n  description: \"Modify the value of a node at a specific position.\"\n}, {\n  name: \"Reverse\",\n  description: \"Reverse the linked list.\"\n}];\nfunction LinkedListVisualizerPage() {\n  _s();\n  const [listType, setListType] = useState(\"singly\");\n  const [head, setHead] = useState(null);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [position, setPosition] = useState(1);\n  const [operationHistory, setOperationHistory] = useState([]);\n  const [currentCode, setCurrentCode] = useState(\"\");\n\n  // Helper to create a new node\n  const createNode = value => ({\n    value,\n    next: null\n  });\n  const createDoublyNode = value => ({\n    value,\n    next: null,\n    prev: null\n  });\n\n  // Convert list to array for rendering\n  const toArray = () => {\n    const arr = [];\n    let curr = head;\n    if (!curr) return arr;\n    if (listType === \"circular\") {\n      do {\n        arr.push(curr);\n        curr = curr.next;\n      } while (curr && curr !== head);\n    } else {\n      while (curr) {\n        arr.push(curr);\n        curr = curr.next;\n      }\n    }\n    return arr;\n  };\n\n  // Operations\n  const insertAtBeginning = value => {\n    let newNode;\n    if (listType === \"doubly\") {\n      newNode = createDoublyNode(value);\n      if (head) head.prev = newNode;\n      newNode.next = head;\n    } else {\n      newNode = createNode(value);\n      newNode.next = head;\n    }\n    if (listType === \"circular\") {\n      if (!head) {\n        newNode.next = newNode;\n      } else {\n        let tail = head;\n        while (tail.next && tail.next !== head) tail = tail.next;\n        tail.next = newNode;\n        newNode.next = head;\n      }\n    }\n    setHead(newNode);\n    setOperationHistory(h => [`Inserted ${value} at beginning`, ...h]);\n    setCurrentCode(`function insertAtBeginning(value) {\\n  const newNode = { value, next: head };\\n  head = newNode;\\n}`);\n  };\n  const insertAtEnd = value => {\n    let newNode;\n    if (listType === \"doubly\") newNode = createDoublyNode(value);else newNode = createNode(value);\n    if (!head) {\n      if (listType === \"circular\") newNode.next = newNode;\n      setHead(newNode);\n      setOperationHistory(h => [`Inserted ${value} at end (was empty)`, ...h]);\n      setCurrentCode(`function insertAtEnd(value) { ... }`);\n      return;\n    }\n    let curr = head;\n    if (listType === \"circular\") {\n      while (curr.next && curr.next !== head) curr = curr.next;\n      curr.next = newNode;\n      newNode.next = head;\n    } else {\n      while (curr.next) curr = curr.next;\n      curr.next = newNode;\n    }\n    if (listType === \"doubly\") newNode.prev = curr;\n    setOperationHistory(h => [`Inserted ${value} at end`, ...h]);\n    setCurrentCode(`function insertAtEnd(value) { ... }`);\n  };\n  const insertAtPosition = (value, pos) => {\n    if (pos <= 1) return insertAtBeginning(value);\n    let newNode;\n    if (listType === \"doubly\") newNode = createDoublyNode(value);else newNode = createNode(value);\n    let curr = head;\n    let prev = null;\n    let i = 1;\n    while (curr && i < pos) {\n      prev = curr;\n      curr = curr.next;\n      i++;\n    }\n    if (prev) prev.next = newNode;\n    newNode.next = curr;\n    if (listType === \"doubly\") {\n      newNode.prev = prev;\n      if (curr) curr.prev = newNode;\n    }\n    setOperationHistory(h => [`Inserted ${value} at position ${pos}`, ...h]);\n    if (pos === 1) setHead(newNode);else setHead(head);\n    setCurrentCode(`function insertAtPosition(value, pos) { ... }`);\n  };\n  const deleteAtBeginning = () => {\n    if (!head) return;\n    let newHead = head.next;\n    if (listType === \"circular\") {\n      if (head.next === head) newHead = null;else {\n        let tail = head;\n        while (tail.next && tail.next !== head) tail = tail.next;\n        tail.next = head.next;\n        newHead = head.next;\n      }\n    }\n    setOperationHistory(h => [`Deleted node at beginning`, ...h]);\n    setHead(newHead);\n    setCurrentCode(`function deleteAtBeginning() { ... }`);\n  };\n  const deleteAtEnd = () => {\n    if (!head) return;\n    if (!head.next || listType === \"circular\" && head.next === head) {\n      setHead(null);\n      setOperationHistory(h => [`Deleted last node`, ...h]);\n      setCurrentCode(`function deleteAtEnd() { ... }`);\n      return;\n    }\n    let curr = head;\n    let prev = null;\n    while (curr.next && curr.next !== head) {\n      prev = curr;\n      curr = curr.next;\n    }\n    if (prev) prev.next = listType === \"circular\" ? head : null;\n    setOperationHistory(h => [`Deleted node at end`, ...h]);\n    setHead(head);\n    setCurrentCode(`function deleteAtEnd() { ... }`);\n  };\n  const deleteAtPosition = pos => {\n    if (!head) return;\n    if (pos <= 1) return deleteAtBeginning();\n    let curr = head;\n    let prev = null;\n    let i = 1;\n    while (curr && i < pos) {\n      prev = curr;\n      curr = curr.next;\n      i++;\n    }\n    if (!curr) return;\n    if (prev) prev.next = curr.next;\n    if (listType === \"doubly\" && curr.next) curr.next.prev = prev;\n    setOperationHistory(h => [`Deleted node at position ${pos}`, ...h]);\n    setHead(head);\n    setCurrentCode(`function deleteAtPosition(pos) { ... }`);\n  };\n  const modifyAtPosition = (pos, value) => {\n    let curr = head;\n    let i = 1;\n    while (curr && i < pos) {\n      curr = curr.next;\n      i++;\n    }\n    if (!curr) return;\n    curr.value = value;\n    setOperationHistory(h => [`Modified node at position ${pos} to ${value}`, ...h]);\n    setCurrentCode(`function modifyAtPosition(pos, value) { ... }`);\n    setHead({\n      ...head\n    }); // force re-render\n  };\n  const reverseList = () => {\n    let prev = null;\n    let curr = head;\n    let next = null;\n    if (listType === \"circular\") {\n      if (!head || head.next === head) return;\n      let tail = head;\n      while (tail.next && tail.next !== head) tail = tail.next;\n      tail.next = null;\n      // Now treat as singly\n    }\n    while (curr) {\n      next = curr.next;\n      curr.next = prev;\n      if (listType === \"doubly\") curr.prev = next;\n      prev = curr;\n      curr = next;\n    }\n    if (listType === \"circular\" && prev) {\n      let tail = prev;\n      while (tail.next) tail = tail.next;\n      tail.next = prev;\n    }\n    setOperationHistory(h => [`Reversed the list`, ...h]);\n    setHead(prev);\n    setCurrentCode(`function reverseList() { ... }`);\n  };\n\n  // UI Handlers\n  const handleInsertBeginning = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtBeginning(val);\n    setInputValue(\"\");\n  };\n  const handleInsertEnd = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtEnd(val);\n    setInputValue(\"\");\n  };\n  const handleInsertPosition = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) insertAtPosition(val, position);\n    setInputValue(\"\");\n  };\n  const handleDeleteBeginning = () => deleteAtBeginning();\n  const handleDeleteEnd = () => deleteAtEnd();\n  const handleDeletePosition = () => deleteAtPosition(position);\n  const handleModify = () => {\n    const val = parseInt(inputValue);\n    if (!isNaN(val)) modifyAtPosition(position, val);\n    setInputValue(\"\");\n  };\n  const handleReverse = () => reverseList();\n\n  // Render\n  const nodes = toArray();\n\n  // Add the fullCodeString variable before the return statement\n  const fullCodeString = `// Singly Linked List Operations\n\nfunction insertAtBeginning(value) {\n  const newNode = { value, next: head };\n  head = newNode;\n}\n\nfunction insertAtEnd(value) {\n  const newNode = { value, next: null };\n  if (!head) {\n    head = newNode;\n    return;\n  }\n  let curr = head;\n  while (curr.next) curr = curr.next;\n  curr.next = newNode;\n}\n\nfunction insertAtPosition(value, pos) {\n  if (pos <= 1) return insertAtBeginning(value);\n  let curr = head, prev = null, i = 1;\n  while (curr && i < pos) {\n    prev = curr;\n    curr = curr.next;\n    i++;\n  }\n  const newNode = { value, next: curr };\n  if (prev) prev.next = newNode;\n}\n\nfunction deleteAtBeginning() {\n  if (!head) return;\n  head = head.next;\n}\n\nfunction deleteAtEnd() {\n  if (!head) return;\n  if (!head.next) {\n    head = null;\n    return;\n  }\n  let curr = head, prev = null;\n  while (curr.next) {\n    prev = curr;\n    curr = curr.next;\n  }\n  if (prev) prev.next = null;\n}\n\nfunction deleteAtPosition(pos) {\n  if (!head) return;\n  if (pos <= 1) return deleteAtBeginning();\n  let curr = head, prev = null, i = 1;\n  while (curr && i < pos) {\n    prev = curr;\n    curr = curr.next;\n    i++;\n  }\n  if (prev && curr) prev.next = curr.next;\n}\n\nfunction modifyAtPosition(pos, value) {\n  let curr = head, i = 1;\n  while (curr && i < pos) {\n    curr = curr.next;\n    i++;\n  }\n  if (curr) curr.value = value;\n}\n\nfunction reverseList() {\n  let prev = null, curr = head, next = null;\n  while (curr) {\n    next = curr.next;\n    curr.next = prev;\n    prev = curr;\n    curr = next;\n  }\n  head = prev;\n}\n\n// Doubly and Circular Linked List code omitted for brevity.\n// You can expand this section with full code for those types as needed.\n`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(List, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\",\n            children: \"Linked List Visualizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Visualize singly, doubly, and circular linked list operations step by step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Linked List Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4 flex gap-2 flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"singly\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 hover:bg-blue-100\"}`,\n              onClick: () => setListType(\"singly\"),\n              children: \"Singly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"doubly\" ? \"bg-purple-600 text-white\" : \"bg-gray-200 hover:bg-purple-100\"}`,\n              onClick: () => setListType(\"doubly\"),\n              children: \"Doubly\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"circular\" ? \"bg-green-600 text-white\" : \"bg-gray-200 hover:bg-green-100\"}`,\n              onClick: () => setListType(\"circular\"),\n              children: \"Circular\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border px-2 py-1 rounded w-24 focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Value\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border px-2 py-1 rounded w-24 focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Position\",\n              value: position,\n              min: 1,\n              onChange: e => setPosition(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleInsertBeginning,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 17\n              }, this), \" Insert at Beginning\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleInsertEnd,\n              className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), \" Insert at End\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleInsertPosition,\n              className: \"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this), \" Insert at Position\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteBeginning,\n              className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Minus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 17\n              }, this), \" Delete at Beginning\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteEnd,\n              className: \"px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Minus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), \" Delete at End\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeletePosition,\n              className: \"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Minus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), \" Delete at Position\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleModify,\n              className: \"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(Edit, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 17\n              }, this), \" Modify\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleReverse,\n              className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 font-semibold\",\n              children: [/*#__PURE__*/_jsxDEV(RefreshCcw, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), \" Reverse\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Linked List Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-300 rounded-lg p-4 min-h-[120px] flex items-center gap-4 mb-8 overflow-x-auto bg-gradient-to-r from-blue-50 to-purple-50\",\n            children: nodes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400\",\n              children: \"List is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 17\n            }, this) : nodes.map((node, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-blue-100 border-2 border-blue-400 rounded-lg px-4 py-2 text-lg font-bold relative shadow-md\",\n                children: [listType === \"doubly\" && /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                  className: \"w-4 h-4 text-purple-500 absolute left-0 top-1/2 -translate-y-1/2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 49\n                }, this), node.value, /*#__PURE__*/_jsxDEV(ChevronRight, {\n                  className: \"w-4 h-4 text-blue-500 absolute right-0 top-1/2 -translate-y-1/2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 475,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this), idx !== nodes.length - 1 && /*#__PURE__*/_jsxDEV(ArrowLeftRight, {\n                className: \"w-6 h-6 text-gray-400 mx-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 50\n              }, this), listType === \"circular\" && idx === nodes.length - 1 && /*#__PURE__*/_jsxDEV(Repeat, {\n                className: \"w-6 h-6 text-green-500 mx-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap items-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-4 h-4 bg-blue-100 border-2 border-blue-400 rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Node\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 490,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2\",\n              children: [/*#__PURE__*/_jsxDEV(ChevronRight, {\n                className: \"w-4 h-4 text-blue-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Next Pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 494,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 492,\n              columnNumber: 15\n            }, this), listType === \"doubly\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n                className: \"w-4 h-4 text-purple-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Prev Pointer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), listType === \"circular\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Repeat, {\n                className: \"w-4 h-4 text-green-500\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Points to Head\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900 mb-2\",\n            children: \"Code for Current Operation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-100 rounded p-4 text-xs overflow-x-auto mb-4 border border-gray-200 shadow-inner\",\n            children: currentCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-gray-900 mb-2\",\n            children: \"Full Code for All Operations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"bg-gray-100 rounded p-4 text-xs overflow-x-auto border border-gray-200 shadow-inner\",\n            children: fullCodeString\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6 flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Operation History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-[500px] overflow-y-auto border rounded-lg p-4 bg-gray-50\",\n            children: operationHistory.slice(0, 20).map((op, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 mb-2 rounded-lg ${op.startsWith(\"Error\") ? \"bg-red-100 text-red-700\" : \"bg-gray-100 text-gray-700\"}`,\n              children: op\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 382,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkedListVisualizerPage, \"BS6bmZ+FNhOEBjh/47shtOOow8g=\");\n_c = LinkedListVisualizerPage;\nexport default LinkedListVisualizerPage;\nvar _c;\n$RefreshReg$(_c, \"LinkedListVisualizerPage\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","React","useState","List","Plus","Minus","Edit","RefreshCcw","ArrowLeftRight","ChevronRight","ChevronLeft","Repeat","jsxDEV","_jsxDEV","Fragment","_Fragment","operations","name","description","LinkedListVisualizerPage","listType","setListType","head","setHead","inputValue","setInputValue","position","setPosition","operationHistory","setOperationHistory","currentCode","setCurrentCode","createNode","value","next","createDoublyNode","prev","toArray","arr","curr","push","insertAtBeginning","newNode","tail","h","insertAtEnd","insertAtPosition","pos","i","deleteAtBeginning","newHead","deleteAtEnd","deleteAtPosition","modifyAtPosition","reverseList","handleInsertBeginning","val","parseInt","isNaN","handleInsertEnd","handleInsertPosition","handleDeleteBeginning","handleDeleteEnd","handleDeletePosition","handleModify","handleReverse","nodes","fullCodeString","className","children","fileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","e","target","min","Number","length","map","node","idx","slice","op","startsWith","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/LinkedListVisualizerPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { List, Plus, Minus, Edit, RefreshCcw, ArrowLeftRight, ChevronRight, ChevronLeft, Repeat } from \"lucide-react\";\r\n\r\n// Node types\r\ninterface ListNode {\r\n  value: number;\r\n  next: ListNode | null;\r\n  prev?: ListNode | null; // For doubly linked list\r\n}\r\n\r\ntype ListType = \"singly\" | \"doubly\" | \"circular\";\r\n\r\ninterface Operation {\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\nconst operations: Operation[] = [\r\n  { name: \"Insert at Beginning\", description: \"Insert a node at the start of the list.\" },\r\n  { name: \"Insert at End\", description: \"Insert a node at the end of the list.\" },\r\n  { name: \"Insert at Position\", description: \"Insert a node at a specific position.\" },\r\n  { name: \"Delete at Beginning\", description: \"Delete the first node.\" },\r\n  { name: \"Delete at End\", description: \"Delete the last node.\" },\r\n  { name: \"Delete at Position\", description: \"Delete a node at a specific position.\" },\r\n  { name: \"Modify\", description: \"Modify the value of a node at a specific position.\" },\r\n  { name: \"Reverse\", description: \"Reverse the linked list.\" },\r\n];\r\n\r\nfunction LinkedListVisualizerPage() {\r\n  const [listType, setListType] = useState<ListType>(\"singly\");\r\n  const [head, setHead] = useState<ListNode | null>(null);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [position, setPosition] = useState(1);\r\n  const [operationHistory, setOperationHistory] = useState<string[]>([]);\r\n  const [currentCode, setCurrentCode] = useState<string>(\"\");\r\n\r\n  // Helper to create a new node\r\n  const createNode = (value: number): ListNode => ({ value, next: null });\r\n  const createDoublyNode = (value: number): ListNode => ({ value, next: null, prev: null });\r\n\r\n  // Convert list to array for rendering\r\n  const toArray = (): ListNode[] => {\r\n    const arr: ListNode[] = [];\r\n    let curr = head;\r\n    if (!curr) return arr;\r\n    if (listType === \"circular\") {\r\n      do {\r\n        arr.push(curr);\r\n        curr = curr.next;\r\n      } while (curr && curr !== head);\r\n    } else {\r\n      while (curr) {\r\n        arr.push(curr);\r\n        curr = curr.next;\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  // Operations\r\n  const insertAtBeginning = (value: number) => {\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") {\r\n      newNode = createDoublyNode(value);\r\n      if (head) (head as ListNode).prev = newNode;\r\n      newNode.next = head;\r\n    } else {\r\n      newNode = createNode(value);\r\n      newNode.next = head;\r\n    }\r\n    if (listType === \"circular\") {\r\n      if (!head) {\r\n        newNode.next = newNode;\r\n      } else {\r\n        let tail = head;\r\n        while (tail.next && tail.next !== head) tail = tail.next;\r\n        tail.next = newNode;\r\n        newNode.next = head;\r\n      }\r\n    }\r\n    setHead(newNode);\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at beginning`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function insertAtBeginning(value) {\\n  const newNode = { value, next: head };\\n  head = newNode;\\n}`);\r\n  };\r\n\r\n  const insertAtEnd = (value: number) => {\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") newNode = createDoublyNode(value);\r\n    else newNode = createNode(value);\r\n    if (!head) {\r\n      if (listType === \"circular\") newNode.next = newNode;\r\n      setHead(newNode);\r\n      setOperationHistory((h) => [\r\n        `Inserted ${value} at end (was empty)`,\r\n        ...h,\r\n      ]);\r\n      setCurrentCode(`function insertAtEnd(value) { ... }`);\r\n      return;\r\n    }\r\n    let curr = head;\r\n    if (listType === \"circular\") {\r\n      while (curr.next && curr.next !== head) curr = curr.next;\r\n      curr.next = newNode;\r\n      newNode.next = head;\r\n    } else {\r\n      while (curr.next) curr = curr.next;\r\n      curr.next = newNode;\r\n    }\r\n    if (listType === \"doubly\") newNode.prev = curr;\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at end`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function insertAtEnd(value) { ... }`);\r\n  };\r\n\r\n  const insertAtPosition = (value: number, pos: number) => {\r\n    if (pos <= 1) return insertAtBeginning(value);\r\n    let newNode: ListNode;\r\n    if (listType === \"doubly\") newNode = createDoublyNode(value);\r\n    else newNode = createNode(value);\r\n    let curr: ListNode | null = head;\r\n    let prev: ListNode | null = null;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (prev) prev.next = newNode;\r\n    newNode.next = curr;\r\n    if (listType === \"doubly\") {\r\n      newNode.prev = prev;\r\n      if (curr) curr.prev = newNode;\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Inserted ${value} at position ${pos}`,\r\n      ...h,\r\n    ]);\r\n    if (pos === 1) setHead(newNode);\r\n    else setHead(head);\r\n    setCurrentCode(`function insertAtPosition(value, pos) { ... }`);\r\n  };\r\n\r\n  const deleteAtBeginning = () => {\r\n    if (!head) return;\r\n    let newHead = head.next;\r\n    if (listType === \"circular\") {\r\n      if (head.next === head) newHead = null;\r\n      else {\r\n        let tail = head;\r\n        while (tail.next && tail.next !== head) tail = tail.next;\r\n        tail.next = head.next;\r\n        newHead = head.next;\r\n      }\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Deleted node at beginning`,\r\n      ...h,\r\n    ]);\r\n    setHead(newHead);\r\n    setCurrentCode(`function deleteAtBeginning() { ... }`);\r\n  };\r\n\r\n  const deleteAtEnd = () => {\r\n    if (!head) return;\r\n    if (!head.next || (listType === \"circular\" && head.next === head)) {\r\n      setHead(null);\r\n      setOperationHistory((h) => [\r\n        `Deleted last node`,\r\n        ...h,\r\n      ]);\r\n      setCurrentCode(`function deleteAtEnd() { ... }`);\r\n      return;\r\n    }\r\n    let curr = head;\r\n    let prev: ListNode | null = null;\r\n    while (curr.next && curr.next !== head) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n    }\r\n    if (prev) prev.next = listType === \"circular\" ? head : null;\r\n    setOperationHistory((h) => [\r\n      `Deleted node at end`,\r\n      ...h,\r\n    ]);\r\n    setHead(head);\r\n    setCurrentCode(`function deleteAtEnd() { ... }`);\r\n  };\r\n\r\n  const deleteAtPosition = (pos: number) => {\r\n    if (!head) return;\r\n    if (pos <= 1) return deleteAtBeginning();\r\n    let curr: ListNode | null = head;\r\n    let prev: ListNode | null = null;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      prev = curr;\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (!curr) return;\r\n    if (prev) prev.next = curr.next;\r\n    if (listType === \"doubly\" && curr.next) (curr.next as ListNode).prev = prev;\r\n    setOperationHistory((h) => [\r\n      `Deleted node at position ${pos}`,\r\n      ...h,\r\n    ]);\r\n    setHead(head);\r\n    setCurrentCode(`function deleteAtPosition(pos) { ... }`);\r\n  };\r\n\r\n  const modifyAtPosition = (pos: number, value: number) => {\r\n    let curr = head;\r\n    let i = 1;\r\n    while (curr && i < pos) {\r\n      curr = curr.next;\r\n      i++;\r\n    }\r\n    if (!curr) return;\r\n    curr.value = value;\r\n    setOperationHistory((h) => [\r\n      `Modified node at position ${pos} to ${value}`,\r\n      ...h,\r\n    ]);\r\n    setCurrentCode(`function modifyAtPosition(pos, value) { ... }`);\r\n    setHead({ ...head! }); // force re-render\r\n  };\r\n\r\n  const reverseList = () => {\r\n    let prev: ListNode | null = null;\r\n    let curr = head;\r\n    let next: ListNode | null = null;\r\n    if (listType === \"circular\") {\r\n      if (!head || head.next === head) return;\r\n      let tail = head;\r\n      while (tail.next && tail.next !== head) tail = tail.next;\r\n      tail.next = null;\r\n      // Now treat as singly\r\n    }\r\n    while (curr) {\r\n      next = curr.next;\r\n      curr.next = prev;\r\n      if (listType === \"doubly\") curr.prev = next;\r\n      prev = curr;\r\n      curr = next;\r\n    }\r\n    if (listType === \"circular\" && prev) {\r\n      let tail = prev;\r\n      while (tail.next) tail = tail.next;\r\n      tail.next = prev;\r\n    }\r\n    setOperationHistory((h) => [\r\n      `Reversed the list`,\r\n      ...h,\r\n    ]);\r\n    setHead(prev);\r\n    setCurrentCode(`function reverseList() { ... }`);\r\n  };\r\n\r\n  // UI Handlers\r\n  const handleInsertBeginning = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtBeginning(val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleInsertEnd = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtEnd(val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleInsertPosition = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) insertAtPosition(val, position);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleDeleteBeginning = () => deleteAtBeginning();\r\n  const handleDeleteEnd = () => deleteAtEnd();\r\n  const handleDeletePosition = () => deleteAtPosition(position);\r\n  const handleModify = () => {\r\n    const val = parseInt(inputValue);\r\n    if (!isNaN(val)) modifyAtPosition(position, val);\r\n    setInputValue(\"\");\r\n  };\r\n  const handleReverse = () => reverseList();\r\n\r\n  // Render\r\n  const nodes = toArray();\r\n\r\n  // Add the fullCodeString variable before the return statement\r\n  const fullCodeString = `// Singly Linked List Operations\r\n\r\nfunction insertAtBeginning(value) {\r\n  const newNode = { value, next: head };\r\n  head = newNode;\r\n}\r\n\r\nfunction insertAtEnd(value) {\r\n  const newNode = { value, next: null };\r\n  if (!head) {\r\n    head = newNode;\r\n    return;\r\n  }\r\n  let curr = head;\r\n  while (curr.next) curr = curr.next;\r\n  curr.next = newNode;\r\n}\r\n\r\nfunction insertAtPosition(value, pos) {\r\n  if (pos <= 1) return insertAtBeginning(value);\r\n  let curr = head, prev = null, i = 1;\r\n  while (curr && i < pos) {\r\n    prev = curr;\r\n    curr = curr.next;\r\n    i++;\r\n  }\r\n  const newNode = { value, next: curr };\r\n  if (prev) prev.next = newNode;\r\n}\r\n\r\nfunction deleteAtBeginning() {\r\n  if (!head) return;\r\n  head = head.next;\r\n}\r\n\r\nfunction deleteAtEnd() {\r\n  if (!head) return;\r\n  if (!head.next) {\r\n    head = null;\r\n    return;\r\n  }\r\n  let curr = head, prev = null;\r\n  while (curr.next) {\r\n    prev = curr;\r\n    curr = curr.next;\r\n  }\r\n  if (prev) prev.next = null;\r\n}\r\n\r\nfunction deleteAtPosition(pos) {\r\n  if (!head) return;\r\n  if (pos <= 1) return deleteAtBeginning();\r\n  let curr = head, prev = null, i = 1;\r\n  while (curr && i < pos) {\r\n    prev = curr;\r\n    curr = curr.next;\r\n    i++;\r\n  }\r\n  if (prev && curr) prev.next = curr.next;\r\n}\r\n\r\nfunction modifyAtPosition(pos, value) {\r\n  let curr = head, i = 1;\r\n  while (curr && i < pos) {\r\n    curr = curr.next;\r\n    i++;\r\n  }\r\n  if (curr) curr.value = value;\r\n}\r\n\r\nfunction reverseList() {\r\n  let prev = null, curr = head, next = null;\r\n  while (curr) {\r\n    next = curr.next;\r\n    curr.next = prev;\r\n    prev = curr;\r\n    curr = next;\r\n  }\r\n  head = prev;\r\n}\r\n\r\n// Doubly and Circular Linked List code omitted for brevity.\r\n// You can expand this section with full code for those types as needed.\r\n`;\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\">\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\">\r\n              <List className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n              Linked List Visualizer\r\n            </h1>\r\n          </div>\r\n          <p className=\"mt-2 text-gray-600\">Visualize singly, doubly, and circular linked list operations step by step</p>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Controls and Visualization */}\r\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Linked List Controls</h2>\r\n            <div className=\"mb-4 flex gap-2 flex-wrap\">\r\n              <button\r\n                className={`px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"singly\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 hover:bg-blue-100\"}`}\r\n                onClick={() => setListType(\"singly\")}\r\n              >\r\n                Singly\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"doubly\" ? \"bg-purple-600 text-white\" : \"bg-gray-200 hover:bg-purple-100\"}`}\r\n                onClick={() => setListType(\"doubly\")}\r\n              >\r\n                Doubly\r\n              </button>\r\n              <button\r\n                className={`px-4 py-2 rounded-lg font-semibold transition-colors duration-200 ${listType === \"circular\" ? \"bg-green-600 text-white\" : \"bg-gray-200 hover:bg-green-100\"}`}\r\n                onClick={() => setListType(\"circular\")}\r\n              >\r\n                Circular\r\n              </button>\r\n            </div>\r\n            <div className=\"flex flex-wrap gap-2 mb-6\">\r\n              <input\r\n                type=\"number\"\r\n                className=\"border px-2 py-1 rounded w-24 focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Value\"\r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)}\r\n              />\r\n              <input\r\n                type=\"number\"\r\n                className=\"border px-2 py-1 rounded w-24 focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Position\"\r\n                value={position}\r\n                min={1}\r\n                onChange={e => setPosition(Number(e.target.value))}\r\n              />\r\n              <button onClick={handleInsertBeginning} className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 font-semibold\">\r\n                <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at Beginning\r\n              </button>\r\n              <button onClick={handleInsertEnd} className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 font-semibold\">\r\n                <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at End\r\n              </button>\r\n              <button onClick={handleInsertPosition} className=\"px-4 py-2 bg-cyan-600 text-white rounded-lg hover:bg-cyan-700 font-semibold\">\r\n                <Plus className=\"w-5 h-5 inline mr-1\" /> Insert at Position\r\n              </button>\r\n              <button onClick={handleDeleteBeginning} className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 font-semibold\">\r\n                <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at Beginning\r\n              </button>\r\n              <button onClick={handleDeleteEnd} className=\"px-4 py-2 bg-pink-600 text-white rounded-lg hover:bg-pink-700 font-semibold\">\r\n                <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at End\r\n              </button>\r\n              <button onClick={handleDeletePosition} className=\"px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 font-semibold\">\r\n                <Minus className=\"w-5 h-5 inline mr-1\" /> Delete at Position\r\n              </button>\r\n              <button onClick={handleModify} className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 font-semibold\">\r\n                <Edit className=\"w-5 h-5 inline mr-1\" /> Modify\r\n              </button>\r\n              <button onClick={handleReverse} className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 font-semibold\">\r\n                <RefreshCcw className=\"w-5 h-5 inline mr-1\" /> Reverse\r\n              </button>\r\n            </div>\r\n\r\n            {/* Visualization */}\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Linked List Visualization</h2>\r\n            <div className=\"border-2 border-gray-300 rounded-lg p-4 min-h-[120px] flex items-center gap-4 mb-8 overflow-x-auto bg-gradient-to-r from-blue-50 to-purple-50\">\r\n              {nodes.length === 0 ? (\r\n                <div className=\"text-gray-400\">List is empty</div>\r\n              ) : (\r\n                nodes.map((node, idx) => (\r\n                  <div key={idx} className=\"flex items-center\">\r\n                    <div className=\"bg-blue-100 border-2 border-blue-400 rounded-lg px-4 py-2 text-lg font-bold relative shadow-md\">\r\n                      {listType === \"doubly\" && <ChevronLeft className=\"w-4 h-4 text-purple-500 absolute left-0 top-1/2 -translate-y-1/2\" />}\r\n                      {node.value}\r\n                      <ChevronRight className=\"w-4 h-4 text-blue-500 absolute right-0 top-1/2 -translate-y-1/2\" />\r\n                    </div>\r\n                    {idx !== nodes.length - 1 && <ArrowLeftRight className=\"w-6 h-6 text-gray-400 mx-2\" />}\r\n                    {listType === \"circular\" && idx === nodes.length - 1 && (\r\n                      <Repeat className=\"w-6 h-6 text-green-500 mx-2\" />\r\n                    )}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n\r\n            {/* Legend */}\r\n            <div className=\"flex flex-wrap items-center gap-4 text-sm bg-white rounded-lg p-4 shadow-sm border mb-6\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"w-4 h-4 bg-blue-100 border-2 border-blue-400 rounded\"></div>\r\n                <span>Node</span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <ChevronRight className=\"w-4 h-4 text-blue-500\" />\r\n                <span>Next Pointer</span>\r\n              </div>\r\n              {listType === \"doubly\" && (\r\n                <>\r\n                  <ChevronLeft className=\"w-4 h-4 text-purple-500\" />\r\n                  <span>Prev Pointer</span>\r\n                </>\r\n              )}\r\n              {listType === \"circular\" && (\r\n                <>\r\n                  <Repeat className=\"w-4 h-4 text-green-500\" />\r\n                  <span>Points to Head</span>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            {/* Code for current step */}\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Code for Current Operation</h2>\r\n            <pre className=\"bg-gray-100 rounded p-4 text-xs overflow-x-auto mb-4 border border-gray-200 shadow-inner\">{currentCode}</pre>\r\n\r\n            {/* Full code section */}\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Full Code for All Operations</h2>\r\n            <pre className=\"bg-gray-100 rounded p-4 text-xs overflow-x-auto border border-gray-200 shadow-inner\">{fullCodeString}</pre>\r\n          </div>\r\n\r\n          {/* Operation History */}\r\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6 flex flex-col\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Operation History</h2>\r\n            <div className=\"h-[500px] overflow-y-auto border rounded-lg p-4 bg-gray-50\">\r\n              {operationHistory.slice(0, 20).map((op, idx) => (\r\n                <div\r\n                  key={idx}\r\n                  className={`p-2 mb-2 rounded-lg ${\r\n                    op.startsWith(\"Error\")\r\n                      ? \"bg-red-100 text-red-700\"\r\n                      : \"bg-gray-100 text-gray-700\"\r\n                  }`}\r\n                >\r\n                  {op}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkedListVisualizerPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}