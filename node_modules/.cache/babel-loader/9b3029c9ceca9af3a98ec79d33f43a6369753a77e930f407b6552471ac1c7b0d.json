{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\DSA Website\\\\src\\\\pages\\\\StackVisualizerPage.tsx\",\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Layers, Plus, Minus, Eye, AlertCircle, CheckCircle2 } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stackOperations = [{\n  name: \"Push\",\n  description: \"Adds an element to the top of the stack.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def push(self, item):\\n    if self.is_full():\\n        # Handle stack full error\\n        return\\n    self.stack.append(item)'\n}, {\n  name: \"Pop\",\n  description: \"Removes and returns the top element from the stack.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def pop(self):\\n    if self.is_empty():\\n        # Handle stack empty error\\n        return None\\n    return self.stack.pop()'\n}, {\n  name: \"Peek\",\n  description: \"Returns the top element without removing it.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def peek(self):\\n    if self.is_empty():\\n        # Handle stack empty error\\n        return None\\n    return self.stack[-1]'\n}, {\n  name: \"Is Empty\",\n  description: \"Checks if the stack has no elements.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def is_empty(self):\\n    return len(self.stack) == 0'\n}, {\n  name: \"Is Full\",\n  description: \"Checks if the stack has reached its maximum capacity.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def is_full(self):\\n    return len(self.stack) == self.capacity'\n}, {\n  name: \"Size\",\n  description: \"Returns the number of elements in the stack.\",\n  timeComplexity: \"O(1)\",\n  spaceComplexity: \"O(1)\",\n  pythonCode: 'def size(self):\\n    return len(self.stack)'\n}];\nfunction StackVisualizerPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [stack, setStack] = useState([]);\n  const [maxSize, setMaxSize] = useState(10);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [operationHistory, setOperationHistory] = useState([]);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [showFullPythonCode, setShowFullPythonCode] = useState(false);\n  const push = () => {\n    if (stack.length >= maxSize) {\n      setOperationHistory(prev => [...prev, \"Error: Stack is full!\"]);\n      return;\n    }\n    if (!inputValue || isNaN(Number(inputValue))) {\n      setOperationHistory(prev => [...prev, \"Error: Please enter a valid number!\"]);\n      return;\n    }\n    setIsAnimating(true);\n    const newElement = {\n      value: Number(inputValue),\n      isHighlighted: true\n    };\n    setStack(prev => [...prev, newElement]);\n    setOperationHistory(prev => [...prev, `Pushed ${inputValue} to stack`]);\n    setInputValue(\"\");\n    setTimeout(() => {\n      setStack(prev => prev.map(el => ({\n        ...el,\n        isHighlighted: false\n      })));\n      setIsAnimating(false);\n    }, 1000);\n  };\n  const pop = () => {\n    if (stack.length === 0) {\n      setOperationHistory(prev => [...prev, \"Error: Stack is empty!\"]);\n      return;\n    }\n    setIsAnimating(true);\n    const poppedValue = stack[stack.length - 1].value;\n    setStack(prev => prev.slice(0, -1));\n    setOperationHistory(prev => [...prev, `Popped ${poppedValue} from stack`]);\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 1000);\n  };\n  const peek = () => {\n    if (stack.length === 0) {\n      setOperationHistory(prev => [...prev, \"Error: Stack is empty!\"]);\n      return;\n    }\n    setIsAnimating(true);\n    const topValue = stack[stack.length - 1].value;\n    setStack(prev => prev.map((el, idx) => idx === prev.length - 1 ? {\n      ...el,\n      isHighlighted: true\n    } : el));\n    setOperationHistory(prev => [...prev, `Peeked at ${topValue}`]);\n    setTimeout(() => {\n      setStack(prev => prev.map(el => ({\n        ...el,\n        isHighlighted: false\n      })));\n      setIsAnimating(false);\n    }, 1000);\n  };\n  const isEmpty = () => {\n    const empty = stack.length === 0;\n    setOperationHistory(prev => [...prev, `Stack is ${empty ? \"empty\" : \"not empty\"}`]);\n  };\n  const isFull = () => {\n    const full = stack.length >= maxSize;\n    setOperationHistory(prev => [...prev, `Stack is ${full ? \"full\" : \"not full\"}`]);\n  };\n  const size = () => {\n    setOperationHistory(prev => [...prev, `Stack size: ${stack.length}`]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"bg-white shadow-sm border-b\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\",\n            children: /*#__PURE__*/_jsxDEV(Layers, {\n              className: \"w-6 h-6 text-white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\",\n            children: \"Stack Operations Visualizer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Visualize stack operations step by step\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n        children: _s(stackOperations.map(_s(operation => {\n          _s();\n          const [showCode, setShowCode] = useState(false);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-white rounded-lg shadow-md p-4 border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-gray-900 mb-2 flex justify-between items-center\",\n              children: [operation.name, /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowCode(!showCode),\n                className: \"text-blue-500 hover:text-blue-700 text-sm\",\n                children: showCode ? \"Hide Code\" : \"Show Code\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-gray-600 mb-2\",\n              children: operation.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-sm text-gray-500\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Time Complexity: \", operation.timeComplexity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Space Complexity: \", operation.spaceComplexity]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4 bg-gray-100 p-3 rounded-md overflow-x-auto\",\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                children: /*#__PURE__*/_jsxDEV(\"code\", {\n                  className: \"lang-python text-sm\",\n                  children: operation.pythonCode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 26\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this)]\n          }, operation.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this);\n        }, \"vIe6NEKEYgSm5bNA+JZKcPiDC7o=\")), \"vIe6NEKEYgSm5bNA+JZKcPiDC7o=\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-8 p-6 bg-white rounded-2xl shadow-lg border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-bold text-gray-900 mb-4 flex justify-between items-center\",\n          children: [\"Full Stack Python Implementation\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFullPythonCode(!showFullPythonCode),\n            className: \"text-blue-500 hover:text-blue-700 text-sm\",\n            children: showFullPythonCode ? \"Hide Full Code\" : \"Show Full Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), showFullPythonCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4 bg-gray-100 p-3 rounded-md overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: /*#__PURE__*/_jsxDEV(\"code\", {\n              className: \"lang-python text-sm\",\n              children: 'class Stack:\\n    def __init__(self, capacity=10):\\n        self.stack = []\\n        self.capacity = capacity\\n\\n    def is_empty(self):\\n        return len(self.stack) == 0\\n\\n    def is_full(self):\\n        return len(self.stack) == self.capacity\\n\\n    def push(self, item):\\n        if self.is_full():\\n            print(\"Error: Stack is full!\")\\n            return False\\n        self.stack.append(item)\\n        print(f\"Pushed: {item}\")\\n        return True\\n\\n    def pop(self):\\n        if self.is_empty():\\n            print(\"Error: Stack is empty!\")\\n            return None\\n        item = self.stack.pop()\\n        print(f\"Popped: {item}\")\\n        return item\\n\\n    def peek(self):\\n        if self.is_empty():\\n            print(\"Error: Stack is empty!\")\\n            return None\\n        item = self.stack[-1]\\n        print(f\"Peeked: {item}\")\\n        return item\\n\\n    def size(self):\\n        return len(self.stack)\\n\\n    def display(self):\\n        if self.is_empty():\\n            print(\"Stack: []\")\\n        else:\\n            print(\"Stack:\", self.stack)'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 lg:grid-cols-2 gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Stack Visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"max-size\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Maximum Stack Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"max-size\",\n              type: \"number\",\n              value: maxSize,\n              onChange: e => setMaxSize(Math.max(1, Number(e.target.value))),\n              className: \"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500\",\n              min: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"input-value\",\n              className: \"block text-sm font-medium text-gray-700 mb-2\",\n              children: \"Value to Push\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"input-value\",\n              type: \"number\",\n              value: inputValue,\n              onChange: e => setInputValue(e.target.value),\n              className: \"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500\",\n              placeholder: \"Enter a number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-wrap gap-2 mb-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: push,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(Plus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this), \"Push\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: pop,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(Minus, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), \"Pop\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: peek,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(Eye, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), \"Peek\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: isEmpty,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this), \"Is Empty\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: isFull,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:opacity-50\",\n              children: [/*#__PURE__*/_jsxDEV(CheckCircle2, {\n                className: \"w-5 h-5 inline mr-1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), \"Is Full\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: size,\n              disabled: isAnimating,\n              className: \"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50\",\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-2 border-gray-300 rounded-lg p-4 min-h-[300px] flex flex-col-reverse\",\n            children: [stack.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `w-full h-12 mb-2 rounded-lg flex items-center justify-center text-white font-bold transition-all duration-300 ${element.isHighlighted ? \"bg-green-500 transform scale-105\" : \"bg-blue-500\"}`,\n              children: element.value\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)), stack.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-gray-400 text-center my-auto\",\n              children: \"Stack is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900 mb-4\",\n            children: \"Operation History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-[500px] overflow-y-auto border rounded-lg p-4\",\n            children: operationHistory.map((operation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `p-2 mb-2 rounded-lg ${operation.startsWith(\"Error\") ? \"bg-red-100 text-red-700\" : \"bg-gray-100 text-gray-700\"}`,\n              children: operation\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s2(StackVisualizerPage, \"arMidZOusrmn+RcP40XI1NdSDUs=\");\n_c = StackVisualizerPage;\nexport default StackVisualizerPage;\nvar _c;\n$RefreshReg$(_c, \"StackVisualizerPage\");","map":{"version":3,"names":["_jsxFileName","_s2","$RefreshSig$","useState","Layers","Plus","Minus","Eye","AlertCircle","CheckCircle2","jsxDEV","_jsxDEV","stackOperations","name","description","timeComplexity","spaceComplexity","pythonCode","StackVisualizerPage","_s","stack","setStack","maxSize","setMaxSize","inputValue","setInputValue","operationHistory","setOperationHistory","isAnimating","setIsAnimating","showFullPythonCode","setShowFullPythonCode","push","length","prev","isNaN","Number","newElement","value","isHighlighted","setTimeout","map","el","pop","poppedValue","slice","peek","topValue","idx","isEmpty","empty","isFull","full","size","className","children","fileName","lineNumber","columnNumber","operation","showCode","setShowCode","onClick","htmlFor","id","type","onChange","e","Math","max","target","min","placeholder","disabled","element","index","startsWith","_c","$RefreshReg$"],"sources":["D:/DSA Website/src/pages/StackVisualizerPage.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport type React from \"react\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { Layers, Plus, Minus, Eye, AlertCircle, CheckCircle2 } from \"lucide-react\"\r\n\r\ninterface StackOperation {\r\n  name: string\r\n  description: string\r\n  timeComplexity: string\r\n  spaceComplexity: string\r\n  pythonCode: string\r\n}\r\n\r\nconst stackOperations: StackOperation[] = [\r\n  {\r\n    name: \"Push\",\r\n    description: \"Adds an element to the top of the stack.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def push(self, item):\\n    if self.is_full():\\n        # Handle stack full error\\n        return\\n    self.stack.append(item)',\r\n  },\r\n  {\r\n    name: \"Pop\",\r\n    description: \"Removes and returns the top element from the stack.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def pop(self):\\n    if self.is_empty():\\n        # Handle stack empty error\\n        return None\\n    return self.stack.pop()',\r\n  },\r\n  {\r\n    name: \"Peek\",\r\n    description: \"Returns the top element without removing it.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def peek(self):\\n    if self.is_empty():\\n        # Handle stack empty error\\n        return None\\n    return self.stack[-1]',\r\n  },\r\n  {\r\n    name: \"Is Empty\",\r\n    description: \"Checks if the stack has no elements.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def is_empty(self):\\n    return len(self.stack) == 0',\r\n  },\r\n  {\r\n    name: \"Is Full\",\r\n    description: \"Checks if the stack has reached its maximum capacity.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def is_full(self):\\n    return len(self.stack) == self.capacity',\r\n  },\r\n  {\r\n    name: \"Size\",\r\n    description: \"Returns the number of elements in the stack.\",\r\n    timeComplexity: \"O(1)\",\r\n    spaceComplexity: \"O(1)\",\r\n    pythonCode: 'def size(self):\\n    return len(self.stack)',\r\n  },\r\n]\r\n\r\ninterface StackElement {\r\n  value: number\r\n  isHighlighted: boolean\r\n}\r\n\r\nfunction StackVisualizerPage() {\r\n  const [stack, setStack] = useState<StackElement[]>([])\r\n  const [maxSize, setMaxSize] = useState<number>(10)\r\n  const [inputValue, setInputValue] = useState<string>(\"\")\r\n  const [operationHistory, setOperationHistory] = useState<string[]>([])\r\n  const [isAnimating, setIsAnimating] = useState(false)\r\n  const [showFullPythonCode, setShowFullPythonCode] = useState(false)\r\n\r\n  const push = () => {\r\n    if (stack.length >= maxSize) {\r\n      setOperationHistory(prev => [...prev, \"Error: Stack is full!\"])\r\n      return\r\n    }\r\n    if (!inputValue || isNaN(Number(inputValue))) {\r\n      setOperationHistory(prev => [...prev, \"Error: Please enter a valid number!\"])\r\n      return\r\n    }\r\n\r\n    setIsAnimating(true)\r\n    const newElement = { value: Number(inputValue), isHighlighted: true }\r\n    setStack(prev => [...prev, newElement])\r\n    setOperationHistory(prev => [...prev, `Pushed ${inputValue} to stack`])\r\n    setInputValue(\"\")\r\n\r\n    setTimeout(() => {\r\n      setStack(prev => prev.map(el => ({ ...el, isHighlighted: false })))\r\n      setIsAnimating(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const pop = () => {\r\n    if (stack.length === 0) {\r\n      setOperationHistory(prev => [...prev, \"Error: Stack is empty!\"])\r\n      return\r\n    }\r\n\r\n    setIsAnimating(true)\r\n    const poppedValue = stack[stack.length - 1].value\r\n    setStack(prev => prev.slice(0, -1))\r\n    setOperationHistory(prev => [...prev, `Popped ${poppedValue} from stack`])\r\n\r\n    setTimeout(() => {\r\n      setIsAnimating(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const peek = () => {\r\n    if (stack.length === 0) {\r\n      setOperationHistory(prev => [...prev, \"Error: Stack is empty!\"])\r\n      return\r\n    }\r\n\r\n    setIsAnimating(true)\r\n    const topValue = stack[stack.length - 1].value\r\n    setStack(prev => prev.map((el, idx) => \r\n      idx === prev.length - 1 ? { ...el, isHighlighted: true } : el\r\n    ))\r\n    setOperationHistory(prev => [...prev, `Peeked at ${topValue}`])\r\n\r\n    setTimeout(() => {\r\n      setStack(prev => prev.map(el => ({ ...el, isHighlighted: false })))\r\n      setIsAnimating(false)\r\n    }, 1000)\r\n  }\r\n\r\n  const isEmpty = () => {\r\n    const empty = stack.length === 0\r\n    setOperationHistory(prev => [...prev, `Stack is ${empty ? \"empty\" : \"not empty\"}`])\r\n  }\r\n\r\n  const isFull = () => {\r\n    const full = stack.length >= maxSize\r\n    setOperationHistory(prev => [...prev, `Stack is ${full ? \"full\" : \"not full\"}`])\r\n  }\r\n\r\n  const size = () => {\r\n    setOperationHistory(prev => [...prev, `Stack size: ${stack.length}`])\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-white to-slate-100\">\r\n      <header className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"p-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg\">\r\n              <Layers className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent\">\r\n              Stack Operations Visualizer\r\n            </h1>\r\n          </div>\r\n          <p className=\"mt-2 text-gray-600\">Visualize stack operations step by step</p>\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"max-w-7xl mx-auto py-8 px-4 sm:px-6 lg:px-8\">\r\n        {/* Stack Operations Information */}\r\n        <div className=\"mb-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {stackOperations.map((operation) => {\r\n            const [showCode, setShowCode] = useState(false)\r\n            return (\r\n              <div\r\n                key={operation.name}\r\n                className=\"bg-white rounded-lg shadow-md p-4 border border-gray-200\"\r\n              >\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2 flex justify-between items-center\">\r\n                  {operation.name}\r\n                  <button \r\n                    onClick={() => setShowCode(!showCode)}\r\n                    className=\"text-blue-500 hover:text-blue-700 text-sm\"\r\n                  >\r\n                    {showCode ? \"Hide Code\" : \"Show Code\"}\r\n                  </button>\r\n                </h3>\r\n                <p className=\"text-gray-600 mb-2\">{operation.description}</p>\r\n                <div className=\"text-sm text-gray-500\">\r\n                  <div>Time Complexity: {operation.timeComplexity}</div>\r\n                  <div>Space Complexity: {operation.spaceComplexity}</div>\r\n                </div>\r\n                {showCode && (\r\n                  <div className=\"mt-4 bg-gray-100 p-3 rounded-md overflow-x-auto\">\r\n                    <pre><code className=\"lang-python text-sm\">{operation.pythonCode}</code></pre>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"mb-8 p-6 bg-white rounded-2xl shadow-lg border border-gray-200\">\r\n          <h2 className=\"text-xl font-bold text-gray-900 mb-4 flex justify-between items-center\">\r\n            Full Stack Python Implementation\r\n            <button\r\n              onClick={() => setShowFullPythonCode(!showFullPythonCode)}\r\n              className=\"text-blue-500 hover:text-blue-700 text-sm\"\r\n            >\r\n              {showFullPythonCode ? \"Hide Full Code\" : \"Show Full Code\"}\r\n            </button>\r\n          </h2>\r\n          {showFullPythonCode && (\r\n            <div className=\"mt-4 bg-gray-100 p-3 rounded-md overflow-x-auto\">\r\n              <pre><code className=\"lang-python text-sm\">{'class Stack:\\n    def __init__(self, capacity=10):\\n        self.stack = []\\n        self.capacity = capacity\\n\\n    def is_empty(self):\\n        return len(self.stack) == 0\\n\\n    def is_full(self):\\n        return len(self.stack) == self.capacity\\n\\n    def push(self, item):\\n        if self.is_full():\\n            print(\"Error: Stack is full!\")\\n            return False\\n        self.stack.append(item)\\n        print(f\"Pushed: {item}\")\\n        return True\\n\\n    def pop(self):\\n        if self.is_empty():\\n            print(\"Error: Stack is empty!\")\\n            return None\\n        item = self.stack.pop()\\n        print(f\"Popped: {item}\")\\n        return item\\n\\n    def peek(self):\\n        if self.is_empty():\\n            print(\"Error: Stack is empty!\")\\n            return None\\n        item = self.stack[-1]\\n        print(f\"Peeked: {item}\")\\n        return item\\n\\n    def size(self):\\n        return len(self.stack)\\n\\n    def display(self):\\n        if self.is_empty():\\n            print(\"Stack: []\")\\n        else:\\n            print(\"Stack:\", self.stack)'}</code></pre>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Stack Visualization */}\r\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Stack Visualization</h2>\r\n            \r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"max-size\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Maximum Stack Size\r\n              </label>\r\n              <input\r\n                id=\"max-size\"\r\n                type=\"number\"\r\n                value={maxSize}\r\n                onChange={(e) => setMaxSize(Math.max(1, Number(e.target.value)))}\r\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n                min=\"1\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mb-4\">\r\n              <label htmlFor=\"input-value\" className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                Value to Push\r\n              </label>\r\n              <input\r\n                id=\"input-value\"\r\n                type=\"number\"\r\n                value={inputValue}\r\n                onChange={(e) => setInputValue(e.target.value)}\r\n                className=\"w-full px-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Enter a number\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"flex flex-wrap gap-2 mb-6\">\r\n              <button\r\n                onClick={push}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50\"\r\n              >\r\n                <Plus className=\"w-5 h-5 inline mr-1\" />\r\n                Push\r\n              </button>\r\n              <button\r\n                onClick={pop}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 disabled:opacity-50\"\r\n              >\r\n                <Minus className=\"w-5 h-5 inline mr-1\" />\r\n                Pop\r\n              </button>\r\n              <button\r\n                onClick={peek}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 disabled:opacity-50\"\r\n              >\r\n                <Eye className=\"w-5 h-5 inline mr-1\" />\r\n                Peek\r\n              </button>\r\n              <button\r\n                onClick={isEmpty}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50\"\r\n              >\r\n                <AlertCircle className=\"w-5 h-5 inline mr-1\" />\r\n                Is Empty\r\n              </button>\r\n              <button\r\n                onClick={isFull}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 disabled:opacity-50\"\r\n              >\r\n                <CheckCircle2 className=\"w-5 h-5 inline mr-1\" />\r\n                Is Full\r\n              </button>\r\n              <button\r\n                onClick={size}\r\n                disabled={isAnimating}\r\n                className=\"px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:opacity-50\"\r\n              >\r\n                Size\r\n              </button>\r\n            </div>\r\n\r\n            {/* Stack Display */}\r\n            <div className=\"border-2 border-gray-300 rounded-lg p-4 min-h-[300px] flex flex-col-reverse\">\r\n              {stack.map((element, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`w-full h-12 mb-2 rounded-lg flex items-center justify-center text-white font-bold transition-all duration-300 ${\r\n                    element.isHighlighted\r\n                      ? \"bg-green-500 transform scale-105\"\r\n                      : \"bg-blue-500\"\r\n                  }`}\r\n                >\r\n                  {element.value}\r\n                </div>\r\n              ))}\r\n              {stack.length === 0 && (\r\n                <div className=\"text-gray-400 text-center my-auto\">Stack is empty</div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Operation History */}\r\n          <div className=\"bg-white rounded-2xl shadow-lg border border-gray-200 p-6\">\r\n            <h2 className=\"text-xl font-bold text-gray-900 mb-4\">Operation History</h2>\r\n            <div className=\"h-[500px] overflow-y-auto border rounded-lg p-4\">\r\n              {operationHistory.map((operation, index) => (\r\n                <div\r\n                  key={index}\r\n                  className={`p-2 mb-2 rounded-lg ${\r\n                    operation.startsWith(\"Error\")\r\n                      ? \"bg-red-100 text-red-700\"\r\n                      : \"bg-gray-100 text-gray-700\"\r\n                  }`}\r\n                >\r\n                  {operation}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default StackVisualizerPage "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}